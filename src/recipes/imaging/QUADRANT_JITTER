#+
# Name:
#    QUADRANT_JITTER

# Purpose:
#    Reduces a "Quadrant Jitter" observation, including object masking.

# Language:
#    Perl5

# Description:
#    This script reduces a "quadrant jitter" photometry observation
#    with near-infrared imaging data.  It takes an imaging observation comprising
#    one or more series of four object frames where the target is
#    approximately centred in each quadrant; and a dark frame to make
#    a calibrated, untrimmed mosaic automatically.

#    It performs bad-pixel masking, null debiassing, dark subtraction,
#    flat-field creation and division, feature detection and matching
#    between object frames, and resampling.   See the "Notes" for
#    further information.

#    This recipe is suitable for faint objects or objects within
#    a comparatively bright core embedded in faint extended emission,
#    e.g. a quasar; or extended objects less than 45 arcseconds across
#    with UFTI, 10 arcseconds with IRCAM, and 2 arcminutes with IRIS2.
#    The object need not be
#    isolated, as the recipe masks objects within the other quadrants,
#    and hence does not introduce significant artifacts into the flat
#    field.  For isolated objects use QUADRANT_JITTER_NO_MASK; or where
#    speed is critical, use QUADRANT_JITTER_BASIC instead.

# Notes: 
#    -  A World Co-ordinate System (WCS) using the AIPS convention is 
#    created in the headers should no WCS already exist.
#    -  For IRCAM, old headers are reordered and structured with
#    headings before groups of related keywords.  The comments have
#    units added or appear in a standard format.  Four deprecated
#    deprecated are removed.  FITS-violating headers are corrected.
#    Spurious instrument names are changed to IRCAM3.
#    -  The bad-pixel mask applied is $ORAC_DATA_CAL/bpm.
#    -  Each dark-subtracted frame has thresholds applied beyond which
#    pixels are flagged as bad.  The lower limit is 5 standard 
#    deviations below the mode, but constrained to the range -100 to 1.
#    The upper limit is 1000 above the saturation limit for the detector
#    in the mode used.
#    -  The flat field is created iteratively.  First the quadrant
#    containing the object is masked in each object frame.  Second an
#    approximate flat field is created by combining the normalised
#    and masked object frames using the clipped median at each pixel.
#    This flat field is applied to the object frames.  Sources within
#    the flat-fielded frames are detected, and masked in the
#    dark-subtracted frames.  The second stage is repeated but applied
#    to the masked frames to create the final flat field.
#    -  Registration is performed using common point sources in the
#    overlap regions.  If the recipe cannot identify sufficient common
#    objects, it matches the centroid of the central source.  If this
#    fails, the script resorts to using the telescope offsets
#    transformed to pixels.
#    -  The resampling applies non-integer shifts of origin using
#    bilinear interpolation.  There is no rotation to align the
#    Cartesian axes with the cardinal directions.
#    -  The recipe makes the mosaics by applying offsets in intensity
#    to give the most consistent result amongst the overlapping regions.
#    The mosaic is not trimmed to the dimensions of a single frame.  Thus
#    the noise will be greater in the peripheral areas having received
#    less exposure time.  The full signal will be in the central ninth
#    containing the main object.  The mosaic is not normalised by its
#    exposure time (that being the exposure time of a single frame).
#    -  For each cycle of four, the recipe creates a mosaic, which has
#    its bad pixels filled and is then added into a master mosaic of
#    improving signal to noise.  The exposure time is also summed and
#    stored in the mosaic's corresponding header.  Likewise the end
#    airmass and end UT headers are updated to match that of the
#    last-observed frame contributing to the mosaic.
#    -  Intermediate frames are deleted except for the flat-fielded (_ff
#    suffix) frames.

# Output Data:
#    -  The integrated mosaic in <m><date>_<group_number>_mos, where <m>
#    is "gf" for UFTI and "gi" for IRCAM and IRIS2.  Before 2000 August these
#    were "g" and "rg" respectively.
#    -  A mosaic for each cycle of four in
#    <m><date>_<group_number>_mos<cycle_number>, where <cycle_number>
#    counts from 0.
#    -  The individual flat-fielded frames in <i><date>_<obs_number>_ff,
#    where <i> is "f" for UFTI and "i" for IRCAM.  Before 2000 August
#    IRCAM frames had prefix "ro". IRIS2 data are in <date><obs_number>_ff,
#    where <date> is in the form "ddmmm".
#    -  The created flat fields in flat_<filter>_<group_number> for the
#    first or only cycle, and flat_<filter>_<group_number>_c<cycle_number>
#    for subsequent cycles.

# Configurable Steering Parameters:
#    USEVAR = LOGICAL
#       Whether or not to create and propagate variance arrays.  [0]

# Timing:
#    {timing_information}

# Implementation Status:
#    -  The processing engines are from the Starlink packages: CCDPACK,
#    KAPPA, FIGARO, and EXTRACTOR.
#    -  Uses the Starlink NDF format.
#    -  History is recorded within the data files.
#    -  The title of the data is propagated through intermediate files
#    to the mosaic.
#    -  Error propagation is controlled by the USEVAR parameter.

# Related Recipes:
#    QUADRANT_JITTER_BASIC, QUADRANT_JITTER_NO_MASK, EXTENDED_3x3,
#    EXTENDED_5x5.

# References:
#    "Scripts for UFTI" G.S. Wright & S.K. Leggett, 1997 orac009-ufts, v01.

# Authors:
#    MJC: Malcolm J. Currie (UKATC/JAC)

# Copyright:
#    Copyright (C) 1998-2001 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-


# Startup
# =======

# Imaging-specific preliminaries, such as switching on history
# recording.
    _IMAGING_HELLO_

# Recipe-specific initialisation of data and tasks.  Set up steering
# control of the processing, namely when to make a flat, apply object
# masking, make a mosaic, and to specify the reference frame for
# normalisation.  Create WCS, if needed.
    _QUADRANT_JITTER_HELLO_

# Calibration
# ===========

# Subtract the dark frame.
    _SUBTRACT_DARK_

# Generate the flat field using the quadrant-jitter technique.  Apply
# it.  Mask the sources, and compute a new flat field.  Apply that
# flat field.
    _FLAT_FIELD_QUADRANT_JITTER_ MASK=1

# Mosaicking
# ==========

# Determine the linear offsets between the object frames in the group
# by pattern matching common features.  Register the frames using a shift
# of pixel origin.  Use a lower completeness than normal because each
# set of four has two 50% and two 25% overlaps.
    _GENERATE_OFFSETS_QUADRANT_JITTER_ PERCENTILE=99 COMPLETE=0.4 MINPIX=12

# Resample each frame, and tesselate single-cycle mosaic.  The mosaic is
# untrimmed to the dimensions of an input frame.  Add a single-cycle
# mosaic into the main mosaic, which is initially formed using the first
# single-cycle mosaic.  Fill bad pixels by interpolation.
    _MAKE_MOSAIC_QUADRANT_OPTIMISED_ RESAMPLE=1 INT_METHOD=linint FILLBAD=1

# Remove unwanted intermediate files.
    _QUADRANT_JITTER_TIDY_

# Podule
# ======

=head1 NAME

QUADRANT_JITTER -- "Quadrant Jitter" standard reduction including object masking.

=head1 DESCRIPTION

This script reduces a "quadrant jitter" photometry observation with
UKIRT imaging data.  It takes an imaging observation comprising one or
more series of four object frames where the target is approximately
centred in each quadrant; and a dark frame to make a calibrated,
untrimmed mosaic automatically.

It performs bad-pixel masking, null debiassing, dark subtraction,
flat-field creation and division, feature detection and matching
between object frames, and resampling.  See the L<"NOTES"> for
further information.

This recipe is suitable for faint objects or objects within a
comparatively bright core embedded in faint extended emission, e.g. a
quasar; or extended objects less than 45 arcseconds across with UFTI
and 10 arcseconds with IRCAM.  The object need not be isolated, as the
recipe masks objects within the other quadrants, and hence does not
introduce significant artifacts into the flat field.  For isolated
objects use L<QUADRANT_JITTER_NO_MASK|QUADRANT_JITTER_NO_MASK>; or
where speed is critical, use
L<QUADRANT_JITTER_BASIC|QUADRANT_JITTER_BASIC> instead.

=head1 NOTES

=over 4

=item *

A World Co-ordinate System (WCS) using the AIPS convention is 
created in the headers should no WCS already exist.

=item * 

For IRCAM, old headers are reordered and structured with
headings before groups of related keywords.  The comments have
units added or appear in a standard format.  Four deprecated
deprecated are removed.  FITS-violating headers are corrected.
Spurious instrument names are changed to IRCAM3.

=item *

The bad-pixel mask applied is F<$ORAC_DATA_CAL/bpm>.

=item * 

Each dark-subtracted frame has thresholds applied beyond which
pixels are flagged as bad.  The lower limit is 5 standard 
deviations below the mode, but constrained to the range -100 to 1.
The upper limit is 1000 above the saturation limit for the detector
in the mode used.

=item *

The flat field is created iteratively.  First the quadrant
containing the object is masked in each object frame.  Second an
approximate flat field is created by combining the normalised
and masked object frames using the clipped median at each pixel.
This flat field is applied to the object frames.  Sources within
the flat-fielded frames are detected, and masked in the
dark-subtracted frames.  The second stage is repeated but applied
to the masked frames to create the final flat field.

=item *

Registration is performed using common point sources in the
overlap regions.  If the recipe cannot identify sufficient common
objects, it matches the centroid of the central source.  If this
fails, the script resorts to using the telescope offsets
transformed to pixels.

=item *

The resampling applies non-integer shifts of origin using
bilinear interpolation.  There is no rotation to align the
Cartesian axes with the cardinal directions.

=item *

The recipe makes the mosaics by applying offsets in intensity
to give the most consistent result amongst the overlapping regions.
The mosaic is not trimmed to the dimensions of a single frame.  Thus
the noise will be greater in the peripheral areas having received
less exposure time.  The full signal will be in the central ninth
containing the main object.  The mosaic is not normalised by its
exposure time (that being the exposure time of a single frame).

=item *

For each cycle of four, the recipe creates a mosaic, which has its bad
pixels filled and is then added into a master mosaic of improving
signal to noise.  The exposure time is also summed and stored in the
mosaic's corresponding header.  Likewise the end airmass
and end UT headers are updated to match that of the last-observed
frame contributing to the mosaic.

=item *

Intermediate frames are deleted except for the flat-fielded (_ff
suffix) frames, and the flat fields.

=back

=head1 OUTPUT DATA

=over 4

=item *

The integrated mosaic in
E<lt>mE<gt>E<lt>dateE<gt>_E<lt>group_numberE<gt>_mos, where
E<lt>mE<gt> is "gf" for UFTI and "gi" for IRCAM.  Before 2000 August these
were "g" and "rg" respectively.

=item *

A mosaic for each cycle of four in
E<lt>mE<gt>E<lt>dateE<gt>_E<lt>group_numberE<gt>_mosE<lt>cycle_numberE<gt>,
where E<lt>cycle_numberE<gt> counts from 0.

=item *

The individual flat-fielded frames in
E<lt>iE<gt>E<lt>dateE<gt>_E<lt>obs_numberE<gt>_ff, where E<lt>iE<gt>
is "f" for UFTI and "i" for IRCAM.  Before 2000 August
IRCAM frames had prefix "ro".

=item *

The created flat fields in flat_E<lt>filterE<gt>_E<lt>group_numberE<gt> for the
first or only cycle, and
flat_E<lt>filterE<gt>_E<lt>group_numberE<gt>_cE<lt>cycle_numberE<gt> for
subsequent cycles.

=back

=head1 CONFIGURABLE STEERING PARAMETERS

=over 4

=item USEVAR = LOGICAL

Whether or not to create and propagate variance arrays.  [0]

=back

=head1 IMPLEMENTATION STATUS

=over 4

=item *

The processing engines are from the Starlink packages: CCDPACK,
KAPPA, FIGARO, and EXTRACTOR.

=item *

Uses the Starlink NDF format.

=item *

History is recorded within the data files.

=item *

The title of the data is propagated through intermediate files
to the mosaic.

=item *

Error propagation is controlled by the USEVAR parameter.

=back

=head1 RELATED RECIPES

L<QUADRANT_JITTER_BASIC|QUADRANT_JITTER_BASIC>,
L<QUADRANT_JITTER_NO_MASK|QUADRANT_JITTER_NO_MASK>,
L<EXTENDED_3x3|EXTENDED_3x3>,
L<EXTENDED_5x5|EXTENDED_5x5>.

=head1 REFERENCES

"I<Scripts for UFTI>" G.S. Wright & S.K. Leggett, 1997 orac009-ufts, v01.

=head1 AUTHORS

Malcolm J. Currie (UKATC/JAC) (mjc@jach.hawaii.edu)

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
