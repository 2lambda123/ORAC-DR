#+
# Name:
#    SKY_FLAT_FP

# Purpose:
#    Creates and files a flat field derived from eight frames using
#    object masking to reduce artifacts.

# Language:
#    Perl5

# Description:
#    This recipe make a sky flat for UFTI or IRCAM from a series of
#    eight sky or object frames combined using one of a selection of
#    statistics.  It is intended to be used to make a flat for
#    Fabry-Perot data.
#
#    It performs a null debiassing, bad-pixel masking, and dark
#    subtraction before combining the sky frames pixel by pixel to
#    make the flat.  See the "Notes" for further details.  The parameters
#    of the flat are filed in the index of flats for future selection
#    and use of the flat.
#
#    For best results the field observed should contain few stars and no
#    bright ones.

# Notes:
#    -  A World Co-ordinate System (WCS) using the AIPS convention is 
#    created in the headers should no WCS already exist.
#    -  For IRCAM, old headers are reordered and structured with
#    headings before groups of related keywords.  The comments have
#    units added or appear in a standard format.  Four deprecated
#    deprecated are removed.  FITS-violating headers are corrected.
#    Spurious instrument names are changed to IRCAM3.
#    -  The bad-pixel mask applied is $ORAC_DATA_CAL/bpm.
#    -  Each dark-subtracted frame has thresholds applied beyond which
#    pixels are flagged as bad.  The lower limit is 5 standard 
#    deviations below the mode, but constrained to the range -100 to 1.
#    The upper limit is 1000 above the saturation limit for the detector
#    in the mode used.
#    -  The flat field is created iteratively.  First an approximate
#    flat-field is created by combining normalised sky frames using
#    the median at each pixel.  This flat field is applied to the sky
#    frames.  Sources within the flat-fielded frames are detected, and
#    masked in the dark-subtracted frames.  The first stage is repeated
#    but applied to the masked frames to create the final flat field.
#    -  Intermediate frames are deleted.
#    -  Sub-arrays are supported.

# Output Data:
#    -  The created flat field in flat_<filter>_<group_number> for the
#    first or only cycle, and flat_<filter>_<group_number>_c<cycle_number>
#    for subsequent recipe cycles.  Token <filter> is the filter name,
#    <group_number> is the frame number of the group, and <cycle_number>
#    is the number of the cycle, counting from one.
#    -  The flats are filed in $ORAC_DATA_OUT/index.flat.

# Timing:
#    {timing_information}

# Implementation Status:
#    -  The processing engines are from the Starlink packages CCDPACK,
#    KAPPA, and PISA.
#    -  Uses the Starlink NDF format.
#    -  History is recorded within the data files.
#    -  The title of the data is propagated through the intermediate file
#    to the flat.
#    -  Error propagation is not used.

# References:
#    "Scripts for UFTI" G.S. Wright & S.K. Leggett, 1997 orac009-ufts, v01.

# Related Recipes:
#    SKY_FLAT, SKY_FLAT_MASKED.

# Authors:
#    MJC: Malcolm J. Currie (UKATC/JAC)
#
# Copyright:
#    Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Startup
# =======
#
# Every recipe must do this.
    _IMAGING_HELLO_

# Create WCS, if needed.
    _CREATE_WCS_

# Recipe-specific initialisation.
    _SKY_FLAT_HELLO_

# Set up steering control of the processing, namely when to make a flat.
# Here assume that the jitter is 8.  Will make a flat once all eight frames
# are obtained.
    _SKY_FLAT_STEER_ NUMBER=8

# Calibration
# ===========
#
# The following operations are preformed for every appropriate frame.

# Apply the bad-pixel mask.
    _MASK_BAD_PIXELS_

# Remove the bias.
    _REMOVE_BIAS_

# Subtract the dark frame.
    _SUBTRACT_DARK_

# Form flat field
# ===============

# Generate an approximate flat field by using the sky frames.
# Apply the flat field.  Mask the sources, and compute a new flat field
# using the masked frames.  Finally apply that flat field.
    _FLAT_FIELD_MASKED_GROUP_

# Remove intermediate data files.
    _SKY_FLAT_TIDY_

# Podule
# ======

=head1 NAME

SKY_FLAT_FP -- Creates and files a flat field derived from eight frames using object masking to reduce artifacts.

=head1 DESCRIPTION

This recipe make a sky flat for UFTI or IRCAM from a series of
eight sky or object frames combined using one of a selection of
statistics.  It is intended to be used to make a flat for
Fabry-Perot data.

It performs a null debiassing, bad-pixel masking, and dark subtraction
before combining the sky frames pixel by pixel to make the flat. See
the L<"NOTES"> for further details.  The parameters of the flat are
filed in the index of flats for future selection and use of the flat.

For best results the field observed should contain few stars and no
bright ones.

=head1 NOTES

=over 4

=item *

A World Co-ordinate System (WCS) using the AIPS convention is 
created in the headers should no WCS already exist.

=item * 

For IRCAM, old headers are reordered and structured with
headings before groups of related keywords.  The comments have
units added or appear in a standard format.  Four deprecated
deprecated are removed.  FITS-violating headers are corrected.
Spurious instrument names are changed to IRCAM3.

=item *

The bad-pixel mask applied is F<$ORAC_DATA_CAL/bpm>.

=item * 

Each dark-subtracted frame has thresholds applied beyond which
pixels are flagged as bad.  The lower limit is 5 standard 
deviations below the mode, but constrained to the range -100 to 1.
The upper limit is 1000 above the saturation limit for the detector
in the mode used.

=item *

The flat field is created iteratively.  First an approximate flat
field is created by combining normalised sky frames using the
median at each pixel.  This flat field is applied to the sky frames
Sources within the flat-fielded frames are detected, and masked in the
dark-subtracted frames.  The first stage is repeated but applied to the
masked frames to create the final flat field.

=item *

Intermediate frames are deleted.

=item *

Sub-arrays are supported.

=back

=head1 OUTPUT DATA

=over 4

=item *

The created flat fields in flat_E<lt>filterE<gt>_E<lt>group_numberE<gt> for the
first or only cycle, and flat_E<lt>filterE<gt>_E<lt>group_numberE<gt>_cE<lt>cycle_numberE<gt>
for subsequent recipe cycles.  Token E<lt>filterE<gt> is the filter name,
E<lt>group_numberE<gt> is the frame number of the group, and E<lt>cycle_numberE<gt>
is the number of the cycle, counting from one.

=item *

The flats are filed in F<$ORAC_DATA_OUT/index.flat>.

=back

=head1 TIMING

TBS

=head1 IMPLEMENTATION STATUS

=over 4

=item *

The processing engines are from the Starlink packages CCDPACK,
KAPPA, and PISA.

=item *

Uses the Starlink NDF format.

=item *

History is recorded within the data files.

=item *

The title of the data is propagated through the intermediate file
to the dark.

=item *

Error propagation is not used.

=back

=head1 REFERENCES

"I<Scripts for UFTI>" G.S. Wright & S.K. Leggett, 1997 orac009-ufts, v01.

=head1 RELATED RECIPES

L<SKY_FLAT|SKY_FLAT>,
L<SKY_FLAT_MASKED|SKY_FLAT_MASKED>.

=head1 AUTHORS

Malcolm J. Currie (UKATC/JAC) (mjc@jach.hawaii.edu)

=head1 COPYRIGHT

Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
