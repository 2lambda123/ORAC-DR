# -*-cperl-*-

=head1 NAME

REDUCE_SCAN_FAINT_POINT_SOURCES_JACKKNIFE - Process blank field data with a jack-knife-based method

=head1 DESCRIPTION

This recipe processed SCAN data and uses a jack-knife method to remove
residual low-spatial frequency noise and create an optimal
matched-filtered output map. The recipe proceeds as follows:

=over 2

=item *

Each observation is processed twice using the specified parameters,
the second time with an artificial point source added to the
timeseries, to create a signal map and an effective PSF image.

=item *

These images are coadded (like with like) to produce a total signal
map and a total effective PSF image. The amplitude of the source in
the effective PSF image is compared with the input value to assess the
effect the map-making process has on a point source. This ratio is
used to scale the FCF later when calibrating the data.

=item *

The observations are divided into two groups which are coadded
separately. These coadds are subtracted from one another to create the
C<jack-knife> map.

=item *

The angular power spectrum of the jack-knife map (which should consist
purely of noise) is calculated and used to remove residual low-spatial
frequency noise from the signal map and the effective PSF. This is the
so-called C<whitening> step (because it produces a map which has a
noise power spectrum that is white).

=item *

The data are calibrated in mJy/beam using a corrected FCF.

=item *

The whitened signal map is processed with a matched filter using the
whitened PSF image as the PSF.

=item *

The jack-knife map is also whitened and processed with the matched
filter. This map should consist purely of noise.

=item *

Signal-to-noise ratio maps are created for the filtered versions of
the signal map and the jack-knife map.

=back

The outcome (the match-filtered whitened signal map) should be the
optimal map with white noise properties. This is the map to be used
for science goals.

This recipe generates a large number of output files. There will be
two for each observation (the signal map and the effective PSF map), a
total signal coadd, an effective PSF coadded from all the individual
effective PSF maps, a jackknife map, a whitened signal map, a
calibrated whitened signal map, a matched-filtered calibrated whitened
signal map and a signal-to-noise ratio map created from it.

=head1 NOTES

=over 2

=item *

This recipe should only be given data for a single source, and a
single field.

=item *

Ideally there should be an even number of observations.

=item *

Alternative configuration parameters for the iterative map-maker may
be specified using the recipe parameters outlined below.

=item *

This recipe may be called via the shorter name C<FAINT_POINT_SOURCES_JACKKNIFE>.

=item *

For large amounts of data this recipe will spend a long time not
updating the ORAC-DR window. Check to see that C<makemap> is still
processing by running C<top> or C<ps>. (Running with -log sf is
recommended.)

=back

=head1 DISPLAY

No results are displayed.

=head1 AVAILABLE PARAMETERS

The following recipe parameters can be set via the --recpars option:

=over 2

=item FAKEMAP_CONSTSNR

A flag to scale the gaussian in amplitude by the square-root of the
number of maps to be created by the recipe so that the signal-to-noise
ratio of the final map-filtered PSF is independent of the number of
observations. Default is 1.

=item FAKEMAP_FWHM

FWHM (in arcsec) of a gaussian to add to the timeseries. Default is to
use the appropriate telescope main beam FWHM.

=item FAKEMAP_OFFSET

The offsets (in arcsec) to apply to the fake source added to the
timeseries. If one value is given, it will be used for both
axes. Default is to apply no shift.

=item FAKEMAP_SCALE

Amplitude of the fake source (in Jy/beam) added to the timeseries to
assess the map-making response to a point source. Default is 10/50
Jy/beam at 850/450 um respectively.

=item MAKEMAP_CONFIG

Name of a config file for use with the SMURF makemap task. The file
must exist in the current working directory, C<$MAKEMAP_CONFIG_DIR>,
C<$ORAC_DATA_OUT>, C<$ORAC_DATA_CAL> or C<$STARLINK_DIR/share/smurf>.

=item MAKEMAP_PIXSIZE

Pixel size in arcsec for the output map. Default is wavelength
dependent (4 arcsec at 850 um, 2 arcsec at 450 um). Note that the
timeseries will be downsampled to match this scale during the
map-making process.

=item WHITEN_BOX

Size of the region used to calculate the angular power spectrum for
removing residual low-frequency noise in the data. Default is a square
region bounded by the noise being less than twice the minimum value.

=back

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2012-2013 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard SCUBA-2 introduction
_SCUBA2_HELLO_

# Recipe parameters - check the fakemap namespace too for parameters
# relevant to defining the artifical source for constructing the
# effective PSF
_REDUCE_SCAN_STEER_ FAKEMAP=1

# Create an image...
_MAKEMAP_FRAME_ CONFIG_TYPE=BLANK_FIELD

# ...and an effective PSF for this observation
_MAKEMAP_FRAME_PSF_ CONFIG_TYPE=BLANK_FIELD

# Everything below here should only take place once all the data have
# been reduced and is reproduced in the PICARD recipe SCUBA2_JACKKNIFE

# Create the group coadd and the effective PSF
_MAKE_MOSAIC_GROUP_PSF_

# Apply corrected calibration factors
_CALIBRATE_DATA_ GROUP=1 UNITS=BEAM

# Create a jack-knife map to estimate the noise properties
_CREATE_JACKKNIFE_MAP_

# Now whiten the jack-knife map and check its noise properties
_CHECK_JACKKNIFE_NOISE_

# Apply whitening filter to coadd
_WHITEN_IMAGE_ GROUP=1

# Apply whitening filter to the effective PSF
_WHITEN_IMAGE_ GROUP=1 TAG=PSF

# Finally apply matched filter to the whitened coadd, using the
# whitened effective PSF
_APPLY_MATCHED_FILTER_ GROUP=1 SMOOTH=0

# Calculate and report the noise in the filtered map
_CALC_IMAGE_NOISE_ GROUP=1 LOGFILE=0 METHOD=VAR

# Create S/N image
_CALC_SCUBA2_SNR_ GROUP=1 VERBOSE=1

# Find sources and create a catalogue from the Group image. Trim it to
# the specified map size first to avoid spurious detections near the
# map edge.
_CREATE_SOURCE_CATALOGUE_ METHOD=FELLWALKER GROUP=1 CROP=1 DETECT=4

# Tidy up but keep most files on disk
_DELETE_TEMP_FILES_ KEEP=_fmos,_mappsf,_wmos,_wpsf,_cal,_mf,_snr,_whiten ALSOGRP=1
