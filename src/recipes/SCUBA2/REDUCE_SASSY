# -*-cperl-*-

=head1 NAME

REDUCE_SASSY - Process data for the SASSy project

=head1 DESCRIPTION

This is the recipe for processing data taken for the SCUBA-2
C<All-Sky> Survey (SASSy). The aim of SASSy is to map as much of the
sky at 850 um as possible, focussing on the Outer Galaxy covering the
Galactic longitude from 120 to 240 degrees. Each input map covers a
2x2 sq degrees

Raw data are passed to the map maker which are processed to produce an
image, which is calibrated in mJy/beam. Once all the data for a given
target have been processed, the individual images are coadded using
inverse-variance weighting. The noise properties of the coadd are
calculated and written to a log file, C<log.noise>.

The coadd has a matched-filter applied (to highlight compact sources)
and is then passed to the Fellwalker source-finding algorithm to pick
out sources at or above the 5-sigma level. A catalogue is written to
disk if sources were found.

=head1 NOTES

=over 2

=item *

The image noise and and NEFD are stored in C<log.noise> and
C<log.nefd> respectively.

=item *

For large amounts of data this recipe will spend a long time not
updating the ORAC-DR output. Check to see that C<makemap> is still
processing by running C<top> or C<ps>.

=item *

Alternative configuration parameters for the iterative map-maker may
be specified using the recipe parameters outlined below.

=item *

The output map is calibrated in units of mJy/beam.

=back

=head1 DISPLAY

None.

=head1 AVAILABLE PARAMETERS

The following parameters can be set via the --recpars option:

=over 2

=item FINDCLUMPS_CFG

Name of a config file for use with the CUPID C<findclumps> task. The
file must exist in the current working directory,
C<$FINDCLUMPS_CONFIG_DIR> or C<$ORAC_DATA_OUT>.

=item MAKEMAP_CONFIG

Name of a config file for use with the SMURF makemap task. The file
must exist in the current working directory, C<$MAKEMAP_CONFIG_DIR> or
C<$ORAC_DATA_OUT>.

=back

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2011-2014 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard introduction
_SCUBA2_HELLO_

# Set steering parameters
_REDUCE_SCAN_STEER_

# Create a map with the iterative map-maker using all available
# data. The config type will be superoceded by the presence of the
# MAKEMAP_CONFIG recipe parameter if given.
_MAKEMAP_FRAME_ METHOD=ITER CONFIG_TYPE=BLANK_FIELD

# Calibrate data using standard FCFs
_CALIBRATE_DATA_

# Tag the current Frame file as the reduced product
_TAG_AS_REDUCED_PRODUCT_ UPDATE=1 GRAPHIC=1

# Determine the median noise from the variance in the image
_CALC_IMAGE_NOISE_ METHOD=VARIANCE GROUP=0

# Calculate an NEFD from the current Frame
_CALCULATE_NEFD_ GROUP=0

# Create the Group image once the last Frame has been processed. Use
# nearest-neighbour resampling by default to ensure a robust noise
# estimate.
_MAKE_MOSAIC_GROUP_BATCH_

# Now apply the matched filter to the group coadd
_APPLY_MATCHED_FILTER_ GROUP=1

# Tag the matched-filtered group file as the reduced product
_TAG_AS_REDUCED_PRODUCT_ UPDATE=1 GROUP=1 GRAPHIC=1

# Calculate an NEFD from the current Group
_CALCULATE_NEFD_ GROUP=1

# Determine the mean noise from the variance in the Group image
_CALC_IMAGE_NOISE_ METHOD=VARIANCE GROUP=1

# Find sources and create a catalogue from the Group matched-filtered
# image
_CREATE_SOURCE_CATALOGUE_ METHOD=FELLWALKER GROUP=1

# Delete any temporary and intermediate files, keeping only the
# reduced data products
_DELETE_TEMP_FILES_ KEEP=_reduced ALSOGRP=1
