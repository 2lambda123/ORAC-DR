# -*-cperl-*-

=head1 NAME

REDUCE_POINTING_QL - QL processing of POINTING observations

=head1 DESCRIPTION

This recipe processes data from a POINTING observation with the data
obtained in Quick-Look mode.

For DREAM/STARE, the images from the individual subarrays are
combined, sky emission removed (assuming a simple DC offset) and
corrected for extinction.

SCAN-mode data are passed to the iterative map-maker. Fast-ramp
flatfield files are processed and stored so the iterative map-maker
can use them.

The image is cropped to 150 arcsec on a side and any residual
background is removed (if necessary). If the source is a known
calibrator, the pipeline calculates FCFs. The image is then calibrated
and a flag flag file written to allow the POINTING_FOCUS task at the
summit to derive pointing offsets.

For additional record keeping the source position is fitted to derive
offsets in Azimuth and Elevation from the nominal (0,0)
position. These offsets are written as a C<JCMT::Pointing> extension
in the coadd, and to a log file. Note, however, that these may not be
identical to those derived by the telescope POINTING_FOCUS task. The
recipe also determines the beam size and the flux conversion factor
(FCF), which are also written to their respective log files.

=head1 NOTES

=over 2

=item *

The pointing offsets, beam size and FCF are written to the log files
C<log.pointing>, C<log.beam> and C<log.fcf>.

=item *

Fast-ramp flatfield data are processed and results written to the log
file C<log.flatfield>.

=item *

The pointing offsets are calculated from the centroid position and a
fit to the source. They are written into the output file as a
C<JCMT::Pointing> extension as an initial guess for the POINTING_FOCUS
task.

=back

=head1 DISPLAY

The coadd is displayed in Gaia window 2; its variance is displayed in
window 3.

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,

=head1 COPYRIGHT

Copyright (C) 2008-2011,2013 University of British Columbia. All
Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard intro
_SCUBA2_HELLO_

# Set the QUICKLOOK flag
_QUICK_LOOK_STEER_

# Calculate the RMS difference between actual and demand azimuth
_CALC_RMS_ACTUAL_DEMAND_

# Process the initial dark noise
_PROCESS_DARK_NOISE_

# Process any fast-ramp flatfield data - but do not write a flag file
_PROCESS_FASTFLAT_ WRITEFLAG=0

# For DREAM/STARE QL, the Frame consists of (up to) only 4 (related)
# files collected as DRAMA parameters so there is no need to collate
# related images. Therefore, make the Frame mosaic first so that
# subsequent primitives only have a single file to deal with. This
# results in a noticeable speedup. Use a bilinear pixel-spreading
# scheme to maybe better define the peak position. SCAN QL uses
# makemap with a custom config file.
_CREATE_IMAGE_FRAME_ SPREAD=BILINEAR SYSTEM=AZEL METHOD=QL

# Remove sky, assume it's just a DC offset. This step will be ignored
# for SCAN data as it will have been carried out in qlmakemap.
_REMOVE_DC_SKY_ METHOD=MEAN VERBOSE=0

# Correct for extinction, using a single value across the entire image
# This step will be ignored for SCAN data (see above).
_EXTINCTION_CORRECT_FRAME_ EXTCOR=QUICKER

# Trim images to a given size - 150 arcsec is necessary if calculating
# an FCF
_CROP_IMAGE_ALL_ HEIGHT=150 WIDTH=150

# Determine an FCF
_FIND_CALIBRATION_MAP_

# Calibrate data in mJy/beam using default FCF, though this is not
# strictly necessary
_CALIBRATE_DATA_

# Create Group file - when a new Group file is created, the NEWIMAGE
# tag is set to allow pointing offsets and the beam size to be
# determined.
_MAKE_MOSAIC_GROUP_ COADD_MODE=RUNNING

# Display it
_DISPLAY_GROUP_

# Determine beam properties
_FIND_BEAM_SIZE_ GROUP=1 OBSEND=0

# Determine the pointing offsets and write a flag file for the
# JCMT POINTING_FOCUS task
_FIND_POINTING_OFFSETS_

# Delete temporary files, keeping calibrated files, flatfield
# solutions and the results of the matched filter. Note that the last
# file created by the frame will not be deleted because it is never
# replaced by anything so will never get pushed onto the intermediates
# array
_DELETE_TEMP_FILES_ KEEP=_cal,_mos,_flat ALSOGRP=1
