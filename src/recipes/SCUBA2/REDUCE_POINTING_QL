# -*-cperl-*-

=head1 NAME

REDUCE_POINTING_QL - QL processing of pointing observations

=head1 DESCRIPTION

This recipe creates an image from a POINTING observation with the data
obtained in Quick-Look mode.

For DREAM/STARE, the images from the individual subarrays are
combined, sky emission removed (assuming a simple DC offset) and
corrected for extinction. SCAN-mode data are passed to the iterative
map-maker. Fast-ramp flatfield files are processed and stored so the
iterative map-maker can use them.

The image is calibrated and a flag flag file written to allow the
POINTING_FOCUS task at the summit to derive pointing offsets. The
image is cropped to 60 arcsec on a side and any residual background is
removed.

For additional record keeping, a matched-filter is applied and the
source position is fitted to derive offsets in Azimuth and Elevation
from the nominal (0,0) position. These offsets are written to a log
file. Note, however, that these may not be identical to those derived
by the telescope POINTING_FOCUS task. The recipe also determines the
beam size and the flux conversion factor (FCF), which are also written
to their respective log files.

=head1 NOTES

=over 2

=item *

The pointing offsets, beam size and FCF are written to the log files
C<log.pointing>, C<log.beam> and C<log.fcf>.

=item *

Fast-ramp flatfield data are processed and results written to the log
file C<log.flatfield>.

=item *

The pointing offsets can be calculated from the centroid position or
from a fit to the source: see the C<METHOD> parameter for
_FIND_POINTING_OFFSETS_. The default is to determine the centroid.

=back

=head1 DISPLAY

The Frame image is not displayed.

The Group image is displayed in Gaia window 2; its variance is
displayed in window 3.

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,

=head1 COPYRIGHT

Copyright (C) 2008-2010 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard intro
_SCUBA2_HELLO_

# Set the QUICKLOOK flag
_QUICK_LOOK_STEER_

# Process any fast-ramp flatfield data
_PROCESS_FASTFLAT_

# For DREAM/STARE QL, the Frame consists of (up to) only 4 (related)
# files collected as DRAMA parameters so there is no need to collate
# related images. Therefore, make the Frame mosaic first so that
# subsequent primitives only have a single file to deal with. This
# results in a noticeable speedup. Use a bilinear pixel-spreading
# scheme to maybe better define the peak position. SCAN QL uses
# makemap with a custom config file.
_CREATE_IMAGE_FRAME_ SPREAD=BILINEAR SYSTEM=AZEL METHOD=QL

# Remove sky, assume it's just a DC offset. This step will be ignored
# for SCAN data as it will have been carried out in qlmakemap.
_REMOVE_DC_SKY_ METHOD=MEAN VERBOSE=0

# Correct for extinction, using a single value across the entire image
# This step will be ignored for SCAN data (see above).
_EXTINCTION_CORRECT_FRAME_ EXTCOR=QUICKER

# Trim images to a given size - 60 arcsec seems to work well at
# suppressing artefacts around the map edges and improving the chance
# of a successful fit
_CROP_IMAGE_FRAME_ HEIGHT=60 WIDTH=60

# Remove any residual background
_REMOVE_BACKGROUND_FROM_IMAGE_ FORCE=1 MASK=1 METHOD=FITSURFACE

# Determine an FCF
_FIND_CALIBRATION_MAP_

# Calibrate data using available FCF, though this is not strictly
# necessary
_CALIBRATE_DATA_

# Create Group file - when a new Group file is created, the NEWIMAGE
# flag is set to allow pointing offsets and the beam size to be
# determined.
_MAKE_MOSAIC_GROUP_ COADD_MODE=RUNNING

# Display it
_DISPLAY_GROUP_

# Determine beam properties
_FIND_BEAM_SIZE_ GROUP=1 OBSEND=0

# Apply the matched filter to improve signal-to-noise (especially
# useful at 450 um)
_APPLY_MATCHED_FILTER_ GROUP=1 STORE=1

# Determine the pointing offsets and write a flag file for the
# JCMT POINTING_FOCUS task
_FIND_POINTING_OFFSETS_

# Delete temporary files, keeping calibrated files, flatfield
# solutions and the results of the matched filter. Note that the last
# file created by the frame will not be deleted because it is never
# replaced by anything so will never get pushed onto the intermediates
# array
_DELETE_TEMP_FILES_ KEEP=_cal,_mos,_mf,_flat ALSOGRP=1
