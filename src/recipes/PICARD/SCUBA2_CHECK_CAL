# -*-cperl-*-

=head1 NAME

SCUBA2_CHECK_CAL - perform SCUBA-2 calibration checks on standard sources

=head1 DESCRIPTION

A simple PICARD recipe to calculate fluxes, FCFs and beam size from a
given uncalibrated map of a point source. The results are written to
a log file called C<log.checkcal> if desired.

Procedure:

=over 2

=item * The images are cropped to the given size (as specified in the FITS
headers or via the C<MAP_HEIGHT> and C<MAP_WIDTH> recipe parameters,
and must be at least twice the diameter of the aperture).

=item * A background may be fitted and removed. (Optional - only if
the C<REMOVE_BACKGROUND> recipe parameter is true.)

=item * The beam size is determined using KAPPA C<beamfit>.

=item * FCFs are calculated from the cropped (background-subtracted)
image.

=item * The source flux and its uncertainty are derived from aperture
photometry on these images. The background is estimate from an annulus
with inner and outer radii of 1.25 and 2.0 times the aperture radius.

=item * The map is calibrated using either the standard FCF or the one
derived above (if the C<USEFCF> recipe parameter is true).

=item * The noise is calculated from the calibrated map.

=item * The matched filter is applied to the calibrated map.

=item * Results are written to a log file, C<log.checkcal>.

=back

By default this recipe only works on known calibration
sources. However, the user may specify the source flux at 850 and/or
450 um by using recipe parameters called C<FLUX_850> and C<FLUX_450>
respectively. The fluxes for different sources may be specified by
appending the target name (in upper case with spaces removed),
e.g. C<FLUX_850.HLTAU>.

By default a log file is written containing a variety of information
about the data and the values calculated.

=head1 NOTES

=over 2

=item *

The input data must be uncalibrated in order to calculate an FCF from
calibrator observations. (The PICARD recipe
L<UNCALIBRATE_SCUBA2_DATA|UNCALIBRATE_SCUBA2_DATA> can be used to
undo the default calibration.)

=item *

The default behaviour is to leave every file created during the recipe
on disk. This may not be desireable - see the C<KEEPFILES> recipe
parameter above to reduce the number of output files.

=item *

Re-processing data already processed by this recipe is not
recommended.

=item *

If the recipe parameter C<FITSURFACE_KEEPSURFACE> is true, then a file
will be created (for each input file) with suffix C<_surface>.

=item *

Documentation for other recipes may list other recipe parameters that
appear to be applicable to some of the stesp in this recipe, but are
not shown due to the possibility of adverse interactions.

=item *

The fits for beam size and FCF calculation are independent and are not
guaranteed to use the same parameters. The C<FIT_GAUSSIAN> recipe
parameter may be used to enforce a gaussian or non-gaussian fit. By
default, a two-component gaussian will be fitted for known calibrators
with a signal-to-noise ratio of at least 100. If the signal-to-noise
is less than 100, the beam fit will fall back to a single gaussian
while the FCF fit will be a single component with an unconstrained
radial falloff parameter.

=back

=head1 DISPLAY

None.

=head1 AVAILABLE PARAMETERS

The following parameters can be set via the -recpars option:

=over 2

=item APERTURE_RADIUS

Radius of aperture in arcsec for calculating total flux. The default
is 30 arcsec.

=item BACKGROUND_FITMETHOD

Method to use for removing background. May be C<fitsurface>,
C<findback>, C<plane> or C<dc>. Default is C<fitsurface>.

=item FINDBACK_BOX

Size of the box (in pixels) used by findback. Default is 11.

=item FIT_GAUSSIAN

Flag to indicate whether or not to force a Gaussian fit to the source
when estimating the beam parameters. Default is 1 (fit Gaussian).

=item FIT_FIXAMP

A flag to denote that the amplitude of the fit to the source should be
fixed as the peak value in the map. Default is 0 (amplitude is a free
parameter).

=item FIT_FIXBACK

Specifies the background level to be used in the fit to the
source. May be C<!> to allow the background to float. If not given,
the default is either a fixed level of 0 for known calibrators, or the
background is left as a free parameter.

=item FITSURFACE_FITPAR

Up to two values which define either the order of the polynomial (for
C<polynomial>) or the number of knots (for C<spline>) in the X and Y
directions respectively. A single number means the same value is used
for both axes. Default is 2 for C<polynomial>, 4 for C<spline>.

=item FITSURFACE_FITTYPE

Type of fit to use with fitsurface. May be C<polynomial> or
C<spline>. Default is C<polynomial>.

=item FITSURFACE_KEEPSURFACE

A flag to denote whether or not to keep the fitted surface on
disk. Useful for debugging purposes. Default is 0 (do not keep on
disk).

=item FLUX_450

Source flux density at 450 um in Jy. Source-specific values may be
given by dot-appending the source name in upper case with spaces
removed. For example, FLUX_450.DGTAU.

=item FLUX_850

Source flux density at 850 um in Jy. Source-specific values may be
given by dot-appending the source name in upper case with spaces
removed (see above).

=item KEEPFILES

A flag to indicate whether or not to keep all files produced by the
recipe. May be 0 to keep no files, or +1 to keep only files with
suffix C<_crop>, C<_back> and C<_mf>. Default is -1 (keep all files).

=item LOGFILE

Flag to denote whether to write results to a log file at the end of
processing. Default is 1 (write log file).

=item MAP_HEIGHT

Height of map in arcsec after cropping. Must be at least twice the
aperture diameter. Default is that in the FITS header.

=item MAP_RADIUS

Radius in arcsec of the circular region to define the map. Must be at
least twice the aperture radius. Overrides the use of MAP_HEIGHT and
MAP_WIDTH.

=item MAP_WIDTH

Width of map in arcsec after cropping. Must be at least twice the
aperture diameter. Default is that in the FITS header.

=item MASK_SOURCE

Flag to denote whether to mask the source before removing the
background. Default is 0 (do not mask the source).

=item NOISE_METHOD

Method used to calculate the noise in the calibrated image. May be
C<VARIANCE> to use the variance, C<MASK> to mask out the source and
calculate the image-plane standard deviation, or C<MINIMUM> to
determine the lowest standard deviation in a series of apertures
placed on the image. Default is C<VARIANCE>, and minimum match is
supported.

=item PSF_MATCHFILTER

Name of a file to use as the PSF when applying the matched filter.

=item REMOVE_BACKGROUND

A flag to indicate whether or not a background should be estimated and
removed from the image. Default is 0 (do not remove a background).

=item USEFCF

Flag to denote whether to calibrate the data using the FCFs derived in
this recipe (1) or use standard FCFs (0). Standard FCFs will be used
if not specified.

=item USEFCF_CALTYPE

Calibration type to use if C<USEFCF> is 1. May be C<ARCSEC>, C<BEAM>
or C<BEAMMATCH>. Default is C<BEAM>.

=back

=head1 LOGFILE FORMAT

The log file contains the following entries:

=over 4

=item 1. Input filename

=item 2. UT date (YYYY-MM-DDTHH:MM:SS.S)

=item 3. Object name

=item 4. Observation number

=item 5. Wavelength (um)

=item 6. Airmass

=item 7. 225-GHz tau

=item 8. tau at observing wavelength

=item 9. Aperture radius (arcsec)

=item 10. USEFCF flag

=item 11. Flux within an aperture (pW)

=item 12. Uncertainty in derived flux above (pW)

=item 13. Noise derived from variance (mJy/beam)

=item 14. Flux conversion factor derived using the integrated flux
within an aperture (Jy/sq arcsec/pW)

=item 15. Uncertainty in above FCF

=item 16. Flux conversion factor derived from peak of Gaussian fit to
source (Jy/beam/pW)

=item 17. Uncertainty in above FCF

=item 18.  Flux conversion factor derived from peak of Gaussian fit to
source after processing with a matched filter (Jy/beam/pW)

=item 19. Uncertainty in above FCF

=item 20. FWHM of main beam (arcsec)

=item 21. Contribution of error beam (per cent)

=item 22. Flag to indicate whether the beam fit was a Gaussian

=back

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009-2010,2013-2014 University of British Columbia. All
Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard SCUBA2 setup
_JCMT_SETUP_

# Store basic info about the observation in the header
_JCMT_PICARD_RESULTS_

# Make sure the data are uncalibrated
_UNCALIBRATE_SCUBA2_DATA_

# Trim image to 150x150 arcsec^2 before removing background to limit
# bias of noisy outer regions. The pipeline uses 150 arcsec so by
# default this recipe should do the same.
_CROP_SCUBA2_IMAGE_ WIDTH=150 HEIGHT=150

# Remove background but only if specified using a recipe
# parameter. Creates output files ending "_back".
_SCUBA2_REMOVE_BACKGROUND_ MASK=1 USEPAR=1

# Estimate the beam size by fitting a gaussian to the source
_SCUBA2_FIND_BEAM_SIZE_

# Calculate FCFs from the (background-subtracted) cropped image
_CALC_SCUBA2_FCF_

# Calibrate the cropped data - use default FCF unless the USEFCF
# recipe parameter is set
_CALIBRATE_SCUBA2_DATA_ TAG=crop

# Calculate the noise in the image from the variance
_SCUBA2_CALC_NOISE_

# Apply the matched filter to the calibrated data
_SCUBA2_MATCHED_FILTER_

# Write a logfile with the relevant info
_WRITE_CHECKCAL_LOGFILE_

# Delete unnecessary files if requested
_SCUBA2_TIDY_
