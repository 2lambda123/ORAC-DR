# -*-cperl-*-

=head1 NAME

SCUBA2_FLUXNOISE - Recipe for calculating fluxes and noise levels for SCUBA-2 images

=head1 DESCRIPTION

A simple PICARD recipe to calculate fluxes, FCFs and NEFDs from a
given source.

By default this recipe only works on known calibration
sources. However, the user may specify the source flux at 850 and/or
450 um by using recipe parameters called C<FLUX_850> and C<FLUX_450>
respectively.

=head1 NOTES

The input data must be uncalibrated in order to calculate an FCF from
calibrator observations.

The results of the FCF and NEFD calculation are printed to the screen
and written to log files, C<log.fcf> and C<log.nefd>.

If run on non-calibrator data, the user should ensure that data from
only one source is used as the recipe uses the same (user-specified)
flux for all non-calibrator sources.

=head1 DISPLAY

No display is used by this recipe.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009-2010 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Standard SCUBA2 setup
_SCUBA2_SETUP_

# Calculate the mean noise/exposure time within an aperture centred on
# the source, plus store info about each file
_CALC_NOISE_TEXP_

# Remove background - mask out source using same radius aperture
_REMOVE_BACKGROUND_FROM_IMAGE_ FORCE=1 MASK=1 VERBOSE=0

# Calculate the flux via aperture photometry, then FCF and NEFD
_CALC_FLUX_FCF_NEFD_

# Write a logfile with the relevant info
_WRITE_FLUXNOISE_LOGFILE_
