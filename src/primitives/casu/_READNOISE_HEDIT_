    # Get the readnoise keyword
 
    my $readnoisekey = $Frm->hdrkeys("READNOISE");

    # Loop for each image extension.  Trick the Calib into using the
    # headers of each of the extensions.

    my ($errmsg,$retval);
    foreach my $i (1 .. $Frm->findnsubs) {
        my $frm = $Frm->getasubframe($i);
        $Cal->thingone($frm->hdr);
        $Cal->thingtwo($frm->uhdr);
        my $readnoise = $Cal->readnoise;
        $retval = cir_update_hdr($frm->file,$readnoisekey,"FLOAT",$readnoise,
            "Current Readnoise estimate",$errmsg);
    }

    # Reset the Calib lookup hashes

    $Cal->thingone($Frm->hdr);
    $Cal->thingtwo($Frm->uhdr);

=head1 NAME

_READNOISE_HEDIT_ -- Edit the read noise into each image header

=head1 DESCRIPTION

This primitive cycles through all of the image extensions in an image file and
writes the current readout estimate into each header.  

=head1 ARGUMENTS

None

=head1 NOTES

=over 4

=item *

The Calib method 'readnoise' is tricked into finding the correct value, by
substituting the two lookup hashes (thing1 and thing2) for each image 
extension.  There has to be a better way.

=back

=head1 AUTHORS
 
JRL: Jim Lewis (CASU, IoA)
 
=head1 COPYRIGHT
 
Copyright (C) 2003-2006 Cambridge Astronomy Survey Unit.
All Rights Reserved
                                                                               
=cut
