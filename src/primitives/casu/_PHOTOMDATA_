    # Get the name of the photometry source we want to use.

    my $phot = $Cal->photom;

    # These are the local variables that the photometry file will set...

    my (%filterstruct,%catalogues);

    # Construct a file name for it and attempt to open the file

    my $fname = sprintf("phot_%s.pl",$phot);
    $fname = File::Spec->catfile($ENV{'ORAC_DATA_CAL'},$fname);
    my $fh;
    open($fh,"<$fname") || orac_throw("Unable to open photometric standard source definition file");

    # Read and evaluate the expressions in the file...

    my $line = "";
    while (<$fh>) {
        $line .= $_;
    }
    close($fh);
    eval($line);
    orac_throw("Unable to parse instructions in photometric standard source definition file") if ($@);

    # Right now, which filter are we interested in?

    my $filter = (defined $_PHOTOMDATA_{FILTER} ? $_PHOTOMDATA_{FILTER} : "");
    if (! $filter) {
        orac_throw "_PHOTOMDATA_: No filter specified";
    }

    # Pass back references to hashes that supply the info you need for
    # this filter...

    $Finfo = (defined $filterstruct{$filter} ? $filterstruct{$filter} : undef);
    if (defined $Finfo) {
        my $cat = $$Finfo{'catalogue'};
        $Cinfo = $catalogues{$cat};
    }

=head1 NAME

_PHOTOMDATA_ -- Set up information relating to photometric standards

=head1 DESCRIPTION

This primitive takes the filter name of interest and returns a reference
to a structure with information on the standards and how to access them.

=head1 ARGUMENTS

=over 4

=item FILTER = char (Given)

The filter of interest

=back

=head1 NOTES

=over 4

=item *

The calling routine must be expecting two variables called $Finfo and $Cinfo.
The former is a reference to a hash with information about how to form the
standard magnitudes for a given filter.  The latter is a reference to a hash
with information on how to access standard star data for that given filter.

=back

=head1 AUTHORS

JRL: Jim Lewis (CASU, IoA)

=head1 COPYRIGHT

Copyright (C) 2003-2006 Cambridge Astronomy Survey Unit.
All Rights Reserved

=cut

