    # Get parameters

    my $bpm = (defined $_MAKE_CONFIDENCE_MAP_{BPM} ? $_MAKE_CONFIDENCE_MAP_{BPM} : "");
    my $outf = (defined $_MAKE_CONFIDENCE_MAP_{OUT} ? $_MAKE_CONFIDENCE_MAP_{OUT} : "");

    # If there is no output map defined, then we should get out of here

    if (! $outf) {
        orac_throw "_MAKE_CONFIDENCE_MAP_: No output map specified\n";
    }

    # If it already exists, then get rid of it and flag that it doesn't need to
    # be put in the index again.

    my $addit = 1;
    if (-f $outf) {
	unlink $outf;
	$addit = 0;
    }

    # How many extensions do we have here?

    my $nextn = $Frm->findnsubs;

    # Make the map for each extension

    foreach my $i (1 .. $nextn) {
        my $infile = $Frm->getasubframe($i)->file;
	my $bpmfile = sprintf("%s[%d]",$bpm,$Frm->getasubframe($i)->subfrmnumber);
        my $outfile = sprintf("%s[%d]",$outf,$Frm->getasubframe($i)->subfrmnumber);
        my $errmsg;
        my $retval = cir_mkconf_3($infile,$bpmfile,$outfile,$errmsg);
        if ($retval != CIR_OK) {
            orac_throw "CIR_MKCONF_3: failed in _MAKE_CONFIDENCE_MAP_\n$errmsg\n";
        }
    }

    # Create a file object for the output file and then update the
    # header to tell it that it's a confidence map.

    my $tmpFrm = $Frm->new($outf);
    my ($retval,$errmsg);
    $retval = cir_update_hdr($tmpFrm->file,"WFRTYPE","STRING",CALCPM,
        "Calibration frame type",$errmsg);
    $retval = cir_update_hdr($tmpFrm->file,"MASKTYPE","INT",MASK_CPM,

        "This is a confidence map",$errmsg);
    if ($addit) {
        _FILE_CPM_ NAME=$outf
    }

=head1 NAME

_MAKE_CONFIDENCE_MAP_ -- Create a confidence map from an input image

=head1 DESCRIPTION

This primitive cycles through all of the image extensions in an input file
and creates a confidence map.

=head1 ARGUMENTS

=over 4

=item OUT = char (Given)

The name of the output file for the confidence maps

=item THRESH = float (Given)

The threshold in background sigma for causing pixels to be given zero
confidence.

=item NITER = int (Given)

The number of rejection cycles

=item WINDOW = int (Given)

If set then a row and a column of bad pixels will be created where the join
of the detector quadrants is.

=back

=head1 NOTES

=over 4

=item *

The output map will be filed as the current CPM

=back

=head1 AUTHORS

JRL: Jim Lewis (CASU, IoA)

=head1 COPYRIGHT

Copyright (C) 2003-2006 Cambridge Astronomy Survey Unit.
All Rights Reserved

=cut
