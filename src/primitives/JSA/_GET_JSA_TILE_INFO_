# vim: syn=perl

=head1 NAME

_GET_JSA_TILE_INFO_ - retrieve information about JSA tiles

=head1 DESCRIPTION

This primitive uses the SMURF command JSATILEINFO to
retrieve information about JSA tiles by tile number.

=head1 ARGUMENTS

=over 4

=item TILE

The tile number.

=back

=head1 OUTPUT DATA

The primitive hash RESULTS entry contains:

=over 4

=item LBND

The lower bounds.

=item UBND

The upper bounds.

=back

=head1 COPYRIGHT

Copyright (C) 2014 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see L<http://www.gnu.org/licenses/>.

=cut

my $tile = get_prim_arg($_PRIM_ARGS_, 'TILE', undef);

orac_termerr('TILE missing')
  unless defined $tile;

# Determine JSATILEINFO's name for this instrument.  Possibilities, according
# to SUN/258 include: "SCUBA-2(450)", "SCUBA-2(850)" and "ACSIS".
my $backend = $Frm->uhdr('ORAC_BACKEND');
my $inst;
if ($backend eq 'SCUBA-2') {
  $inst = ($Frm->hdr('FILTER') =~ /^8/) ? 'SCUBA-2(850)' : 'SCUBA-2(450)';
}
elsif ($backend eq 'ACSIS') {
  $inst = 'ACSIS';
}
orac_termerr("Unknown backend $backend") unless defined $inst;

# Run JSATILEINFO to retrieve the information.
$Mon{'smurf_mon'}->obeyw('jsatileinfo', "$tile $inst");
my (undef, %results) = $Mon{'smurf_mon'}->mget('jsatileinfo', qw/LBND UBND/);

# Store results in the primitive hash.
$_GET_JSA_TILE_INFO_{'RESULTS'} = \%results;
