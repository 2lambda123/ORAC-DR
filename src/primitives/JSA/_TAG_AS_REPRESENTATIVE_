# -*-cperl-*-

=head1 NAME

_TAG_AS_REPRESENTATIVE_ - Tag a file as representative.

=head1 DESCRIPTION

This primitive tags a file, Frame, or Group as representative,
It copies the current file to a new file with a new chosen suffix.
It also sets the PRODUCT header within the copied file, and creates
three square preview images of 64, 256, and 1024 pixels on a side.

=head1 ARGUMENTS

=over 4

=item COMMENT = STRING (Given)

The comment string for the PRODUCT header.  The product identification
may be terse to avoid very long file names and the comment may be used
to write an unabbreviated form.  ['productID']

=item DISPLAY = LOGICAL (Given)

Whether to display the current Group or Frame (see GROUP) file.  [1]

=item FILE = STRING (Given)

By default the file to tag comes from either the current Frame or
current Group object (see GROUP argument). If the FILE argument is
supplied, then this file overrides the GROUP argument. ['']

=item GROUP = LOGICAL (Given)

Whether to operate on the current Group or Frame. Defaults to
Frame. [0]

=item PRODUCT = STRING (Given)

The string written to the PRODUCT keyword.  If it is undefined the
PRODUCT string defaults to the value of SUFFIX for backwards
compatability.

=item SUFFIX = STRING (Given)

The suffix to add.  It is also the value assigned to the PRODUCT
keyword.  ['rimg'].

=item UPDATE = LOGICAL (Given)

Whether or not to update the current Frame or Group object with the
tagged file. [0]

=item VECTOR_FILE = CHARACTER (Given)

A FITS file generated by POLPACK containing vectors to plot over the
image in the preview graphics files.  If the file is given, then
an attempt will also be made to set its PRODUCT header.

=back

=head1 OUTPUT DATA

=over 4

=item *

The file with the requested suffix.

=item *

If UPDATE is true, the input Frame or Group object has product defined
as the requested suffix, and the output file(s) is(are) tagged with
that suffix.

=back

=head1 SEE ALSO

_CREATE_GRAPHIC_FROM_FILE_

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Andy Gibb E<lt>agg@astro.ubc.caE<gt>,
Malcolm J. Currie E<lt>mjc@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2008, 2013-2014 Science and Technology Facilities Council.
Copyright (C) 2013 the University of British Columbia.
All Rights Reserved.

=cut

use Astro::FITS::CFITSIO qw/:constants/;

my $display = get_prim_arg( $_PRIM_ARGS_, "DISPLAY", 1 );
my $file = $_PRIM_ARGS_->{FILE};
my $group = ( $_PRIM_ARGS_->{GROUP} ? 1 : 0 );
my $product = get_prim_arg( $_PRIM_ARGS_, "PRODUCT", undef );
my $suffix = get_prim_arg( $_PRIM_ARGS_, "SUFFIX", "rimg" );
my $comment = get_prim_arg( $_PRIM_ARGS_, "COMMENT", "product ID" );
my $update = ( $_PRIM_ARGS_->{UPDATE} ? 1 : 0 );
my $vector_file = get_prim_arg( $_PRIM_ARGS_, 'VECTOR_FILE', undef );

$product = defined( $product ) ? $product : $suffix;

my $Obj = ( $group ? $Grp : $Frm );

my $in = $file;
my $out;
if( ! defined( $file ) ) {
  ( $in, $out ) = $Obj->inout( "_$suffix" );
} else {
  ( undef, $out ) = $Obj->inout( "_$suffix" );
}

$Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out" );

orac_print "$in to $out:\n Tagged as representative.\n\n";

_SET_FILE_FITS_ITEM_ FILE=$out KEY=PRODUCT VALUE=$product COMMENT=$comment

# If we are also processing a FITS vector file, then attempt to do the
# equivalent FITS header operation to it too.
if (defined $vector_file) {
  my $status = 0;
  my $fitsvector = Astro::FITS::CFITSIO::open_file($vector_file, READWRITE,
                                                   $status);
  if ($status) {
    orac_warn("Failed to open vector file to add product header\n");
  }
  else {
    $fitsvector->update_key(TSTRING, "PRODUCT", $product, $comment, $status);
    $fitsvector->close_file($status);
  }
}

if ( $display ) {
  _DISPLAY_FILE_ FILE=$out GROUP=$group
}

# Product identifier for the header
my $productID = ($Obj->can("product_id") ? $Obj->product_id($product) : "");

if ( defined( $vector_file ) ) {
  _CREATE_GRAPHIC_FROM_FILE_ FILE=$out ADDRES=1 TYPE=PNG PRODUCT=$product PRODUCTID=$productID VECTOR_FILE=$vector_file

  _CREATE_GRAPHIC_FROM_FILE_ FILE=$out ADDRES=1 XRES=256 YRES=256 TYPE=PNG PRODUCT=$product PRODUCTID=$productID VECTOR_FILE=$vector_file

  _CREATE_GRAPHIC_FROM_FILE_ FILE=$out ADDRES=1 XRES=1024 YRES=1024 TYPE=PNG PRODUCT=$product PRODUCTID=$productID VECTOR_FILE=$vector_file

} else {
  _CREATE_GRAPHIC_FROM_FILE_ FILE=$out ADDRES=1 TYPE=PNG PRODUCT=$product PRODUCTID=$productID

  _CREATE_GRAPHIC_FROM_FILE_ FILE=$out ADDRES=1 XRES=256 YRES=256 TYPE=PNG PRODUCT=$product PRODUCTID=$productID

  _CREATE_GRAPHIC_FROM_FILE_ FILE=$out ADDRES=1 XRES=1024 YRES=1024 TYPE=PNG PRODUCT=$product PRODUCTID=$productID
}

if( $update ) {
  $Obj->force_product_update( $suffix, $out );
  $Obj->tagset( $suffix );
}
