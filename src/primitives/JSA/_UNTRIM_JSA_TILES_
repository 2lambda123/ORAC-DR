# vim: syn=perl

=head1 NAME

_UNTRIM_JSA_TILES_ - untrims JSA tiles

=head1 DESCRIPTION

This primitive untrims JSA tiles.

=head1 ARGUMENTS

=over 4

=item GROUP = LOGICAL (Given)

Whether to operate on the current Frame or Group object. Defaults to
Frame. [0]

=back

=head1 COPYRIGHT

Copyright (C) 2014 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see L<http://www.gnu.org/licenses/>.

=cut

my $group = get_prim_arg($_PRIM_ARGS_, 'GROUP', 0);
my $Obj = ($group ? $Grp : $Frm);

my @output = ();

foreach (my $i = 0; $i < $Obj->nfiles(); $i ++) {
    my ($in, $out) = $Obj->inout('untrim', $i + 1);
    my $tile = $Obj->hdrval('TILENUM', $i);

    # Determine the bounds of the entire JSA tile of which this file
    # may be only a part.
    _GET_JSA_TILE_INFO_ TILE=$tile
    my $lbnd = $_GET_JSA_TILE_INFO_{'RESULTS'}->{'LBND'};
    my $ubnd = $_GET_JSA_TILE_INFO_{'RESULTS'}->{'UBND'};

    # Determine how many dimensions the tile has in all.
    _GET_DIMENSIONS_ FILE=$in
    my $ndim = $_GET_DIMENSIONS_{'NDIM'};

    # Use an NDF section to express the whole area of the tile as the input
    # for NDFCOPY, and add enough commas to cover any remaining dimensions.
    $in .= '('
         . $lbnd->[0] . ':' . $ubnd->[0]
         . ','
         . $lbnd->[1] . ':' . $ubnd->[1]
         . ',' x ($ndim - 2)
         . ')';

    # Use NDFCOPY to untrim the tile.
    $Mon{'ndfpack_mon'}->obeyw('ndfcopy', "$in $out");

    # Record the new output filename.
    push @output, $out;
}

# Place the untrimmed tiles in the frame.
$Obj->files(@output);
