    my $catname = $_SEARCHCAT_{CATNAME};
    my $ra = $_SEARCHCAT_{RA};  
    my $dec = $_SEARCHCAT_{DEC};
    my $radius = $_SEARCHCAT_{RADIUS};

    # Put the coordinates into radians as this is how they are stored
    # in the object catalogues

    $ra = deg2rad($ra);
    $dec = deg2rad($dec);
    $radius = deg2rad($radius/3600.0);

    # Open a temporary file with the region specification for the RA Dec 
    # coverage.  Write this in.

    my $regfile = ORAC::TempFile->new;
    my $fh = $regfile->handle;
    printf $fh "circle(%g,%g,%g)\n",$ra,$dec,$radius;
    $fh->close;

    # Now get the catalogue subset. NB this will be a memory file, so there 
    # will be no need to delete it explicitly when we close it

    my $catsub = sprintf("%s[regfilter(\"%s\",ra,dec)]",$catname,$regfile->file);
    my $status = 0;
    my $tptr = Astro::FITS::CFITSIO::open_file($catsub,READONLY,$status);
    $regfile->DESTROY;

    # Get the number of rows in the subset

    if ($status == 0) {
        $tptr->get_num_rows($nrows,$status);
    } else {
        $tptr = 0;
        $nrows = 0;
    }

    # Find the best row (the one closest to the centre)

    my $irem;
    if ($nrows > 1) {
        my $radmin = 2.0*$radius;
        my ($col,@raval,@decval,$rad);
        $tptr->get_colnum(CASESEN,"ra",$col,$status);
        $tptr->read_col(TFLOAT,$racol,$i,$nrows,1,0.0,\@raval,$anynul,$status);
        $tptr->get_colnum(CASESEN,"dec",$col,$status);
        $tptr->read_col(TFLOAT,$deccol,$i,$nrows,1,0.0,\@decval,$anynul,
           $status);
        for ($i = 0; $i < $nrows; $i++) {
            $rad = sqrt(($raval[$i] - $ra)**2 + ($decval[$i] - $dec)**2);
            if ($rad < $radmin) {
                $radmin = $rad;
                $irem = $i + 1;
            }
        }
    } elsif ($nrows == 1) {
        $irem = 1;
    } else {
        $irem = 0;
    }

    # Now send some of this info back

    $_SEARCHCAT_{CPTR} = $tptr;
    $_SEARCHCAT_{NTROWS} = $nrows;
    $_SEARCHCAT_{BESTROW} = $irem;

   