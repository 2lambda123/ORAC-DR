=head1 NAME

_READNOISE_

=head1 DESCRIPTION

Measures WFCAM readnoise off a group of DARK frames

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>
Jim Lewis <jrl@ast.cam.ac.uk>

=cut

my $groupname = sprintf("%s_%05d",$Frm->hdr("ORACUT"),$Grp->name);
my $groupfile = "pixstats_" . $groupname . ".fit";
my $filename = $Frm->file;

_DISPLAY_IMAGE_
_PIXSTATS_

my $num = 1 + $Grp->subgrp("OBSTYPE"=>"DARK")->num;
if ($num > 2) {

    # Extract the relevant plane from the pixstats cube (variance)

    my $rnfile = "readnoise_" . $groupname . ".fit";
    my ($retval,$errmsg);

    orac_print "Calculating readnoise in: $rnfile\n";
    my $grf = sprintf("%s[1]",$groupfile);
    $retval = cir_imslice($grf, $rnfile, 4, $errmsg);
    if ($retval != CIR_OK) {
       orac_throw("CIR_IMSLICE: Failed in _READNOISE_\n$errmsg\n");
    }

    # Take the square root and multiply by the known gain

    $retval = cir_imsqrt($rnfile, $errmsg);
    if ($retval != CIR_OK) {
       orac_throw("CIR_IMSQRT: Failed in _READNOISE_\n$errmsg\n"); 
    }
    my $gain = $Frm->getasubframe(1)->hdr("GAIN");
    orac_print "Using Gain Value of $gain from headers\n";
    $retval = cir_immultk($rnfile, $gain, $errmsg);
    if ($retval != CIR_OK) {
        orac_throw("CIR_IMMULTK: Failed in _READNOISE_\n$errmsg\n");
    }

    # Now get the channel information from the channel table...

    $ENV{'ORAC_INSTRUMENT'} =~ /^WFCAM(\d)/;
    my $wfcamno = $1;
    my $fname = "wfcam_chan" . $wfcamno . ".fit";
    my $chantab = File::Spec->catfile($ENV{'ORAC_DATA_CAL'},$fname) . "[1]";
    my $tmpfile = ORAC::TempFile->new(0);
    my @allcols = ('channum','ixmin','ixmax','iymin','iymax');
    $retval = cir_tabledump($chantab,$tmpfile->file,\@allcols,5,$errmsg);
    my $fh = $tmpfile->handle;

    # Loop for each channel and get the read noise

    my $logopen = ">readnoise_" . $groupname . ".log";
    my $logit = 1;
    if (! open LOG,$logopen) {
	orac_warn("Can't open readnoise log!!\n");
        $logit = 0;
    }
    open $fh,$tmpfile->file;
    my $mean = 0;
    my $sig = 0;
    my $line;
    while (<$fh>) {
        my ($channum,$ixmin,$ixmax,$iymin,$iymax) = split /\s+/;
        my $sect = sprintf("%s[%d:%d,%d:%d]",$rnfile,$ixmin,$ixmax,$iymin,$iymax);
	my $retval = cir_imqmedsig($sect,"",3.0,1,0.0,65535.0,$mean,$sig,$errmsg);

        # Reformat the values for printing

        $line = sprintf("Channel %d [%d:%d,%d:%d] readnoise is: %5.2f +/- %5.2f electrons\n",$channum,$ixmin,$ixmax,$iymin,$iymax,$mean,$sig);
        orac_print($line);
        print LOG $line if ($logit);
    }

    # Now do the stat for the whole map...

    $retval = cir_imqmedsig($rnfile,"",3.0,1,0.0,65535.0,$mean,$sig,$errmsg);
    if ($retval != CIR_OK) {
        orac_throw("CIR_MEANSIG: Failed in _READNOISE_\n$errmsg\n");
    }
    $retval = cir_update_hdr($rnfile,"RECIPE","STRING","READNOISE","",$errmsg);
    my $tmpfrm = $Frm->new($rnfile);
    {
	my $Frm = $tmpfrm;
        _DISPLAY_IMAGE_
    }
    $line = sprintf("Overall Readnoise is: %5.2f +/- %5.2f electrons\n",
        $mean,$sig);
    orac_print($line);
    print LOG $line if ($logit);
    close LOG if ($logit);

    _FILE_READNOISE_ VALUE=$mean
}
