    my $norder = (defined $_LINEARITY_CURVE_{NORDER} ? $_LINEARITY_CURVE_{NORDER} : 4);

    # Check the group membership and see if we have enough images to proceed.

    $Grp->check_membership;
    my @allf = $Grp->members;
    my $n = @allf;

    # If there are enough and the current frame is in the list, then go
    # to it...

    if ($n > $norder+1 && $allf[-1]->file eq $Frm->file) {

        # Get the channel table...

	$ENV{'ORAC_INSTRUMENT'} =~ /^WFCAM(\d)/;
	my $wfcamno = $1;
	my $fname = "wfcam_chan" . $wfcamno . ".fit";
	my $chantab = File::Spec->catfile($ENV{'ORAC_DATA_CAL'},$fname);
        $chantab .= "[1]";

        # Set the name of the output table
    
        my $outtab = sprintf("lintab_%d.fit",$Frm->hdr("ORACUT"));
        my $addit = 1;
        if (-f $outtab) {
    	    unlink $outtab;
	    $addit = 0;
        }

        # Get a list of file names

        my @allfiles = ();
        foreach my $ff (@allf) {
            push @allfiles,$ff->file;
        }

        # Call the routine. Hard code the readout information until we have
        # that information in the header.

        my ($retval,$errmsg);
        my $expkey = $Frm->hdrkeys("EXPOSURE_TIME");
        $retval = cir_lincoefs_postreset(\@allfiles,$n,$chantab,$norder,
	    $expkey,0.01,0.65,$outtab,$errmsg);
        if ($retval != CIR_OK) {
	    orac_throw "CIR_LINCOEFS_POSTRESET: Failed in _LINEARITY_CURVE_\n$errmsg\n";
        }

        # Now file this...

        if ($addit) {
            _FILE_LINTAB_ NAME=$outtab
        }
    }

=head1 NAME

_LINEARITY_CURVE_ -- Fit a linearity curve for each data channel

=head1 DESCRIPTION

The main part of this primitive is only run if the group contains at least
one more frame than the order of the polynomial to be fit. The channel table
is used to define the data section for each channel. A polynomial is fit to
the input data from each channel, combined with the input timing information.
The output table is prefixed with 'lintab'.

=head1 ARGUMENTS

=over 4

=item NORDER = int (Given)

The order of the polynomial to be fit. The fitting scheme explicitly forbids
a zeroth order term (always must be zero) hence the order of the polynomial
is also the number of coefficients in the fit.

=back

=head1 NOTES

None

=head1 AUTHORS

JRL: Jim Lewis (CASU, IoA)

=head1 COPYRIGHT

Copyright (C) 2005-2008 Cambridge Astronomy Survey Unit.
All Rights Reserved

=cut
