    # Get some task parameters...

    my $prefix = (defined $_APM_{PREFIX} ? $_APM_{PREFIX} : "t");
    my $pnop = (defined $_APM_{PNOP} ? $_APM_{PNOP} : 25);
    my $bgfile = (defined $_APM_{BGFILE} ? $_APM_{BGFILE} : "");
    my $maskfile = (defined $_APM_{MASKFILE} ? $_APM_{MASKFILE} : "");
    my $verbose = (defined $_APM_{VERBOSE} ? $_APM_{VERBOSE} : 0);
    my $thresh = (defined $_APM_{THRESH} ? $_APM_{THRESH} : -2.0);
    my $grid = (defined $_APM_{GRID} ? $_APM_{GRID} : 64);
    my $ditchtab = (defined $_APM_{DITCHTAB} ? $_APM_{DITCHTAB} : 0);

    # Loop for each of the files in the group.  Create a table name based
    # on the input file name, with a prefix added.

    my $dstat = 0;
    foreach my $frm ($Grp->allmembers) {
        my $outfile = $prefix . $frm->file;
        $frm->uhdr("OBJTAB",$outfile);

        # Loop for each image extension...

        foreach my $i (1 .. $frm->findnsubs) {
            my $subfrm = $frm->getasubframe($i);
            my $objtab = sprintf("%s[%d]",$outfile,$i);
            $subfrm->uhdr("OBJTAB",$objtab);
            my $errmsg;
            my $retval = cir_apm($subfrm->file,$outfile,$bgfile,$maskfile,
                $verbose,$pnop,$thresh,$grid,$ditchtab,$errmsg);
            if ($retval != CIR_OK) {
                orac_err("CIR_APM: Failed in _APM_\n$errmsg\n");
                $dstat = 1;
                last;
            }
        }
    }
    $_APM_{DSTAT} = $dstat;

=head1 NAME

_APM_ -- Do an object detection using an APM type algorithm

=head1 DESCRIPTION

This primitive cycles through all of the image extensions in an input file
and creates a catalogue of objects on it using PSB's APM algorithm. The
output catalogue is a binary FITS table and is called after the input file
with a prefix attatched. This name is written to the extension
and the primary uhdr as OBJTAB.

=head1 ARGUMENTS

=over 4

=item PREFIX = char (Given)

The prefix to attatch to the input file name in order to form an output file
name.

=item PNOP = int (Given)

The minimum number of pixels for a detection to be considered an object

=item BGFILE = char (Given)

A file name for the background map.  If it's left blank then this file won't be
kept.

=item MASKFILE = char (Given)

A file name for an object mask.  Any pixel that forms part of a detected object
will be set in the mask.

=item VERBOSE = int (Given)

If set, then verbose output will be written to STDOUT.

=item THRESH = float (Given)

The detection threshold. If negative, this is in units of background sigma 
above sky.  If positive, it is in units of actual data values above sky.

=item GRID = int (Given)

The blocking factor to be used in forming the background map

=item DITCHTAB = int (Given)

If set, then the output table will be thrown away.  This is used if the event 
that all you are interested in is creating an object mask.

=back

=head1 NOTES

=over 4

=item *

None

=back

=head1 AUTHORS

JRL: Jim Lewis (CASU, IoA)

=head1 COPYRIGHT

Copyright (C) 2003-2006 Cambridge Astronomy Survey Unit. 
All Rights Reserved

=cut
