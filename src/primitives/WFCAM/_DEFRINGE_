    my $nbxmax = (defined $_DEFRINGE_{NBXMAX} ? $_DEFRINGE_{NBXMAX} : 16);
    my $nbymax = (defined $_DEFRINGE_{NBYMAX} ? $_DEFRINGE_{NBYMAX} : 16);
    my $mbsize = (defined $_DEFRINGE_{MBSIZE} ? $_DEFRINGE_{MBSIZE} : 64);

    # Loop for all the extensions...

    my $fname = $Frm->file;
    my $nextn = $Frm->findnsubs;
    foreach my $i (1 .. $nextn) {
	my $subfr = $Frm->getasubframe($i);
	my $sfname = $subfr->file;
	
        # Has defringing already been done?

        next if ($subfr->hdr("DEFRINGE") =~ /^Done/);

        # Find the relevant fringe frame and 'prepare' it.

        my $fringesrc = $Cal->fringe;
        _FRINGE_PREPARE_ NAME=$fringesrc NBXMAX=$nbxmax NBYMAX=$nbymax MBSIZE=$mbsize
	my $frnorm = $Frm->uhdr("FRNORM");
	my $frdiff = $Frm->uhdr("FRDIFF");
	my $frnFrm = $Frm->new($frnorm);
	my $frdFrm = $Frm->new($frdiff);
	my $frFrm = $Frm->new($fringesrc);

        # Get a few more useful tidbits of information...

        my $mefringe = $frnFrm->getasubframe($i)->hdr("CIR_MNFR");
	my $expfringe = $frnFrm->getasubframe($i)->hdr("EXP_TIME");
	my $expdata = $subfr->hdr("EXP_TIME");

        # Call the defringing routine

        my ($retval,$errmsg);
	$retval = cir_defringe($sfname,$frFrm->getasubframe($i)->file,
	    $frnFrm->getasubframe($i)->file,$frdFrm->getasubframe($i)->file,
	    $mefringe,$expfringe,$expdata,1,1.0,$nbxmax,$nbymax,$mbsize,
	    0.0,0.0,0,$errmsg);
	if ($retval != CIR_OK) {
	    orac_throw("CIR_DEFRINGE: Failed in _DEFRINGE_\n$errmsg\n");
        }
    }
