    # Get parameters

    my $outf = $_MAKE_CONFIDENCE_MAP_{OUT};
    my $thresh = $_MAKE_CONFIDENCE_MAP_{THRESH};
    my $niter = $_MAKE_CONFIDENCE_MAP_{NITER};
    my $window = $_MAKE_CONFIDENCE_MAP_{WINDOW};

    # How many extensions do we have here?

    my $nextn = $Frm->findnsubs;

    # Make the map for each extension

    foreach my $i (1 .. $nextn) {
        my $infile = $Frm->getasubframe($i)->file;
        my $outfile = sprintf("%s[%d]",$outf,$i);
        my $errmsg = "";
        my $retval = cir_mkconf($infile,$outfile,$thresh,$niter,$window,$errmsg);
        if ($retval != CIR_OK) {
            orac_err("CIR_MKCONF: failed in _MAKE_CONFIDENCE_MAP_\n$errmsg\n");
            return(ORAC__ERROR);
        }
    }

    # Create a file object for the output file and then update the
    # header to tell it that it's a confidence map.

    my $tmpFrm = $Frm->new($outf);
    $tmpFrm->update_header("WFRTYPE",TSTRING,CALCPM,"Calibration frame type");
    $tmpFrm->update_header("MASKTYPE",TINT,MASK_CPM,"This is a confidence map");
    _FILE_CPM_ NAME=$outf
