use File::Copy;

my $outfile = (defined $_SUBTRACT_TWO_FILES_{OUT} ? $_SUBTRACT_TWO_FILES_{OUT} : "");
orac_throw("_SUBTRACT_TWO_FILES_: No output file specified") if (! $outfile);

# Get the files from the group

my @allmem = $Grp->members;

# Check that these two files have the same structure...

if ($allmem[0]->findnsubs != $allmem[1]->findnsubs) {
    my $line = sprintf("_SUBTRACT_TWO_FILES_: Files %s and %s don't have the same number of extensions",
	$allmem[0]->file,$allmem[1]->file);
    orac_throw($line);
}

# Copy the first file to the output file as the subtraction routine
# overwrites the first file...

copy($allmem[0]->file,$outfile);
my $oFrm = $allmem[0]->new($outfile);

# Loop for all the extensions now

my ($i,$retval,$errmsg,$fr1,$fr2);
for $i (1 .. $allmem[0]->findnsubs) {
    $fr1 = $oFrm->getasubframe($i)->file;
    $fr2 = $allmem[1]->getasubframe($i)->file;
    my $line = sprintf("Subtracting %s - %s = %s\n",
        $allmem[0]->getasubframe($i)->file,$fr2,$fr1);
    orac_print($line);
    $retval = cir_imsubt($fr1,$fr2,$errmsg);
    if ($retval != CIR_OK) {
        orac_throw("CIR_IMSUBT: Failed in _SUBTRACT_TWO_FRAMES_\n$errmsg\n"); 
    }
}

# Display the result

{
    my $Frm = $oFrm;
    _DISPLAY_IMAGE_
}


=head1 NAME

_SUBTRACT_TWO_FILES_ -- Take the first two files from a group and form a
difference of them. (first minus second)

=head1 DESCRIPTION

This primitive takes the first two files from a group and compares them to
make sure they have the same number of FITS extensions. If that's OK, then
a copy of the first file is made to the output file. This is because the
routine that does the actual subtraction overwrites the first input file.
We then loop for each image extension and do the subtraction. Finally 
the result is displayed.

=head1 ARGUMENTS

=over 4

=item OUT = char (Given)

The name of the FITS container file with the difference.

=back

=head1 NOTES

None 

=head1 AUTHORS

JRL: Jim Lewis (CASU, IoA)

=head1 COPYRIGHT

Copyright (C) 2004-2007 Cambridge Astronomy Survey Unit.
All Rights Reserved

=cut


