    my $pnop = (defined $_MAKE_OBJECT_MASK_{PNOP} ? $_MAKE_OBJECT_MASK_{PNOP} : 25);
    my $thresh = (defined $_MAKE_OBJECT_MASK_{THRESH} ? $_MAKE_OBJECT_MASK_{THRESH} : -3.0);
    my $grid = (defined $_MAKE_OBJECT_MASK_{GRID} ? $_MAKE_OBJECT_MASK_{GRID} : 64);

    # Get an output file name for the mask.

    my $outfile = sprintf("opm_%s",$Frm->file);

    # Get a temporary file name for the apm program to use.

    my $tmpfil = ORAC::TempFile->new(0);
    unlink $tmpfil->file;

    # Loop for each image extension...

    foreach my $i (1 .. $Frm->findnsubs) {
        my $inf = $Frm->getasubframe($i)->file;
        my $outf = sprintf("%s[%d]",$outfile,$i);

        # Do the work..

        my $errmsg;
        my $retval = cir_apm($inf,$tmpfil->file,"",$outf,0,$pnop,$thresh,$grid,1,
            $errmsg);
        if ($retval != CIR_OK) {
	    orac_throw "CIR_APM: failed in _OBJECT_MASK_\n$errmsg\n";
        }
        $Frm->getasubframe($i)->uhdr("OPM",$outf);
        $Frm->getasubframe($i)->update_header("CIR_OPM",TSTRING,$outf,
            "Object mask");
    }

    # Add some info into the PHU of the mask

    my $tmpFrm = $Frm->new($outfile);
    $tmpFrm->update_header("MASKTYPE",TSTRING,MASK_OPM,
	"This is an object mask");

    # Add the name of the OPM file to the info about the current file

    $Frm->uhdr("OPM",$outfile);
