# -*-cperl-*-

=head1 NAME

_DISPLAY_NOISE_ - Display bolometer noise

=head1 SYNOPSIS

_DISPLAY_NOISE_

=head1 DESCRIPTION

This primitive displays the bolometer noise data in a Kapview
window. The subarrays are mosaicked in the focal plane and this image
is displayed, allowing a direct comparison of the relative noise in
each subarray. The noise image is displayed in the top row and a
histogram in the bottom row.

The scale for the display (both the image and the histogram) is set by
the median noise value multiplied by the C<THRESH> parameter.

=head1 ARGUMENTS

This primitive supports the following arguments:

=over 4

=item B<COMP>

Component to display. Supported values are C<DATA> and C<ERR>. Default
is C<DATA>.

=item B<LOGFILE>

Flag to denote whether or not to write a log file. Default is 1 (yes).

=item B<THRESH>

Upper limit for display in units of the median noise. Default is 4.

=back

=head1 EXTERNAL TASKS

The following external tasks are used by this primitive:

=over 4

=item KAPPA:

NDFTRACE, SETTITLE, THRESH

=item ORAC-DR PRIMITIVES:

_FIND_IMAGE_STATISTICS_, _MAKE_MOSAIC_FPLANE_

=back

=head1 OUTPUT DATA

None.

=head1 OUTPUT FILES

The mosaic of the noise images has a suffix C<_noimos> or C<_avnoimos>
for the noise and average-noise mosaics respectively

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009-2011 the University of British Columbia.  All
Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Only continue if noise data actually exists in the Frame
return ORAC__OK unless ($Frm->uhdr("NOISE"));

# Which component is being displayed?
my $comp = lc(get_prim_arg( $_PRIM_ARGS_, "COMP", "data" ));
# Reset comp if we get something we don't recognize
$comp = "data" unless ( $comp =~ /^err/ );

# Set the units - they should be the same for all files...
my $file = $Frm->file;
$Mon{ndfpack_mon}->obeyw("ndftrace","ndf=$file");
my ($ORAC_STATUS, $units) = $Mon{ndfpack_mon}->get("ndftrace","units");

# Threshold for displaying noise data - limit to 10 times the median
# otherwise what's the point?
my $thr = get_prim_arg( $_PRIM_ARGS_, "THRESH", 4 );
$thr = 10 if ($thr > 10);

# Check for the total numbe of good bolometers and the maximum value
# for plotting - these were calculated by _ANALYZE_NOISE_
my $sumnumgood = $Frm->uhdr("NOISE_NUMGOOD");
my $plotmax = $Frm->uhdr("NOISE_PLOTMAX");
my $display_ok = ($sumnumgood && $sumnumgood > 0) ? 1 : 0;
if ($display_ok && $plotmax) {
  $plotmax *= $thr;
} else {
  $display_ok = 0;
}

# If there are good bolometers, proceed with making a focal-plane
# noise mosaic and displaying it
if ($display_ok) {
  # Reference subarray
  my $short = ($Frm->uhdr("ORAC_FILTER") =~ /450/) ? 1 : 0;
  my $refsub =  ($short) ? "s4d" : "s8b";
  # Mosaic noise files
  my %ref;
  # The current Frame should contain 1 file per subarray
  my @files = $Frm->files;
  foreach my $file (@files) {
    # Never trust the filenames...
    my $fitshdr = new Astro::FITS::Header::NDF( File => $file );
    $ref{lc($fitshdr->value("SUBARRAY"))} = $file;
  }
  my $ref = $ref{$refsub};
  unless ($ref) {
    # Pick first one...
    my @subs = sort keys %ref;
    $refsub = $subs[0];
    $ref = $ref{$refsub};
  }
  # Output file name for responsivity mosaic: _noimos
  my $noimos = "_noimos";
  my $wave = ($short) ? "450 um" : "850 um";
  # Set the title of the noise image to something meaningful
  my $obs = $Frm->hdr("OBSNUM");
  my $extra = "";
  if ($Frm->uhdr("QUICKLOOK")) {
    $extra = "/ scan " .$Frm->hdr("NSUBSCAN"). " (QL)";
  } elsif ($Frm->uhdr("SUMMIT")) {
    $extra = "/ scan " .$Frm->hdr("NSUBSCAN"). " (SUMMIT)";
  }
  my $title = "$wave noise: obs $obs $extra";
  if ($Frm->uhdr("AVNOISE")) {
    $noimos = "_avnoimos";
    $title = "Average noise (".($Frm->uhdr("AVNOISE"))." files)";
  }

  orac_print "\nDisplaying focal-plane mosaic for $title\n";

  my $out = $Frm->rewrite_outfile_subarray(scalar($Frm->inout($noimos)));
  my @out;

  my %refimage = ( refsub => $refsub, refimage => $ref );
  _MAKE_MOSAIC_FPLANE_ INFILES=\@files OUT=$out REFERENCE=\%refimage

  my $args = "ndf=$out title='$title'";
  $Mon{ndfpack_mon}->obeyw("settitle","$args");

  # Threshold the data at ZMAX and determine how many bolometers lie
  # above that cut
  my $thresh = new ORAC::TempFile;
  my $threshfile = $thresh->file;
  my $thrargs = "in=$out out=$threshfile thrhi=$plotmax newhi=bad thrlo=0 newlo=0";
  $Mon{kappa_mon}->obeyw("thresh","$thrargs");
  _FIND_IMAGE_STATISTICS_ IMAGE=$threshfile COMP=$comp VERBOSE=0
  my $nthrgood = $_FIND_IMAGE_STATISTICS_{RESULTS}->{NUMGOOD};
  $plotmax = sprintf "%g", $plotmax;
  my $threshpc = sprintf "%2.0f", 100.0 * $nthrgood / $sumnumgood;
  orac_print "Histogram shows $nthrgood bolometers ($threshpc %) below $plotmax $units\n\n", "green";

  my $tmpFrm = $Frm->new();
  $tmpFrm->files($out);
  my %options = ( ZMIN => 0, ZMAX => $plotmax, WINDOW => 1,
		  ZAUTOSCALE => 0, TITLE => $title );

  $Display->display_data($tmpFrm, \%options, -1);
  $Frm->push_intermediates($out);
} else {
    orac_warn "Skipping display of focal-plane mosaic - no good bolometers\n";
}
