#! -*-perl-*-

=head1 NAME

_MAKEMAP_FRAME_

=head1 SYNOPSIS

  _MAKEMAP_FRAME_ PIXSIZE=7.5

=head1 DESCRIPTION

This primitive takes timeseries data for the current frame and
constructs an image. This is a many to one operation, with only a
single output file created.

=head1 ARGUMENTS

=over 4

=item B<PIXSIZE>

Size of the output pixels in arcsec. The default is to use the values
stored in the calibration object (equal to the bolometer spacing)

=item B<SPREAD>

Desired pixel-spreading scheme. May be either C<nearest> for 
nearest-neighbour resampling or C<linear> for bi-linear resampling. 
Default is C<nearest>.

=back

=head1 ALGORITHMS

SMURF: QLMAKEMAP

=head1 FILE SUFFIX

Creates a single output file with a '_map' suffix.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2006-2008 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

my @out;

# What checks should we carry out?

# Should be an argument
my $pixsize = (exists $_QLMAKEMAP_FRAME_{PIXSIZE} && 
	       defined $_QLMAKEMAP_FRAME_{PIXSIZE}) ?
               $_QLMAKEMAP_FRAME_{PIXSIZE} : $Cal->pixelscale;

# Pixel-spreading scheme
my $spread = (exists $_QLMAKEMAP_FRAME_{SPREAD} && 
	      defined $_QLMAKEMAP_FRAME_{SPREAD}) ?
              lc($_QLMAKEMAP_FRAME_{SPREAD}) : "nearest";

# Reset to "nearest" if an unsupported scheme is given
if ( ($spread ne "nearest") && ($spread ne "linear") ) {
  orac_warn "Unsupported pixel-spreading scheme, $spread: using NEAREST\n";
  $spread = "nearest";
}

# Retrieve list of files in current frame
my @files = $Frm->files;

# Write filenames to a temp file
my $intmp = new ORAC::TempFile;
print {$intmp->handle} join("\n",@files[0..$#files]);

# Set output filename
my ($in, $out) = $Frm->inout('_map', 0);

# Argument list
my $args = "in=^".$intmp->file." out=$out pixsize=$pixsize spread=$spread";

# Call qlmakemap
orac_print "Calling qlmakemap... (this may take a few/several/many seconds) \n";
$Mon{smurf_mon}->obeyw("qlmakemap",$args);

# Register the new file name
$Frm->files( $out );

orac_print "Image $out created\n";

# Set sky subtraction and extinction flags as these steps are done
# within qlmakemap
$Frm->uhdr("SKY_SUBTRACTION",1);
$Frm->uhdr("EXTINCTION",1);
