#! -*-perl-*-

=head1 NAME

_MAKEMAP_FRAME_

=head1 SYNOPSIS

  _MAKEMAP_FRAME_ PARAMETERS...

=head1 DESCRIPTION

This primitive takes timeseries data for the current frame and
constructs an image. This is a many to one operation, with only a
single output file created.

=head1 ARGUMENTS

=over 4

=item B<SOMETHING>

SOMETHING....

=back

=head1 KNOWN ISSUES

...

=head1 ALGORITHMS

...

=head1 FILE SUFFIX

Creates a single output file with a '_map' suffix.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2006 University of British Columbia and the Particle
Physcis and Astronomy Research Council. All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut


my @out;

# What checks should we carry out?

# Retrieve list of files in current frame
my @files = $Frm->files;

# Write filenames to a temp file
my $intmp = new ORAC::TempFile;
print {$intmp->handle} join("\n",@files[0..$#files]);

# Set output filename
my ($in, $out) = $Frm->inout('_map');

# Argument list - no doubt this will get longer...
my $args = "in=^".$inlist." out=".$out." pixsize=".$pixsize." method=rebin accept";

# Call makemap
$Mon{smurf_mon}->obeyw("makemap",$args);

# Register the new file name
$Frm->files( $out );

orac_print "Image created \n";

