# -*-cperl-*-

=head1 NAME

_RETRIEVE_FASTFLATS_ - retrieve fast-ramp flatfield data from calibration system

=head1 SYNOPSIS

_RETRIEVE_FASTFLATS_

=head1 DESCRIPTION

A short helper primitive to find and return all of the associated raw
fast-ramp flatfield files stored in the calibration system for each
subarray. The calibration system can only check the Frame header, not
the subheaders. This means that the C<SUBARRAY> entry must be set to
each subarray in turn. Only then can the correct file be retrieved
from the calibration system.

=head1 ARGUMENTS

This primitive has no arguments.

=head1 EXTERNAL TASKS

This primitive uses no external tasks.

=head1 OUTPUT DATA

The Frame hdr entry C<SUBARRAY> will be present on exit, though it
will be C<undef> if not previously defined.

The primitive hash contains a single entry C<FASTFLATS> which contains
a reference to an array of the fast-ramp flatfield files if any
suitable fastflats were found.

=head1 OUTPUT FILES

None.

=head1 NOTES

None.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2011 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Cycle through the subarrays present and retrieve the relevant
# fastflat
my @fastflats;
my $origsub = $Frm->hdr("SUBARRAY");
foreach my $subarray ($Frm->subarrays) {
  $Frm->hdr(SUBARRAY => $subarray);
  my $fflat = $Cal->fastflat;
  push(@fastflats, $fflat) if $fflat;
}
# Store original value for the subarray hdr
$Frm->hdr(SUBARRAY => $origsub);

$_PRIM_ARGS_->{FASTFLATS} = \@fastflats if (@fastflats);
