# -*-cperl-*-

=head1 NAME

_RETRIEVE_FASTFLATS_ - retrieve fast-ramp flatfield data from calibration system

=head1 SYNOPSIS

_RETRIEVE_FASTFLATS_

=head1 DESCRIPTION

A short helper primitive to find and return all of the associated raw
or processed fast-ramp flatfield files stored in the calibration
system for each subarray. The calibration system can only check the
Frame header, not the subheaders. This means that the C<SUBARRAY>
entry must be set to each subarray in turn. Only then can the correct
file be retrieved from the calibration system.

=head1 ARGUMENTS

This primitive supports the following argument:

=over 2

=item B<TYPE>

Type of flatfield data to return. May be C<RAW> or C<SOL> to return
the raw data or a calculated flatfield solution. Default is C<RAW>.

=back

=head1 EXTERNAL TASKS

This primitive uses no external tasks.

=head1 OUTPUT DATA

The Frame hdr entry C<SUBARRAY> will be present on exit, though it
will be C<undef> if not previously defined.

If any suitable fastflats were found, the primitive hash contains the
entries C<FASTFLATS>, which contains a reference to an array of the
fast-ramp flatfield files, and C<FASTFLATS_SUB>, which contains a
reference to a hash of the fastflats indexed by subarray.

=head1 OUTPUT FILES

None.

=head1 NOTES

None.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2011 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Flatfield type to return
my $flat_type = lc(get_prim_arg($_PRIM_ARGS_, "TYPE", "raw"));

# Name of calibration method call
my $method = ($flat_type eq "raw") ? "fastflat" : "flat";

my (@fastflats, %fastflats);
# Cycle through the subarrays present and retrieve the relevant
# fastflat
my $origsub = $Frm->hdr("SUBARRAY");
foreach my $subarray ($Frm->subarrays) {
  $Frm->hdr(SUBARRAY => $subarray);
  my $fflat = $Cal->$method;
  if ($fflat) {
    push(@fastflats, $fflat);
    $fastflats{$subarray} = $fflat;
  }
}
# Store original value for the subarray hdr
$Frm->hdr(SUBARRAY => $origsub);

# Store results in primitive hash
if (@fastflats) {
  $_PRIM_ARGS_->{FASTFLATS} = \@fastflats;
  $_PRIM_ARGS_->{FASTFLATS_SUB} = \%fastflats;
}
