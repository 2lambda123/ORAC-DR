#! -*-perl-*-

=head1 NAME

_FLATFIELD_

=head1 SYNOPSIS

  _FLATFIELD_ 

=head1 DESCRIPTION

This primitive applies the flatfield correction to all files in the
current frame.

=head1 ARGUMENTS

=over 4

=item B<ANY_ARGS>

EXTCOR_MODE determines which extinction correction is applied. If set
to FULL, then an accurate pixel-level correction is applied taking
into account the airmass of individual pixels. If set to QUICKER then
the image is corrected assuming a single value for the airmass across
the array.

=back

=head1 KNOWN ISSUES

...

=head1 FILE SUFFIX

Creates output files with a '_ff' suffix.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2006 University of British Columbia and the Particle
Physcis and Astronomy Research Council. All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

my @out;

# What checks should we carry out?

my $inlist = new ORAC::TempFile;
my $outlist = new ORAC::TempFile;
my @files = $Frm->files;
print {$inlist->handle} join("\n",@files[0..$#files]);

# Write list of files to process
for my $i (1..$Frm->nfiles) {
  my ($in, $out) = $Frm->inout('_ff',$i);
  push(@out, $out);
  print {$outlist->handle} $out."\n";;
}

# Flatfield
my $args = "in=^".$inlist->file." out=^".$outlist->file;
$Mon{smurf_mon}->obeyw("flatfield",$args);

# Register new file names
$Frm->files( @out );

orac_print "Flatfield applied\n";

#my $mytime = localtime;
#orac_print $mytime ."\n";

