# -*-cperl-*-

=head1 NAME

_SPLIT_FTS_SCANS_

=head1 SYNOPSIS

_SPLIT_FTS_SCANS_

=head1 DESCRIPTION

Split out multiple unidirectional scans from a single NDF file into separate
single scan NDF files.

=head1 OUTPUT FILES

Creates output files with a C<nnnn_con> extension.
The Frame is updated with the output files.

=head1 NOTES

This primitive will operate on interferogram cubes.

=head1 AUTHOR

Matt Sherwood E<lt>matt.sherwood@uleth.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2013, University of Lethbridge.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

orac_say "Splitting...\n";

my $ext = "_scn";
my @outfiles = ();


for my $i (1..$Frm->nfiles) {
  my ($in, $out) = $Frm->inout($ext, $i);
  
  # Define a convenient temporary file name for the OUTFILES parameter
  my $outfiles = "splitter.$$";

  my $status = 0;

  $Frm->subarray($in);

  my $args = "in=$in outfiles=$outfiles out=$out";

  orac_say "Processing " . $out . "...: ";
  $status = $Mon{smurf_mon}->obeyw("fts2split","$args");
  if($status == ORAC__OK) {
    orac_say "DONE\n";
  } else {
    orac_say "FAILED\n";
  }

  if ($status == ORAC__OK) {
    # Obtain the filenames corresponding to data split into individual scans
    my @out = read_file_list( $outfiles );

    # Save outfiles to a temporary array
    push(@outfiles, @out);
    
    # Finished

    orac_print "Splitter generated ".scalar(@out)." files\n";
  } else {
    orac_warn "Splitter failed for some reason\n";
  }

  # Delete the outfiles file
  unlink $outfiles if (-e $outfiles);
}

# Register new file names in current Frame
$Frm->files( @outfiles );
$Frm->readhdr;

# Turn on suffix numbering since FTS2SPLIT will have generated multiple
# "scn" files from each concatenated input.
$Frm->uhdr('ALLOW_NUMBERED_SUFFICES', 1);
