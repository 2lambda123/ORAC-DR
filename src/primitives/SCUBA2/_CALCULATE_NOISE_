# -*-perl-*-

=head1 NAME

_CALCULATE_NOISE_ - calculate a white noise for each subarray

=head1 SYNOPSIS

_CALCULATE_NOISE_

=head1 DESCRIPTION

This primitive calculates a noise image for each subarray.

=head1 ARGUMENTS

This primitive currently has no arguments.

=head1 EXTERNAL TASKS

The following external task is used:

=over 4

=item SMURF:

CALCNOISE

=back

=head1 NOTES

Notes go here

=head1 OUTPUT DATA

The current Frame object is updated with the output noise files.

=head1 OUTPUT FILES

A noise file is created for each subarray with the suffix C<_noi>

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Collect files
orac_print "Calculating noise...\n";

# Retrieve lists of input/output files
my ($inlist, $outlist, @infiles) = write_file_list_inout( $Frm, "_noi");

# Calculate the noise
my $outfiles = "calcnoise.$$";
my $args = "in=^$inlist out=^$outlist outfiles=$outfiles";
$Mon{smurf_mon}->obeyw("calcnoise","$args");

# Read the actual list of output files written
my @outfiles = read_file_list( $outfiles );

unlink $outfiles;

# Store in the Frame
$Frm->files(@outfiles);
