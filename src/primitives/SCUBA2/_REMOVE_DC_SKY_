#! -*-perl-*-

=head1 NAME

_REMOVE_DC_SKY_ - Removes a DC sky value

=head1 SYNOPSIS

  _REMOVE_DC_SKY_

=head1 DESCRIPTION

Subtracts a mean sky value from an uncalibrated image. An error is
generated if this primitive is run on calibrated data since it is
assumed that this step will have been done already before
calibration. The primitives operates on all files in the current
Frame, and will only perform the action if sky removal has not already
been carried out on this Frame.

This primitive is an alternative to _REMOVE_PLANE_FROM_IMAGE_.

This is a Frame operation and should be used before group operations.

=head1 ARGUMENTS

The following arguments are supported

=over 4

=item B<METHOD>

Valid options are MEAN, MEDIAN or MODE. Default is MEAN.

=item B<LOGFILE>

Flag to denote whether to write results of sky removal to a log
file. Default is 1 (true).

=item B<VERBOSE>

Flag to denote whether to print informative messages to the
screen. Default is true (1).

=back

=head1 External Tasks

The following external tasks are used:

=over 4

=item KAPPA

C<csub>

=item SCUBA-2 primitives

_CALC_DC_SKY_, ADD_SKY_LOG_ENTRY_

=back

=head1 FILES

Creates output files with a C<_sky> extension.

=head1 KNOWN ISSUES

Does not determine units from input data files so it cannot do the
promised calibration check.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

Copyright (C) 2005-2008 the University of British Columbia.  All
Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

unless ( $Frm->uhdr("SKY_SUBTRACTION") ) {

  # Tell user...
  orac_print "Removing sky by calculating and subtracting a constant level\n";

  # Determine whether to subtract the mean, median or modal values from the image
  my $method = uc(get_prim_arg($_PRIM_ARGS_,"METHOD", "MEAN"));

  # Should I be verbose (default to yes)
  my $verbose = get_prim_arg( $_PRIM_ARGS_, "VERBOSE", 1);

  # Write logfiles (default to true)
  my $uselog = get_prim_arg( $_PRIM_ARGS_, "LOGFILE", 1);

  my @out;
  # Loop over files in the Frm object
  for my $i (1..$Frm->nfiles) {
    # Calculate the DC sky level.
    _CALC_DC_SKY_ IMAGE=$Frm->file($i) METHOD=$method
    my $sky = $_CALC_DC_SKY_{DCSKY};

    if ( defined $sky ) {
      # Everything's OK so subtract a DC sky level. 
      # Retrieve input and output names
      my ($in, $out) = $Frm->inout("_sky", $i);
      # Subtract the sky
      $Mon{kappa_mon}->obeyw("csub","in=$in out=$out scalar=$sky");
    
      $sky = sprintf "%12.7f", $sky;
      orac_print "Subtracting a constant sky level of $sky from $in (method=$method)\n" 
	if ($verbose);
      # Write to a logfile if desired
      if ( $uselog ) {
	_ADD_SKY_LOG_ENTRY_ DCSKY=$sky
      }
      # Store the new sky-subtracted output file
      push(@out, $out);
    }
  }
  $Frm->files(@out);

  orac_print "DC sky subtraction successful\n";

  # Set the sky subtraction flag
  $Frm->uhdr("SKY_SUBTRACTION",1);

}
