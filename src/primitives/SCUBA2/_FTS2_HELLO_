=head1 NAME

_FTS2_HELLO_ - FTS-2 introductory primitive

=head1 SYNOPSIS

 _FTS2_HELLO_

=head1 DESCRIPTION

This primitive should be called at the start of all FTS-2 recipes.

It checks that FTS-2 is in the beam but POL-2 is not and sets up
a number of C<uhdr> entries related to FTS-2 data processing.

Warnings are printed for C<uhdr> entries given a default value due
to the corresponding recipe parameter not being set, except in the
case of ZPD-specific parameters, when this warning is only printed
for ZPD recipes.

=head1 ARGUMENTS

None.

=head1 EXTERNAL TASKS

None.

=head1 OUTPUT DATA

None

=head1 OUTPUT FILES

None.

=head1 NOTES

The "tracking" port is identified via the C<INSTAP_X> FITS header.
If this is greater than zero, then port "8D" is assumed, otherwise
port "8C".  This determination is used to set up the C<uhdr> entries
C<FTS_TRACKING_PORT>, C<FTS_TRACKING_SUBARRAY> and C<FTS_IMAGE_SUBARRAY>
which are used by the C<_MASK_FTS_MAP_> primitive.

=head1 AUTHOR

Graham Bell E<lt>g.bell@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2012-2014 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut


# Check that FTS-2 is actually in the beam.

_CHECK_INBEAM_HEADER_ POL2=0 FTS2=1


# Read recipe parameters, but only warn about
# missing _ZPD_ parameters if it's a ZPD recipe.
# Where there are different values for 450
# and 850 microns a [450, 850] array is given here.
# Recipe parameters files should use a filter specifier
# to apply configuration for one or the other wavelength.

my %param = (
              FTS_STAGE_CENTER => 228.0,
              FTS_WN_LBOUND => [21.629, 11.220], # cm^-1
              FTS_WN_UBOUND => [23.105, 12.395], # cm^-1
              FTS_SCANDIR_ZPD => 0, # use direction-specific ZPD calibration?
              FTS_ZPD_ESTIMATE => 0.0,
              FTS_ZPD_TOLERANCE => 0.05,
              FTS_ZPD_BASE_OFFSET => [3, 6],
              FTS_ZPD_BASE_WIDTH => 3,
              FTS_ZPD_PEAK_HEIGHT => [0.2, 0.4],
              FTS_ZPD_PEAK_WIDTH => [0.03, 0.06],
            );

my $comp = $Frm->hdr('FILTER') =~ /850/ ? 1 : 0;

my %param_dyn = (
                  FTS_STAGE_CENTER => sub {$Frm->hdrval('FTS_CNTR');},
                );

foreach my $key (keys %param) {
  my ($reckey, $defval) = ($key, $param{$key});

  if (ref $defval) {
    $defval = $defval->[$comp];
  }

  if (exists $RECPARS{$reckey}) {
    $Frm->uhdr($key, $RECPARS{$reckey});
  }
  elsif (not ($key =~ /_ZPD_/ and $Frm->uhdr('ORAC_DR_RECIPE') !~ /_ZPD/)) {
    if (exists $param_dyn{$key}) {
      my $dyndef = $param_dyn{$key}->();
      if (defined $dyndef) {
        $Frm->uhdr($key, $dyndef);
        next;
      }
    }
    orac_warn('Assuming default value for ' . $key . ' : ' . $defval . "\n");
    $Frm->uhdr($key, $defval);
  }
}


# Configure _STACK_IMAGES_BY_SUBARRAY_ depending on SCANDIR_ZPD.

if ($Frm->uhdr('FTS_SCANDIR_ZPD')) {
  $Frm->uhdr('STACK_IMAGES_GROUPING', 'SCANDIR');
  orac_say('Will use scan direction specific ZPD calibration.');
}
else {
  orac_say('Will use mean ZPD calibration regardless of scan direction.');
}


# Determine which FTS-2 Tracking Port is being used.

my $instap_x = $Frm->hdr('INSTAP_X');

if ($instap_x > 0) {
  # Port 1.
  $Frm->uhdr('FTS_TRACKING_PORT', '8D');
  $Frm->uhdr('FTS_TRACKING_SUBARRAY', $comp ? 's8d' : 's4a');
  $Frm->uhdr('FTS_IMAGE_SUBARRAY', $comp ? 's8c' : 's4b');
}
else {
  # Port 2.
  $Frm->uhdr('FTS_TRACKING_PORT', '8C');
  $Frm->uhdr('FTS_TRACKING_SUBARRAY', $comp ? 's8c' : 's4b');
  $Frm->uhdr('FTS_IMAGE_SUBARRAY', $comp ? 's8d' : 's4a');
}
