#! -*-perl-*-

=head1 NAME

_ADD_NOISE_LOG_ENTRY_ - Write noise log entry to disk

=head1 SYNOPSIS

  _ADD_NOISE_LOG_ENTRY_ ??????

=head1 DESCRIPTION

Write entry to C<log.noise> given an estimate of the noise properties
of the current Frame or Group image.

=head1 ARGUMENTS

The following arguments are supported

=over 4

=item SIGMA

Noise level in current units

=back

=head1 FORMAT

The logfile has the following columns:

=over 4

=item UT

The UT date in C<YYYYMMDD.frac> format.

=item HST

The time of the observation in Hawaii.

=item Obs

The observation number.

=item Source

The source name.

=item Mode

The observing mode.

=item Filter

The specific filter associated with the fcf result.

=item Elevation

The elevation of the observation.

=item CSO

Equivalent CSO tau derived from the tau used to reduce
the observation.

=item Tau

The tau value used for the reduction.

=item Seeing

The seeing value as stored in the header.

=item Sigma

Noise level

=head1 FILES

Creates an output log file called C<log.noise>

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

Copyright (C) 2008 the University of British Columbia.  All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

# Read arguments
my $sigma = get_prim_arg( $_PRIM_ARGS_, "SIGMA", undef );
unless (defined $sigma) {
  orac_throw("ADD_NOISE_LOG_ENTRY: SIGMA must be specified as an argument");
}

my $usegroup = get_prim_arg( $_PRIM_ARGS_, "GROUP", 0);

# Create new log file if necessary
my $time = gmtime();
my $noiselog = new ORAC::LogFile("log.noise");
$noiselog->header("#Noise properties log file - created on $time UT",
		"#\n# UT                HST   Obs Source       Mode           Filter  El CSO    Tau  Seeing  Sigma",
		"#----------------------------------------------------------------------------------------------------");


# Obtain common parameters
_GET_LOG_PARAMETERS_ GROUP=$usegroup
my ( $uttime, $hst, $obsnum, $src, $mode, $filter, $el, $cso, $tau, $see ) 
  = @{ $_GET_LOG_PARAMETERS_{PARAMS} };

# Reformat parameters for printing
$sigma = sprintf "%12.7f", $sigma;

# Write logfile entry
$noiselog->addentry("$uttime $hst $obsnum $src $mode   $filter   $el $cso $tau $see  $sigma");
