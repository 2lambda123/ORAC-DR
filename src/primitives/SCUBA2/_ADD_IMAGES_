#! -*-perl-*-

=head1 NAME

_ADD_IMAGES_ - Add together a series of NDFs

=head1 SYNOPSIS

 _ADD_IMAGES_ IN=$imagelistref OUT=$out

=head1 DESCRIPTION

This primitive uses KAPPA C<MSTATS> to add up a list of images. The
user specifies the names of one or more NDFs (assumed to be located
under the .MORE.SMURF.COMP hierarchy). This is useful for calculating
the total exposure time and weights for a series of images which are
mosaicked together. Note that the sum is carried out on a
pixel-for-pixel basis so the images must be aligned to a common
coordinate system before calling this primitive. Nothing is done if
the chosen component(s) do not exist (indicated by the presence of an
appropriate Frame uhdr entry).

=head1 ARGUMENTS

=over 4

=item B<INLIST>

Reference to array of image names. No default.

=item B<OUT>

Name of output file. No default.

=item B<COMPS>

Comma-separated list of NDF components to add. Default is the
C<EXP_TIME> and C<WEIGHTS> components under the C<.MORE.SMURF>
extension. 

=back

=head1 ALGORITHMS

=over 4

=item Starlink applications

KAPPA MSTATS

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2008 the University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

# Check arguments
my $inref = get_prim_arg( $_PRIM_ARGS_, "INLIST", undef );
# No default value, so throw an error if no input list
orac_throw "Error: must supply reference to list of input files to _ADD_IMAGES_\n" 
  unless ( defined $inref || (ref($inref) ne "ARRAY") );

# Input list of files
my @infiles = @{ $inref };

# Output file - default to current Frame file
my $outfile = get_prim_arg( $_PRIM_ARGS_, "OUT", $Frm->file );

# Name of components to add if defined - default to exp_time and weights
my $complist = uc(get_prim_arg( $_PRIM_ARGS_, "COMPS", "exp_time,weights" ));
# Split on commas to get list of componentsa
my @comps = split(/,/, $complist);

# Number of input files - if there is only one file then do nothing
my $nfiles = scalar(@infiles);
if ( $nfiles > 1 ) {
  foreach my $comp ( @comps ) {
    # Check that the chosen component "exists"
    if ( $Frm->uhdr("$comp") ) {
      my @inlist = @infiles;
      # Add component to end of output file name if necessary
      my $out = $outfile.".MORE.SMURF.".$comp;
      # Delete the existing version of the current component in the output file
      $Mon{ndfpack_mon}->obeyw("erase","object=$out ok=true");
      # Feedback for user
      orac_print "\nCalculating total exposure time..." 
	if ( lc($comp) =~ /exp_time/);
      orac_print " Calculating total weights..." 
	if ( lc($comp) =~ /weights/);

      # Use MSTATS with estimator=sum
      foreach (@inlist) {
	$_ .= ".more.smurf.".$comp;
      }
      my $inlist = write_file_list( @inlist );
      my $args = "in=^$inlist wlim=0 variance=f trim=false estimator=sum single=false out=$out";
      $Mon{kappa_mon}->obeyw("mstats","$args");
    }
  }
}
