# vim: syn=perl

=head1 NAME

_MASK_FTS_MAP_ - Mask a map taken with FTS-2 in the beam

=head1 SYNOPSIS

 _MASK_FTS_MAP_

=head1 DESCRIPTION

This primitive masks a time series taken with FTS-2 beam
to leave only those parts close to the source and
in within the FTS-2 port.  This should remove images of
the source through the other FTS-2 port.

Files not identified as being part of the map are left
in the frame unaltered.

=head1 ARGUMENTS

=over 4

=item B<FTSPORT>

FTS-2 port selection to be passed to makemap if specified.
[TRACKING]

=item ONLY_TARGET_SUBARRAY

Specifies that only files from the target subarray (as selected
by FTSPORT) will be left in the frame. [1]

=back

=head1 EXTERNAL TASKS

SMURF.

=head1 OUTPUT DATA

None

=head1 OUTPUT FILES

None.

=head1 NOTES

None.

=head1 AUTHOR

Graham Bell E<lt>g.bell@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2013 Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

my @files = $Frm->files();
my @output = ();

my %types = map {$_ => 1} qw/science pointing focus/;

my $tracking_port = $Frm->uhdr('FTS_TRACKING_PORT');
my $tracking_subarray = lc($Frm->uhdr('FTS_TRACKING_SUBARRAY'));
my $image_subarray = lc($Frm->uhdr('FTS_IMAGE_SUBARRAY'));

my $only_tracking = get_prim_arg($_PRIM_ARGS_, 'ONLY_TRACKING_SUBARRAY', 1);

my $fts_port = get_prim_arg($_PRIM_ARGS_, "FTSPORT", 'TRACKING');

orac_say('Masking timeseries around source position.');

foreach (my $i = 0; $i < scalar @files; $i ++) {
  my ($in, $out) = $Frm->inout('_msk', $i + 1);

  next if $only_tracking and lc($Frm->subarray($i + 1)) ne
      (lc($fts_port) eq 'image' ? $image_subarray : $tracking_subarray);

  if ($types{lc($Frm->hdrval('SEQ_TYPE', $i))}) {
    $Mon{'smurf_mon'}->obeyw('fts2maskmap', "in=$in out=$out ftsport=$fts_port");
    push @output, $out;
  }
  else {
    push @output, $in;
  }
}

$Frm->files(@output);
$Frm->readhdr();
