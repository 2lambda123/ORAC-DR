# -*-cperl-*-

=head1 NAME

_SUMMIT_STEER_ - steering primitive for the Summit pipeline

=head1 SYNOPSIS

_SUMMIT_STEER_

=head1 DESCRIPTION

This primitive tells the pipeline to ignore SCAN data which will not
be processed into an image. Once a new Group image has been created,
all subsequent Frames are marked as not good so the pipeline does not
attempt to mosaic processed and unprocessed data. A flag is set so
that the ignored data are not calibrated.

This primitive should ONLY be called in summit recipes (denoted by
the C<_SUMMIT> suffix).

=head1 OUTPUT DATA

The current Frame is set to bad.

The uhdr entry C<NOCALIB> is set to 1 to ensure the pipeline will not
attempt to calibrated the data.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 University of British Columbia.  All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Ignore new data if a new Group image was created from SCAN data
if ( $Grp->uhdr("NEWIMAGE") &&
     $Frm->uhdr("ORAC_OBSERVATION_MODE") =~ /scan/i ) {
  $Frm->isgood(0);

  # Set the NOCALIB flag so data won't be calibrated
  $Frm->uhdr("NOCALIB",1);
}

# Store current TCS_INDEX
$Frm->uhdr("TCS_INDEX", $Frm->jcmtstate("TCS_INDEX", "end") );

# Check and set the LAST_INDEX flag
if ( defined $Grp->uhdr("LAST_INDEX") ) {
  # If it exists already check if a new observation has started and
  # reset it to the current value. A new obs has started if the
  # LAST_INDEX and TCS_INDEX are different and the TCS_INDEX is 1.
  $Grp->uhdr("LAST_INDEX",1)
    if ( ($Frm->uhdr("TCS_INDEX") == 1) &&
	 ($Frm->uhdr("TCS_INDEX") != $Grp->uhdr("LAST_INDEX")) );
} else {
  # No pre-existing value so store the current TCS_INDEX
  $Grp->uhdr("LAST_INDEX", $Frm->uhdr("TCS_INDEX") );
}
