# -*-perl-*-

=head1 NAME

_COPY_RAW_DATA_ - Copy data from input directory to output directory.

=head1 DESCRIPTION

This primitive copies the input data (which typically resides in
$ORAC_DATA_IN) to the $ORAC_DATA_OUT directory unchanged.

=head1 ARGUMENTS

=over 4

=item B<SUBIMAGES>

If true, only copies files that are associated with sub images
(.I1, .In etc). This means that raw time series will not be copied
but DREAM and STARE images will be. Default is to copy anything.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for SCUBA2.

=back

=head1 OUTPUT DATA

=over 4

=item *

A file whose filename is of the same form as the input file, but with
_raw appended.

=back

=head1 TASKS

KAPPA: NDFCOPY.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2008 Science and Technology Facilities Council.
Copyright (C) 2007 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# only really want this for DREAM/STARE
my $dsonly = (exists $_PRIM_ARGS_->{SUBIMAGES} ?
              $_PRIM_ARGS_->{SUBIMAGES} : 0 );

# see if this is time series data.
my $skipcopy = 0;
if ($dsonly) {
    my $seq = $Frm->hdrval( "SEQSTART" );
    if (!defined $seq) {
        # time series - so do not copy
        $skipcopy = 1;
    }
}

if (!$skipcopy) {
    orac_print "Copying raw data to local working directory...";
    foreach my $i ( 1 .. $Frm->nfiles ) {

        my( $in, $out ) = $Frm->inout( "_raw", $i );
        $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out" );
        $Frm->file( $i, $out );

    }
    orac_print "done.\n";

    # Tidy up output.
    orac_print "\n";
}
