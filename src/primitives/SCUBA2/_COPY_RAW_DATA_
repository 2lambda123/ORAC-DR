# -*-perl-*-

=head1 NAME

_COPY_RAW_DATA_ - Copy data from input directory to output directory.

=head1 SYNOPSIS

_COPY_RAW_DATA_

=head1 DESCRIPTION

This primitive copies the input data (which typically resides in
$ORAC_DATA_IN) to the $ORAC_DATA_OUT directory unchanged.

The Frame object is updated with the new files.

=head1 ARGUMENTS

The following argument is supported:

=over 4

=item B<SUBIMAGES>

If true, only copy files that are associated with sub images (.I1,
 .I2, ... .In etc). This means that raw time series will not be copied
but DREAM and STARE images will be. Default is to copy anything.

=back

=head1 EXTERNAL TASKS

=over 4

=item KAPPA: 

NDFCOPY

=back

=head1 NOTES

This primitive is suitable for SCUBA-2.

Dark frames will not be copied.

=head1 OUTPUT DATA

A file whose filename is of the same form as the input file, but with
suffix C<_raw> appended.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2008 Science and Technology Facilities Council.
Copyright (C) 2007 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# only really want this for DREAM/STARE
my $dsonly = (exists $_PRIM_ARGS_->{SUBIMAGES} ?
              $_PRIM_ARGS_->{SUBIMAGES} : 0 );

# see if this is time series data.
my $skipcopy = 0;
if ($dsonly) {
    my $seq = $Frm->hdrval( "SEQSTART" );
    if (!defined $seq) {
        # time series - so do not copy
        $skipcopy = 1;
    }
}

if (!$skipcopy) {
    orac_print "Copying raw data to local working directory...";
    foreach my $i ( 1 .. $Frm->nfiles ) {

        my( $in, $out ) = $Frm->inout( "_raw", $i );
        $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out" );
        $Frm->file( $i, $out );

    }
    orac_print "done.\n";

    # Tidy up output.
    orac_print "\n";
}
