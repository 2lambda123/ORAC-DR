#! -*-perl-*-

=head1 NAME

_MAKE_MOSAIC_FRAME_ - Create frame mosaic

=head1 SYNOPSIS

 _MAKE_MOSAIC_FRAME_ MAKEMOS=1 METHOD=MEAN GENVAR=0

=head1 DESCRIPTION

This primitive is a Frame-specific wrapper to _MAKE_MOSAIC_.

=head1 ARGUMENTS

=over 4

=item B<MAKEMOS>

A flag to denote whether to use CCDPACK MAKEMOS for mosaicking the
images. Default is 0 (no), which uses KAPPA WCSMOSAIC instead.

=item B<METHOD>

The method to be used for resampling the aligned images. This
corresponds to the C<method> parameter for WCSMOSAIC and WCSALIGN,
which is different from that for MAKEMOS. See WCSALIGN and/or
WCSMOSAIC documentation for further details. Default value is
C<nearest>.

=item B<MAKEMOS_METHOD>

The method by which MAKEMOS combines the images. Default is
C<mean>. See the MAKEMOS documentation for a description of the
possible values.

=item B<GENVAR>

Flag to determine whether or not to use genvar when
mosaicking. Default is 1 (yes),

=item B<WAIT>

Flag to denote whether to wait until the current observation has ended
before processing the data. Only relevant for online processing at the
telescope. Default is 0 (no).

=item B<VERBOSE>

Flag to denote whether to display extra information. Default is 0
(no).

=back

=head1 FILE SUFFIX

Creates a single output image with a suffix of '_fmos'.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2004-2007 Particle Physics and Astronomy Research
Council and University of British Columbia.  All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut


# Should I be verbose (default to no)
my $verbose = (exists $_MAKE_MOSAIC_FRAME_{VERBOSE} &&
               defined $_MAKE_MOSAIC_FRAME_{VERBOSE}) ?
               $_MAKE_MOSAIC_FRAME_{VERBOSE} : 0;

# Are we waiting until the observation has finished
my $wait = (exists $_MAKE_MOSAIC_FRAME_{WAIT} &&
	    defined $_MAKE_MOSAIC_FRAME_{WAIT}) ?
            $_MAKE_MOSAIC_FRAME_{WAIT} : 0;

# Do we want to use makemos?
my $makemos = (exists $_MAKE_MOSAIC_FRAME_{MAKEMOS} &&
	       defined $_MAKE_MOSAIC_FRAME_{MAKEMOS}) ?
               $_MAKE_MOSAIC_FRAME_{MAKEMOS} : 0;

# Coordinate frame
my $coframe =  (exists $_MAKE_MOSAIC_FRAME_{COORD_FRAME} &&
	       defined $_MAKE_MOSAIC_FRAME_{COORD_FRAME}) ?
               lc($_MAKE_MOSAIC_FRAME_{COORD_FRAME}) : undef;

# Method for combining images in makemos 
my $makemos_method = "";
if ( $makemos ) {
  $makemos_method = (exists $_MAKE_MOSAIC_FRAME_{MAKEMOS_METHOD} &&
		     defined $_MAKE_MOSAIC_FRAME_{MAKEMOS_METHOD}) ? 
		     lc($_MAKE_MOSAIC_FRAME_{MAKEMOS_METHOD}) : "mean"; 
}

# Method for resampling images in WCSALIGN and WCSMOSAIC
my $method = (exists $_MAKE_MOSAIC_FRAME_{METHOD} &&
	      defined $_MAKE_MOSAIC_FRAME_{METHOD}) ? 
              lc($_MAKE_MOSAIC_FRAME_{METHOD}) : "nearest"; 

if ( !$wait || ($wait && $Frm->hdrval('OBSEND',-1) ) ) {

  # Set the coordinate frame
  unless ( $coframe ) {
    my $in = $Frm->file(1);
    $Mon{ndfpack_mon}->obeyw("wcsattrib","ndf=$in mode=get name=system");
    (my $ORAC_STATUS, $coframe) = $Mon{ndfpack_mon}->get("wcsattrib","value");
  }

  orac_print "Making FRAME mosaic\n";

  # Call _MAKE_MOSAIC_
  _MAKE_MOSAIC_ USEGRP=0 MAKEMOS=$makemos MAKEMOS_METHOD=$makemos_method METHOD=$method VERBOSE=$verbose COORD_FRAME=$coframe

}

