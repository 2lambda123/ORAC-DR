# -*-cperl-*-

=head1 NAME

_DISPLAY_RESPONSIVITIES_ - Display the current and previous bolometer responsivity maps

=head1 SYNOPSIS

_DISPLAY_RESPONSIVITIES_ ERR=1

=head1 DESCRIPTION

This primitive displays the current and previous bolometer
responsivity data in a single Kapview window. Images of the bolometer
responsivities are displayed on the same scale, along with histograms
of values (also on the same scale). The percentage change in
responsivity between the current and previous solutions is also
displayed as a 2-D image.

=head1 ARGUMENTS

This primitive supports the following arguments:

=over 4

=item B<CLIP>

Number of standard deviations at which to clip the data before
displaying the data on a histogram. The default (undef) is no
clipping.

=item B<COMP>

Component to display. Supported values are C<DATA> and C<ERR>. Default
is C<DATA>.

=item B<FRAME>

Name of ORAC::FRAME object to use. No default.

=back

=head1 EXTERNAL TASKS

The following external tasks are used by this primitive:

=over 4

=item KAPPA:

MATHS, NDFCOPY, SETTITLE

=item ORAC-DR PRIMITIVES:

_FIND_IMAGE_STATISTICS_

=back

=head1 NOTES

The B<CLIP> parameter applies to the data in the current solution. The
corresponding absolute value is used to define the range of values to
be displayed from the previous solution.

This primitive relies on the current and previous responsivity files
corresponding to file numbers 2 and 3 in the given Frame object.

=head1 OUTPUT DATA

On exit the given Frame object will contain the name of the percentage
change image. However, note that this file will be deleted at the end
of processing by the REDUCE_FLATFIELD recipe.

=head1 OUTPUT FILES

None.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 the University of British Columbia.  All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Which component is being displayed?
my $comp = lc(get_prim_arg( $_PRIM_ARGS_, "COMP", "data" ));
# Reset comp if we get something we don't recognize
$comp = "data" unless ( $comp =~ /^err/ );

my $Frmobj = get_prim_arg( $_PRIM_ARGS_, "FRAME", undef );

if ( defined $Frmobj ) {

  # Retrieve CLIP parameter
  my $clip = get_prim_arg( $_PRIM_ARGS_, "CLIP", "" );

  # Define the lookup table between subarray letter and kapview window
  my %subwindow = ( 'a' => 0, 'b' => 1, 'c' => 2, 'd' => 3 );

  # Retrieve subarray name
  my $subarray = lc($Frmobj->hdr('SUBARRAY'));
  # Set the Kapview window accordingly
  my $window = $subwindow{substr($subarray,-1)};

  # Get current and previous responsivity solutions
  my $current = $Frmobj->uhdr("RESP_NEW");
  push (my @files, $current);
  my $previous = $Frmobj->uhdr("RESP_OLD");
  push (@files, $previous);

  # Set the titles of the current and previous images to something meaningful
  my $obs = $Frm->uhdr("ORAC_OBSERVATION_NUMBER");
  # Current
  my $text = ($Grp->uhdr("FASTFLAT")) ? "fastflat" : "solution";
  my $args = "ndf=$current title='$subarray PROPOSED $text / Obs $obs'";
  $Mon{ndfpack_mon}->obeyw("settitle","$args");

  # Previous
  $text = ($Grp->uhdr("FASTFLAT") && $Frm->hdr("OBSEND"))
    ? "fastflat" : "solution";
  $args = "ndf=$previous title='$subarray CURRENT $text'";
  $Mon{ndfpack_mon}->obeyw("settitle","$args");

  # Store both files in the current Frame object
  $Frmobj->files(@files);

  # Find min/max of current responsivity image so previous image can
  # be displayed on same scale
  _FIND_IMAGE_STATISTICS_ IMAGE=$current HISTAT=0 COMP=$comp VERBOSE=0
  my $zmin = $_FIND_IMAGE_STATISTICS_{RESULTS}->{MIN};
  my $zmax = $_FIND_IMAGE_STATISTICS_{RESULTS}->{MAX};
  if ( $clip eq "" ) {
    $clip = max(abs($zmin), abs($zmax)) / $_FIND_IMAGE_STATISTICS_{RESULTS}->{SIGMA};
  }

  my %options = ( WINDOW => $window, SIGMA => $clip, ZMIN => $zmin, ZMAX => $zmax );

  $Display->display_data($Frmobj, \%options, -1);

  # Now display the percentage change image
  my $delta = $Frmobj->uhdr("RESP_DELTA");
  $Frmobj->files( ($delta) );
  # Display limits for delta image
  ($zmin, $zmax) = (-10.0, 10.0);

  %options = ( WINDOW => $window, SIGMA => $clip, ZMIN => $zmin, ZMAX => $zmax );
  $Display->display_data($Frmobj, \%options, -1);

} else {
  orac_warn "Must supply FRAME argument - will not display responsivity results\n";
}
