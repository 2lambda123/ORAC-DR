# -*-perl-*-

=head1 NAME

_MAKE_MOSAIC_GROUP_ - Create group mosaic

=head1 SYNOPSIS

 _MAKE_MOSAIC_GROUP_  COADD_MODE=RUNNING

=head1 DESCRIPTION

This primitive takes all the aligned sub-scan frames from each
sub-array or aligned frame mosaics and mosaics them into a single
coadded output group image.

Does not require the use of _MAKE_MOSAIC_FRAME_. This primitive
supports the -batch command line option.

=head1 ARGUMENTS

=over 4

=item B<COADD_MODE>

Controls the coadding mode for the primitive. If COADD_MODE=RUNNING,
the new frames are combined with the existing group image. If
COADD_MODE=STACKALL the group image is recreated from all the constituent
frames each time it is called. Default mode is 'STACKALL'.

=item B<MAKEMOS>

A flag to denote whether to use CCDPACK MAKEMOS for mosaicking the
images. Default is 0 (no), which uses KAPPA WCSMOSAIC instead.

=item B<METHOD>

The method to be used for resampling the aligned images. This
corresponds to the C<method> parameter for WCSMOSAIC and WCSALIGN,
which is different from that for MAKEMOS. See WCSALIGN and/or
WCSMOSAIC documentation for further details. Default value is
C<nearest>.

=item B<MAKEMOS_METHOD>

The method by which MAKEMOS combines the images. Default is
C<mean>. See the MAKEMOS documentation for a description of the
possible values.

=item B<COORD_FRAME>

Name of desired coordinate frame for output image. May be any
supported by C<AST>. Default value will be obtained from the current
Frame.

=item B<VERBOSE>

Flag to denote whether to display extra information. Default is 0
(no).

=back

=head1 KNOWN ISSUES

Assumes the _ALIGN_ARRAYS_ primitive has been run on the input images.

Defining the output filename for the Group mosaic is a bit of a hack.

=head1 FILE SUFFIX

Creates a single output group image with a suffix of '_mos'.

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2004-2008 Particle Physics and Astronomy Research
Council and University of British Columbia.  All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

# Should I be verbose (default to no)
my $verbose = (exists $_MAKE_MOSAIC_GROUP_{VERBOSE} &&
               defined $_MAKE_MOSAIC_GROUP_{VERBOSE}) ?
               $_MAKE_MOSAIC_GROUP_{VERBOSE} : 0;

# Are we waiting until the observation has finished
my $wait = (exists $_MAKE_MOSAIC_GROUP_{WAIT} &&
	    defined $_MAKE_MOSAIC_GROUP_{WAIT}) ?
            $_MAKE_MOSAIC_GROUP_{WAIT} : 0;

# Coordinate frame
my $coframe =  (exists $_MAKE_MOSAIC_GROUP_{COORD_FRAME} &&
	       defined $_MAKE_MOSAIC_GROUP_{COORD_FRAME}) ?
               lc($_MAKE_MOSAIC_GROUP_{COORD_FRAME}) : undef;

if ( !$wait || ($wait && $Frm->hdrval('OBSEND', -1)) ) {

  # Do we want to use makemos?
  my $makemos = (exists $_MAKE_MOSAIC_GROUP_{MAKEMOS} &&
		 defined $_MAKE_MOSAIC_GROUP_{MAKEMOS}) ?
                 $_MAKE_MOSAIC_GROUP_{MAKEMOS} : 0;

  # Method for combining images in makemos 
  my $makemos_method = "";
  if ( $makemos ) {
    $makemos_method = (exists $_MAKE_MOSAIC_GROUP_{MAKEMOS_METHOD} &&
		       defined $_MAKE_MOSAIC_GROUP_{MAKEMOS_METHOD}) ? 
		       lc($_MAKE_MOSAIC_GROUP_{MAKEMOS_METHOD}) : "mean"; 
  }

  my $coadd_mode = uc($_MAKE_MOSAIC_GROUP_{COADD_MODE} || 'STACKALL');

  # Set the coordinate frame
  unless ( $coframe ) {
    my $in = $Frm->file(1);
    $Mon{ndfpack_mon}->obeyw("wcsattrib","ndf=$in mode=get name=system");
    (my $ORAC_STATUS, $coframe) = $Mon{ndfpack_mon}->get("wcsattrib","value");
  }

  # Method for determining resampling the image during alignment
  my $method = (exists $_MAKE_MOSAIC_GROUP_{METHOD} &&
		defined $_MAKE_MOSAIC_GROUP_{METHOD}) ? 
		lc($_MAKE_MOSAIC_GROUP_{METHOD}) : "nearest"; 

  orac_print "Making GROUP mosaic\n";
  # Unset the NewImage flag
  $Grp->uhdr("NEWIMAGE",0);

  _MAKE_MOSAIC_ USEGRP=1 MAKEMOS=$makemos MAKEMOS_METHOD=$makemos_method METHOD=$method COADD_MODE=$coadd_mode VERBOSE=$verbose COORD_FRAME=$coframe

  # Tell the display system that there's a new image to display
  $Grp->uhdr("NEWIMAGE",1);

}
