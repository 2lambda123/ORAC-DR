# -*-perl-*-

=head1 NAME

_MAKE_MOSAIC_GROUP_ - Create group mosaic

=head1 SYNOPSIS

 _MAKE_MOSAIC_GROUP_  COADD_MODE=RUNNING

=head1 DESCRIPTION

This primitive takes all the aligned sub-scan frames from each
sub-array or aligned frame mosaics and mosaics them into a single
coadded output group image.

Does not require the use of _MAKE_MOSAIC_FRAME_. This primitive
supports the -batch command line option.

=head1 ARGUMENTS

=over 4

=item B<COADD_MODE>

Controls the coadding mode for the primitive. If COADD_MODE=RUNNING,
the new frames are combined with the existing group image. If
COADD_MODE=STACKALL the group image is recreated from all the constituent
frames each time it is called. Default mode is 'STACKALL'.

=back

=head1 KNOWN ISSUES

Assumes the _ALIGN_ARRAYS_ primitive has been run on the input images.

Some issues with the determination of group file name.

=head1 ALGORITHMS

Usess CCDPACK MAKEMOS.

=head1 FILE SUFFIX

Creates a single output group image with a suffix of '_mos'.

=head1 AUTHOR

Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2004-2005 Particle Physics and Astronomy Research Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place,Suite 330, Boston, MA  02111-1307, USA

=cut

my $coadd_mode = uc($_MAKE_MOSAIC_GROUP_{COADD_MODE} || 'STACKALL');

if ($Grp->lastmember($Frm)) {

  # if the group file does not exist we can treat this as if
  # the coadd option is STACKALL
  $coadd_mode = 'STACKALL' unless $Grp->file_exists;

  # write input text file
  my $intmp = new ORAC::TempFile;

  if ($coadd_mode eq 'RUNNING') {
    if ($Grp->file_exists) {
      print {$intmp->handle} $Grp->file ."\n";

      for my $fname ($Frm->files) {
	print {$intmp->handle} $fname ."\n";
      }
    } else {
      orac_warn "Managed to get into RUNNING average without a group file";
    }

  } elsif ($coadd_mode eq 'STACKALL') {
    # combine all the frames from all the groups
    for my $f ($Grp->members) {
      for my $fname ($f->files) {
	print {$intmp->handle} $fname ."\n";
      }
    }
  } else {
    orac_err("Unrecognized COADD_MODE ($coadd_mode).");
    my $ORAC_STATUS = ORAC__ERROR;
  }

  my $out = $Grp->file;
  $out .= "_mos" unless $out =~ /_mos$/; # horrible hack KLUGE

  my $tmpobj = new ORAC::TempFile(0);
  my $tmpout = $tmpobj->file;

  $Mon{ccdpack_reg}->obeyw("makemos","in=^".$intmp->file." nousevar nozero noscale out=$tmpout title=Group");

  rename $tmpout .".sdf", $out .".sdf" 
     or die "Error renaming temp file"; # horrible hack KLUGE
  $Grp->file( $out );

}
