#! -*-perl-*-

=head1 NAME

_CALCULATE_DARK_ - Calculate dark frames from a dark observation

=head1 SYNOPSIS

  _CALCULATE_DARK_

=head1 DESCRIPTION

Calculate a mean dark frame from a DARK observation.

This is a Frame operation and should be used before group operations.

=head1 ARGUMENTS

This primitive has no arguments

=head1 External Tasks

The following external tasks are used:

=over 4

=item SMURF

C<calcdark>

=back

=head1 FILES

Creates C<_drk> which is registered with the calibration system

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

Copyright (C) 2008 the University of British Columbia.  All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

# Just darks
my ($in, $out, @outdarks) = write_file_list_inout( $Frm, "_drk" );

$Mon{smurf_mon}->obeyw("calcdark","in=^$in out=^$out");

# @outfiles contains the list of output darks - store in the
# calibration object - must set the appropriate subarray first
foreach my $darkfile ( @outdarks ) {
  $Frm->subarray( $darkfile );
  $Cal->darkindex->add( $darkfile, {%{$Frm->hdr}, %{$Frm->uhdr}} );
}

# Store output darks in Frame
$Frm->files(@outdarks);

# Convince the Grp that these data frames are no good so they are not
# picked up for mosaicking
$Frm->isgood(0);

