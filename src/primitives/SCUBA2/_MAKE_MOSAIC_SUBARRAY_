# -*-perl-*-

=head1 NAME

_MAKE_MOSAIC_SUBARRAY_ - Create mosaic from the four subarrays

=head1 SYNOPSIS

 _MAKE_MOSAIC_SUBARRAY_

=head1 DESCRIPTION

This primitive takes the aligned sub-scan frames from each sub-array
and mosaics them into a single output image. Its use is optional but
it helps speed up _MAKE_MOSAIC_FRAME_ by reducing the number of
intercomparisons.

=head1 KNOWN ISSUES

Assumes the _ALIGN_ARRAYS_ primitive has been run on the input images.

=head1 ALGORITHMS

CCDPACK: MAKEMOS. 

=head1 FILE SUFFIX

Creates an output image with a suffix of '_arr'.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2004-2005 Particle Physics and Astronomy Research
Council and University of British Columbia.  All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA  02111-1307, USA

=cut

my $verbose = 0;

my $nfiles = $Frm->nfiles;
my $no_of_subarrays = $Frm->numsubarrays;
# Calculate number of output files: note that this ASSUMES that there
# are always $no_of_subarrays images in every output image
my $maxscan = $nfiles / $no_of_subarrays;
my @out;

# Loop over number of output files
foreach my $j (1..$maxscan) {

  my ($in, $out) = $Frm->inout('_arr', $j);
  my $intmp = new ORAC::TempFile;
  # Collate subarray files based on subscan number
  foreach my $i (1..$nfiles) {
    print {$intmp->handle} $Frm->file($i) ."\n" 
      if ($Frm->hdrval("NSUBSCAN", $i-1) == $j);
  }

  orac_print("Mosaicking subarrays \n") if $verbose;
  $Mon{ccdpack_reg}->obeyw("makemos","in=^".$intmp->file." nousevar out=$out");
  push (@out, $out);
}

# Store the output files
$Frm->files( @out );
