=head1 NAME

_CALIBRATE_DATA_ - Multiply data by the flux conversion factor

=head1 SYNOPSIS

  _CALIBRATE_DATA_ UNITS=BEAM
  _CALIBRATE_DATA_ UNITS=ARCSEC

=head1 DESCRIPTION

Multiply SCUBA-2 data by the flux conversion factor (FCF).
The value for the FCF depends on the filter and the type
of calibration required. The calibration units are specified
by an argument.

Whilst this primitive can be run on a group, care must be taken
that it is not run multiple times on a group image.

=head1 ARGUMENTS

=over 4

=item UNITS

Controls the units of the FCF. The options are BEAM for
Jy/beam/pW and ARCSEC for Jy/arcsec**2/pW. Default is BEAM.

=item GROUP

If true, the group file will be calibrated. No attempt is made
to determine whether the calibration has already been applied.

=back

=head1 External Tasks

The following external tasks are used:

=over 4

=item KAPPA

CMULT, SETUNITS

=back

=head1 FILES

Creates an output file with a C<_cal> extension.

=head1 AUTHOR

Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

Copyright (C) 2008 Science and Technology Facilities Council.
Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council. All Rights Reserved.


=cut

# Read the arguments
my $Obj = ($_PRIM_ARGS_->{GROUP} ? $Grp : $Frm );

my $units = 'BEAM';
if (exists $_CALIBRATE_DATA_{UNITS} ) {
  $units = uc( $_CALIBRATE_DATA_{UNITS});
  if ($units ne 'BEAM' && $units ne 'ARCSEC') {
    orac_throw "_CALIBRATE_DATA_: Units must be BEAM or ARCSEC not '$units'";
  }
}

# Multiplication factor - convert to mJy
my $mult = 1000.0;
my $pre = 'm';  # for mJy
# Units
my $unitstr = $pre .( $units eq 'BEAM' ? 'Jy/beam/pW' : 'Jy/arcsec^2/pW');

# For ARCSEC we need to multiply by the square of the pixel regrid
# size.

# Loop over sub-instruments
for my $i (1..$Obj->nfiles) {
  my $file = $Obj->file($i);
  my $parea = 1.0; # Pixel area
  if ($units eq 'ARCSEC') {
    # Need pixel scale to get pixel area
    _GET_PIXEL_SCALE_ IN=$file
    $parea = $_GET_PIXEL_SCALE_{RESULTS}->[0] * 
             $_GET_PIXEL_SCALE_{RESULTS}->[1];
  }

  # Retrieve the current fcf value from the calibration
  # object. This will calibrate our data in Jy and then
  # if we multiply by an extra 1000 we get mJy
  # The multiplication factor includes the /pixel correction in ARCSEC
  my $gain = $Cal->gain($Obj->uhdr("ORAC_FILTER"), $units) * $mult * $parea;

  # retrive input and output names
  my ($in, $out) = $Obj->inout("_cal", $i);
  my $args = "scalar=$gain";

  # Multiply by the gain
  $Mon{kappa_mon}->obeyw("cmult","in=$in out=$out $args");

  orac_print "Multiplying $in by $gain $unitstr\n";

  # Change the units
  $Mon{ndfpack_mon}->obeyw("setunits","ndf=$out units=$unitstr");

  # Update file
  $Obj->file($i, $out);

}

orac_printp "Data calibrated in $unitstr\n";
