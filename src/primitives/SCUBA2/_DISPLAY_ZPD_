# -*-cperl-*-
# vim: syn=perl

=head1 NAME

_DISPLAY_ZPD_ - Display FTS-2 ZPD position

=head1 SYNOPSIS

_DISPLAY_ZPD_

=head1 DESCRIPTION

This primitive displays the ZPD data in a Kapview
window. The subarrays are mosaicked in the focal plane and this image
is displayed, allowing a direct comparison of the ZPD position in
each subarray. The ZPD image is displayed in the top row and a
histogram in the bottom row.

It is based on _DISPLAY_NOISE_.

=head1 ARGUMENTS

=over 4

=item B<SUFFIX>

File suffix for focal plane mosaic image, default _zpdmos.

=item B<TITLE>

Title to show on plots.

=back

=head1 EXTERNAL TASKS

The following external tasks are used by this primitive:

=over 4

=item ORAC-DR PRIMITIVES:

_FIND_IMAGE_STATISTICS_, _MAKE_MOSAIC_FPLANE_

=back

=head1 OUTPUT DATA

The ZPD mosaic is stored in the current Frame (suffix as specified by
SUFFIX).

=head1 OUTPUT FILES

The mosaic of the noise images has a suffix specified by the SUFFIX
parameter.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>
Graham Bell E<lt>g.bell@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009-2012 the University of British Columbia.  All
Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

my $suffix = get_prim_arg($_PRIM_ARGS_, 'SUFFIX', '_zpdmos');
my $title = get_prim_arg($_PRIM_ARGS_, 'TITLE', 'ZPD Position');

# Determine reference subarray

my $refsub = ($Frm->uhdr("ORAC_FILTER") =~ /450/) ? 's4d' : 's8b';

# Find reference image

my %ref;
for (my $i = 1; $i <= $Frm->nfiles(); $i ++) {
  my ($in, undef) = $Frm->inout('NA', $i);
  $ref{$Frm->subarray($i)} = $in;
}

my $ref = $ref{$refsub};
unless ($ref) {
  # Pick first one...
  my @subs = sort keys %ref;
  $refsub = $subs[0];
  $ref = $ref{$refsub};
}

# Create the mosaic

my %refimage = (refsub => $refsub, refimage => $ref);

_MAKE_MOSAIC_FPLANE_ SUFFIX=$suffix REFERENCE=\%refimage
my $out = $Frm->file();

# Make sure there is a defined upper limit for the histogram

_FIND_IMAGE_STATISTICS_ IMAGE=$out COMP=data VERBOSE=0
my $plotmin = $_FIND_IMAGE_STATISTICS_{'RESULTS'}->{'MIN'};
my $plotmax = $_FIND_IMAGE_STATISTICS_{'RESULTS'}->{'MAX'};

# Display the histograms

my %options = (ZMIN => $plotmin, ZMAX => $plotmax, WINDOW => 1,
               ZAUTOSCALE => 0, TITLE => $title);

$Display->display_data($Frm, \%options, -1);

