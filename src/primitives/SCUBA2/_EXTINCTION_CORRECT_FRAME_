# -*-perl-*-

=head1 NAME

_EXTINCTION_CORRECT_FRAME_

=head1 SYNOPSIS

  _EXTINCTION_CORRECT_FRAME_ EXTCOR_MODE=QUICK

=head1 DESCRIPTION

This primitive corrects each frame for extinction. It can be run on
a single mosaicked frame or with aligned subarray frames.

The following information is required:

=over 4

=item tau

The sky opacity for this filter. Different tau sources can be used
under the control of the calibration class. Default is to use the WVM
reading stored in the file. [wvm]

=item airmass

Average airmass of this frame. This is read from the FITS headers.

=item angle

The angle between Nasmyth North and elevation axis. This is just
the elevation angle. The elevation is obtained from the FITS headers.

=back

=head1 ARGUMENTS

=over 4

=item B<EXTCOR_MODE>

EXTCOR_MODE determines which extinction correction is applied. If set
to QUICK then the image is corrected assuming a single value for the
airmass across the array. If set to FULL, then an accurate pixel-level
correction is applied taking into account the airmass of individual
pixels.

=back

=head1 KNOWN ISSUES

Currently the primitive does not check whether images have been
aligned to RA/DEC and the primitive assumes that the Y axis corresponds
to declination and that the angle between the Y axis and the elevation
axis is given by the elevation.

To be accurate the mean tau and airmass should be read from each
subframe rather than a mean for the entire observation. This also
requires that the extinction correction occurs before mosaicking
in the non-QuickLook recipe.

=head1 ALGORITHMS

In QUICK mode the extinction correction is calculated as a single value
and is applied using the KAPPA CMULT routine.

In FULL mode KAPPA MATHS is used to apply the extinction on a per-pixel
basis.

=head1 FILE SUFFIX

Creates output files with a '_ext' suffix.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2004-2005 University of British Columbia and the
Particle Physcis and Astronomy Research Council. All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place,Suite 330, Boston, MA  02111-1307, USA

=cut


my $extcor_mode = uc( $_EXTINCTION_CORRECT_FRAME_{EXTCOR_MODE} || 'FULL');

my @out;

# Does this return tau_183 or scaled to obs wavelength?
#my $tau = 0.1; # $Cal->tau();
orac_warn( "Assuming tau and airmass. Not reading from frame header\n");
my $tau = 1; #

my $airmass = 1.41;
#0.5*($Frm->uhdr("AIRMASS_START") + $Frm->uhdr("AIRMASS_END"));

my $elevation = 45; # Should get this from $airmass or elevation in header

# now use MATHS

if ($extcor_mode eq 'FULL') {

  # Parameters for Kappa MATHS
  my $exp = "IA*exp(PT/sin(FB*FA))"; # Extinction correction part 1
  my $pi = "3.1415926535"; # Guess...
  my $fa = "PA+(XA*PX*sin(FB*PA)/PD)+(XB*PX*cos(FB*PA)/PD)"; # part 2
  my $fb = "PI/180.0"; # For converting degrees to radians
  my $pd = "3600.0";   # For converting arcsec to degrees
  my $pixelscale = 3;  # In arcsec

  # Correct all subframes
  for my $i (1..$Frm->nfiles) {

    my ($in, $out) = $Frm->inout('_ext',$i);
    push(@out, $out);

    $Mon{kappa_mon}->obeyw("maths","exp=".$exp." FA=".$fa." FB=".$fb." PA=".$elevation." PT=".$tau." PD=".$pd." PI=".$pi." PX=".$pixelscale." IA=".$in." out=".$out);

  }
} elsif ($extcor_mode eq 'QUICK') {

  # Correct all subframes
  for my $i (1..$Frm->nfiles) {

    my ($in, $out) = $Frm->inout('_ext',$i);
    push(@out, $out);

    # Just multiply images by e^tA
    my $extcor = exp($tau*$airmass);
    $Mon{kappa_mon}->obeyw("cmult","in=".$in." scalar=".$extcor." out=".$out);
  }
} else {
  orac_err("Unrecognized EXTCOR_MODE ($extcor_mode).");
  my $ORAC_STATUS = ORAC__ERROR;

}

# register new file names
$Frm->files( @out );

orac_print "Extinction corrected with tau = $tau using mode $extcor_mode \n";
