=head1 NAME

_ADD_FCF_LOG_ENTRY_ - Write an FCF log entry to disk

=head1 SYNOPSIS

 _ADD_FCF_LOG_ENTRY_ FILTER=450W FCF=52.5 UNITS=ARCSEC

=head1 DESCRIPTION

Write a single log entry containing the results of an
Flux Conversion Factor calculation.

=head1 ARGUMENTS

=over 4

=item GROUP

Whether the group file or frame file has been used.

=item FCF

The Flux conversion factor to write to the log file.

=item UNITS

The units of the FCF. This can be either ARCSEC (for jansky per
square arcseconds) or BEAM (jansky per beam).

=back

=head1 NOTES

=over 4

=item *

FCF must be supplied to this primitive (since that
is the only way to pass the result into the primitive).

=item *

One entry is written each time this primitive is called. If multiple
files are to be processed, this primitive should be called multiple
times.

=item *

Obtains header values from the current frame.

=back

=head1 FORMAT

The logfile has the following columns:

=over 4

=item UT

The UT date in C<YYYYMMDD.frac> format.

=item HST

The time of the observation in Hawaii.

=item Obs

The observation number.

=item Source

The source name.

=item Mode

The observing mode.

=item Filter

The specific filter associated with the fcf result.

=item Elevation

The elevation of the observation.

=item CSO

Equivalent CSO tau derived from the tau used to reduce
the observation.

=item Tau

The tau value used for the reduction.

=item Seeing

The seeing value as stored in the header.

=item FCF

The flux conversion factor

=item FCF Units

The units of the FCF. Can be BEAM (Jy/beam/V) or ARCSEC
(Jy/arcsec**2/V).

=back

=head1 FILES

C<log.fcf> - the log file

=head1 AUTHOR

Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>
Elese Archibald E<lt>e.archibald@jach.hawaii.eduE<gt>

Copyright (C) 2008 Science and Technology Facilities Council.
Copyright (C) 2000 Particle Physics and Astronomy Research Council.
All Rights Reserved.

=cut

# Check the arguments
my $fcf;
my $units;
foreach (qw/UNITS FCF/) {
  unless (exists $_PRIM_ARGS_->{$_}) {
    orac_throw("ADD_FCF_LOG_ENTRY: $_ must be specified as an argument");
  }
}

$units  = $_PRIM_ARGS_->{UNITS};
$fcf    = $_PRIM_ARGS_->{FCF};

my $usegroup = get_prim_arg( $_PRIM_ARGS_, "GROUP", 0);

# Create the log file object
my $log = new ORAC::LogFile("log.fcf");
# Write header to logfile
my $time = gmtime();

$log->header("# Flux conversion factor log file - created on $time UT",
	     "#\n# UT                HST   Obs Source       Mode         Filter El CSO    Tau   Seeing   FCF    FCF_units",
	     "#---------------------------------------------------------------------------------------------------------------------------",
	    );

# Obtain common parameters from headers
_GET_LOG_PARAMETERS_ GROUP=$usegroup
my ( $uttime, $hst, $run, $src, $mode, $filter, $el, $cso, $tau, $see ) 
  = @{ $_GET_LOG_PARAMETERS_{PARAMS} };

# GAIN
$fcf   = sprintf "%8.3f", $fcf;

# Units
$units = sprintf "%-6s", $units;

# Add the entry
$log->addentry("$uttime $hst $run $src $mode   $filter $el $cso $tau $see  $fcf  $units");



