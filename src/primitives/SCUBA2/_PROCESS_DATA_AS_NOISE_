# -*-cperl-*-

=head1 NAME

_PROCESS_DATA_AS_NOISE_ - calculate sky noise properties from science data

=head1 SYNOPSIS

_PROCESS_DATA_AS_NOISE_

=head1 DESCRIPTION

This primitive calculates a noise image for each subarray, as for
normal noise observations. The results are displayed and written to a
log file (C<log.bolonoise>) for monitoring.

=head1 ARGUMENTS

The following arguments are supported:

=over 2

=item B<FREQRANGE>

Comma-separated pair of numbers indicating the frequency range (Hz)
over which to measure white noise portion of power spectrum. Default
is 2,10 (i.e. 2-10 Hz). May be overridden with the C<NOISE_FREQRANGE>
recipe parameter.

=item B<FREQLO>

Lower frequency at which to measure power spectrum. Default is 0.5 Hz.

=item B<VERBOSE>

Flag to denote whether to display extra information. Default is 1
(yes).

=back

=head1 EXTERNAL TASKS

The following external tasks are used:

=over 2

=item ORAC-DR PRIMITIVES:

_CALCULATE_NOISE_, _DISPLAY_NOISE_

=back

=head1 NOTES

This primitive should only be used in the quicklook (QL) pipeline, and
should not be called if any other timeseries processing (e.g
map-making) is required.

=head1 OUTPUT DATA

The current Frame object is updated with the output noise files.

=head1 OUTPUT FILES

A noise file is created for each subarray with the suffix C<_noi>.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2011 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Should we be verbose (default to yes)?
my $verbose = get_prim_arg( $_PRIM_ARGS_, "VERBOSE", 1);

# Low frequency measurement point
my $freqlo = get_prim_arg( $_PRIM_ARGS_, "FREQLO", 0.5 );

# High frequency measurement range for estimating white part of
# spectrum - this will be overriden in _CALCULATE_NOISE_ by the
# NOISE_FREQRANGE recipe parameter if present
my $freqrange = get_prim_arg( $_PRIM_ARGS_, "FREQRANGE", "2,10" );

# Process any science (open shutter) data as a noise observation
unless ($Frm->uhdr("DARKONLY")) {
  # Calculate the noise from this initial dark
  _CALCULATE_NOISE_ FREQRANGE=$freqrange FREQLO=$freqlo

  # Analyse the results, print to screen and do QA checks
  _ANALYZE_NOISE_ QA=1

  # Create a focal-plane mosaic of the noise images and display it
  _DISPLAY_NOISE_
}
