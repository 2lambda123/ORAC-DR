# vim: syn=perl

=head1 NAME

_DESPIKE_QU_IMAGES_ - despikes Q and U images

=head1 SYNOPSIS

_DESPIKE_QU_IMAGES_

=head1 DESCRIPTION

Despikes Q and U images.

=head1 ARGUMENTS

The following argument is supported:

=over 4

=item B<NSIGMA>

The number of standard deviations at which to clip spikes. [3]

=back

=head1 OUTPUT FILES

Creates output files with C<ds> added to the extension
to allow the primitive to be called multiple times from the
same recipe.  The frame is updated with the output files.

=head1 NOTES

This primitive operates on Q and U images in separate
NDF files.

=head1 AUTHOR

Graham Bell E<lt>g.bell@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2013, Science and Technology Facilities Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

my $nsigma = get_prim_arg($_PRIM_ARGS_, 'NSIGMA', 3.0);
my $clip = '[' . join(',', ($nsigma) x 3) . ']';

# The POL-2 recipe applies this primitive multiple times so
# it can't use a fixed filename suffix.  Therefore add
# "ds" to the existing filename.
my @out = map {$_ . 'ds'} $Frm->files();
my $in = write_file_list($Frm->files());
my $out = write_file_list(@out);

# Call ffclean to perform the despiking.
my $args = "in=^$in out=^$out genvar=true box=3 clip=$clip";
$Mon{'kappa_mon'}->obeyw('ffclean', $args);

$Frm->files(@out);
