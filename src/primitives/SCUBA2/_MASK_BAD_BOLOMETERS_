#! -*-perl-*-

=head1 NAME

_MASK_BAD_BOLOMETERS_ - Mask out bad bolometers

=head1 SYNOPSIS

  _MASK_BAD_BOLOMETERS_

=head1 DESCRIPTION

This is a Frame operation and should be used before group operations.

=head1 ARGUMENTS

The following argument is supported

=over 4

=item B<VERBOSE>

Flag to denote whether to print informative messages to the
screen. Default is true (1).

=back

=head1 External Tasks

KAPPA: COPYBAD

=back

=head1 FILES

Creates output files with a C<_msk> extension.

=head1 KNOWN ISSUES

Does not determine units from input data files so it cannot do the
promised calibration check.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

Copyright (C) 2005-2008 the University of British Columbia.  All
Rights Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA

=cut

my $verbose = get_prim_arg( $_PRIM_ARGS_, "VERBOSE", 0);

my @maskedfiles;

for my $i ( 1.. $Frm->nfiles ) {
  # Get input file
  my ( $file, $out ) = $Frm->inout("_msk", $i);

  # Set the subarray and then retrieve the appropriate bad bolometer
  # mask
  $Frm->subarray( $file );
  my $mask = $Cal->mask;

  if ( defined $mask ) {
    # Copy the bad bolometers over to the raw data files
    my $args = "in=$file out=$out ref=$mask";
    $Mon{kappa_mon}->obeyw("copybad","$args");
    push(@maskedfiles, $out);
  }
}

# What if some of the files are masked and others are not? Surely the
# current method ends up ignoring the unmasked files?
$Frm->files( @maskedfiles ) if (@maskedfiles);
