=head1 NAME

_FIND_CALIBRATION_MAP_ - determine the map flux conversion factor

=head1 SYNOPSIS

 _FIND_CALIBRATION_MAP_

=head1 DESCRIPTION

For calibrators, finds the total integrated intensity
using L<_FIND_INTEGRATED_INTENSITY_|_FIND_INTEGRATED_INTENSITY_>
and calculates a flux conversion factor from the known flux
of the calibrator:

  fcf = V_sum /  S_tot

This value is then stored in the index file C<index.gains>.

Additionally, the peak response is calculated by finding the
peak flux and the fitted peak signal.

  fcf = V_peak / S_peak

=head1 EXTERNAL TASKS

None.

=head1 NOTES

This primitive is frame based (C<$Frm>).

=head1 ARGUMENTS

None.

=head1 OUTPUT DATA

Entry in C<index.fcf> log file if the frame is a calibrator.

=cut

use JCMT::Tau;

# Check that we are a calibrator (regardless of filter)
if ($Cal->iscalsource($Frm->hdr("OBJECT"))) {


  # Find the integrated intensity
  # turn off logfile in production code
  _FIND_INTEGRATED_INTENSITY_  LOGFILE=0


  my @filter = $Frm->filters;

  # Get results from integrated intensity
  my $results = $_FIND_INTEGRATED_INTENSITY_{'RESULTS'};

  # Now Loop over frames
  for my $i (1.. $Frm->nfiles ) {

    # skip if we have no result for this filter
    # or it is negative
    next unless (defined $results->[$i] && $results->[$i] > 0);

    # Now get the flux
    my $flux = $Cal->fluxcal($Frm->hdr("OBJECT"), $filter[$i-1], 1);

    if (defined $flux) {

      print "Flux: $flux, ". $results->[$i]. "\n";
      # Calculate the new gain
      my $fcf = $flux / $results->[$i];

      # Announce the new gain
      orac_print("Storing new gain for ".$filter[$i-1].": $fcf Jy/V\n",'yellow');

      # Set the current gain - add to index file
      # This means that we have to create a hash with the
      # new keyword GAIN and the selected filter FILTER
      my %hdr = %{$Frm->hdr};
      $hdr{GAIN} = $fcf;
      $hdr{FILTER} = uc($filter[$i-1]);

      $Cal->gainsindex->add($Frm->file($i), \%hdr);

      # Additionally it seems that a user-friendly logfile is
      # a requirement
      _ADD_FCF_LOG_ENTRY_ FILTER=$filter[$i-1] FCF=$fcf UNITS=ARCSEC

    }


  }


}
