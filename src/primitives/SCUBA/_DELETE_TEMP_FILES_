=head1 NAME

DELETE_TEMP_FILES

=head1 DESCRIPTION

Generic primitive to handle end of recipe tidy up of intermediate
files.

=head1 ARGUMENTS

KEEP - comma separated list of suffices for files that are not
       to be deleted.

If KEEP is not supplied, *NO* files are removed. Whilst the logical
behaviour for an undefined KEEP would be to remove all files,
in general this behaviour is probably not desirable (and may indicate
an error in the recipe - presumably the user requires at least
one file to be left over after the pipeline runs...). For this reason
files are only deleted if some extensions are explicitly requested.

 KEEP=_trn,_flat

Would erase all files associated with the current frame (group files
do not count) except for those ending in _trn and _flat.

=head1 WARNINGS

In some cases the GROUP primitives require certain intermediate
files to be available in order for the recipe to proceed (eg 
recipes involving the recalculation of flatfields will want to 
retain the pre-flatfielded data on disk so that the flatfielded
images can be regenerated). This means that some care must be 
taken when selecting files for removal. If a recipe fails when
too many files have been marked for removal, simply add extensions
to the KEEP list until the recipe works or contact the person
responsible for the recipe for more clarification.

=head1 TASKS

No external tasks called by this primitive.

=cut


my $keep = $_DELETE_TEMP_FILES_{KEEP};

# Generate array of extensions
my @extensions = split(/,/,$keep);

# If the extensions array contains something proceed
if ($#extensions > -1) {

  orac_print "Removing temporary files...\n";

  # Get the list of intermediate files from the frame
  my @intermediates = $Frm->intermediates;

  # Create temporary frame object to handle the deletion
  my $tempFrm = new $Frm;

  # Loop over intermediate files and compare with
  # list of extensions to be kept
  foreach my $file (@intermediates) {

    next unless defined $file;

    # Loop round if the filename ends in  _number
    # since we will treat these as special eg raw data files
    next if $file =~ /_\d+$/;

    # May want to also check for special case of files having
    # no extension at all (eg o65)

    # Compare with extensions
    unless (grep {$file =~ /$_$/} @extensions) {

      # This means the file can be removed
      # Easiest thing is to ask the Frame to remove the file
      $tempFrm->file($file);
      $tempFrm->erase;

    }
  }

  # Undef the tempFrm object
  undef $tempFrm;

  # Frossie wants to save memory by clearing the intermediates
  # array. Dont need it anyway...
  @{$Frm->intermediates} = ();

} else {
  orac_warn "Primitive called without specifying any files to be kept\nNot deleting any temporary files....\n";
}


# COPYRIGHT
#
#   Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#   Council. All Rights Reserved.


