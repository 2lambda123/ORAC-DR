=head1 NAME                                     -*-cperl-*-

_ADD_PROVENANCE_ - Write the input file list in a format suitable for
importation into the FITS header.

=head1 DESCRIPTION

For each member of the current group, take the file name, strip off the
directory and extention, then add the resulting ndf to the provenance.

This primitive forces the FITS extension to exist if it did not already.

=head1 ARGUMENTS

PRODUCT - value for the product header labelling the kind of output

=head1 AUTHOR

Russell O. Redman Russell.Redman@nrc.gc.ca

=head1 COPYRIGHT

Copyright (C) 2006 National Research Council of Canada. All Rights Reserved.

=cut
my $thisproduct = ( $_ADD_PROVENANCE_{'PRODUCT'} || undef );
if ( !defined $thisproduct )
{
   $thisproduct = "reduced";
}

my $thissuffix = "reb";
if ( $thisproduct =~ m/iqu/ )
{
   $thissuffix = "iqu";
}

print "_ADD_PROVENANCE_: islast=",$Grp->lastmember($Frm)," num=",$Grp->num," PRODUCT=\"$thisproduct\"\n";

#foreach my $i ( 1 .. $Frm->nfiles ) {
#   my( $in, $out ) = $Frm->inout( "_$thissuffix", $i );

#   $Frm->allow_header_sync( 1 );
#   $Frm->product( $thisproduct );
#   $Frm->file( $i, $out );
#}

#my $i;
#my( $in, $out ) = $Grp->inout( "_$thissuffix", $i );

#$Grp->allow_header_sync( 1 );
#$Grp->product( $thisproduct );
#$Grp->file( $i, $out );

if ($Grp->lastmember($Frm)) {

   foreach my $sub ($Frm->subs) {

      # Get the file name for this sub-band
      my $groupfile = $Grp->grpoutsub($sub);

      # Append the suffix if necessary
      my $suff = $Grp->filesuffix;
      $groupfile .= $suff unless $groupfile =~ /$suff$/;

      # Now need to find all the raw files for this sub-instrument
      # that are part of this group
      my @members = $Grp->members;

      my $memcnt = 0;
      foreach my $mem (@members)
      {
         my @rawlist = $mem->raw;

         foreach my $rawfile (@rawlist)
         {
            # strip off the directory path and extension
            $rawfile =~ s|^.*/||;
            $rawfile =~ s|\.\w*$||;
            $Mon{'ndfpack_mon'}->obeyw("provadd","ndf=$groupfile parent=$rawfile isroot creator='oracdr' moretext='OBSIDSS=$rawfile'");
#            my $obskey = sprintf( "OBS%ld", ++$memcnt);
#            my $prvkey = sprintf( "PRV%ld", $memcnt);
#            _SET_FILE_FITS_ITEM_ FILE=$groupfile KEY=$obskey VALUE=$rawfile COMMENT=Observation|ID|of|raw|data STRING=1
#            _SET_FILE_FITS_ITEM_ FILE=$groupfile KEY=$prvkey VALUE=$rawfile COMMENT=Observation|ID|of|raw|data STRING=1
         }
      }

#      _SET_FILE_FITS_ITEM_ FILE=$groupfile KEY=OBSCNT VALUE=$memcnt COMMENT=Number|of|raw|data|files STRING=0
#      _SET_FILE_FITS_ITEM_ FILE=$groupfile KEY=PRVCNT VALUE=$memcnt COMMENT=Number|of|raw|data|files STRING=0
      orac_print( "Stored provenance in $groupfile\n");

   } # end of foreach my $sub ($Frm->subs)

} # end of if ($Grp->lastmember($Frm))


