=head1 NAME                                     -*-perl-*-

_ADD_PROVENANCE_ - Write the input file list in a format suitable for
importation into the FITS header.

=head1 DESCRIPTION

For each member of the current group, take the file name, strip off the
directory and extention, then output the resulting file ID as a FITS
keyword/value of the form OBS12345 <ID>.

This primitive forces the FITS extension to exist if it did not already

=head1 ARGUMENTS

=head1 AUTHOR

Russell O. Redman E<lt>Russell.Redman@nrc.gc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2006 National Research Council of Canada. All Rights Reserved.

=cut
print "_ADD_PROVENANCE_: islast=",$Grp->lastmember($Frm)," num=",$Grp->num,"\n";

if ($Grp->lastmember($Frm)) {

   foreach my $sub ($Frm->subs) {

      # Get the file name for this sub-band
      my $groupfile = $Grp->grpoutsub($sub);
      
      # Append the suffix if necessary
      my $suff = $Grp->filesuffix;
      $groupfile .= $suff unless $groupfile =~ /$suff$/;

      # This comment forces the FITS extension to exist.
      # Otherwise a call to _SET_FILE_FITS_ITEM_ may fail.
      $Mon{'ndfpack_mon'}->obeyw("fitsmod","ndf=$groupfile edit=write keyword=COMMENT position=! value=! comment=Provenance");
         
      # Now need to find all the raw files for this sub-instrument
      # that are part of this group
      my @members = $Grp->members;

      my $memcnt = 0;
      foreach my $mem (@members) 
      {
         my @rawlist = $mem->raw;
            
         foreach my $rawfile (@rawlist) 
         {
            # strip off the directory path and extension
            $rawfile =~ s|^.*/||;
            $rawfile =~ s|\.\w*$||;
            my $obskey = sprintf( "OBS%5.5ld", ++$memcnt);
            _SET_FILE_FITS_ITEM_ FILE=$groupfile KEY=$obskey VALUE=$rawfile COMMENT=Observation|ID|of|raw|data STRING=1
         }
      }

      _SET_FILE_FITS_ITEM_ FILE=$groupfile KEY=PROVCNT VALUE=$memcnt COMMENT=Number|of|raw|data|files STRING=0
      orac_print( "Stored provenance in $groupfile\n");

   } # end of foreach my $sub ($Frm->subs)

} # end of if ($Grp->lastmember($Frm))


