=head1 NAME

REBIN_FRAME

=head1 DESCRIPTION

Rebin an individual frame.

=head1 TASKS

SURF: REBIN
NDFPACK: SETTITLE

=head1 INPUT ARGUMENTS

REBIN_METHOD - Method to use for regrid. Allowed options are
               BESSEL, LINEAR, GAUSSIAN, SPLINE1, SPLINE2, MEDIAN

PIXEL_SIZE   - Pixel size in arcseconds

=cut

# Will need to create a dummy frame object for
# the display tool since we dont want the reduced images to be used
# as input to the Group
# The easiest thing is to copy the object and pass that to Display
# rather than changing $Frm and then changing it back again with template.

my $localfrm = new $Frm;
@subs = $Frm->subs;

# Loop over sub instruments that are found in the current frame
for my $i (1..$Frm->nfiles) {

  $sub = $subs[$i-1];

  # Find the filename
  ($in, $out) = $Frm->inout("_reb", $i);

  # Only have one file so dont need to worry about a text input file

  # Now construct arguments for rebin
  # Read input arguments
  $method = ($_REBIN_FRAME_{REBIN_METHOD} || "gaussian");
  $pixsize = ($_REBIN_FRAME_{PIXEL_SIZE} || "3.0");

  # Output coords
  # Should use PL for planets


  $args = "REBIN_METHOD=$method PIXSIZE_OUT=$pixsize noloop";

  # Print informative message
  orac_print ("ORAC says: Rebinning sub-instrument $sub (Frame))\n",'magenta');

  # Run rebin
  # Need to reset the parameters so that the regridding state is not
  # remembered. Also the size parameters need to be reset.
  $ORAC_STATUS = $Mon{surf_mon}->resetpars;
  $Mon{surf_mon}->obeyw("rebin","ref=$in out=$out $args accept reset");
   
  # Update the title
  my $title = 'FRM ' .$Frm->hdr('OBJECT') . ": $sub"; 
  $Mon{ndfpack_mon}->obeyw("settitle","ndf=$out title='$title'");

  # Now add the new output name to the dummy Frame object
  $localfrm->file($i, $out);

}

# Display
$Display->display_data($localfrm) if defined $Display;

# And tidy up localfrm
undef $localfrm;
