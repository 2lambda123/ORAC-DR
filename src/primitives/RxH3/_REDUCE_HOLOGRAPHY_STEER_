ORAC::Recipe::Parameters::verify_parameters(\%RECPARS, [qw/
    EXTRACT_CALIBRATION
    FIT_DEFOCUS
    FIT_N_ORDER
    FIT_SEC_DIFF
    FIT_PANELS
    FIT_TERMS
    MERGE_CHANNELS
    POINTING_OFFSET
    SUBTRACT_SEC_DIFF
/]);

# Determine defaults based on frequency.
my ($radius, $smooth, $fit_secondary, $fit_panels);
my $freq = $Frm->uhdr('ORAC_REST_FREQUENCY');
if ($freq == 160) {
    $radius = 6.85113;
    $smooth = 0.05;
    $fit_secondary = 1;
    $fit_panels = 1;
}
elsif ($freq == 80) {
    $radius = 6.58152;
    $smooth = 0.05;
    $fit_secondary = 0;
    $fit_panels = 0;
}
else {
    orac_termerr(sprintf 'Frequency "%s" not recognized', $freq);
}

# Size of map to generate at FFT step.
$Frm->uhdr('APERTURE_MAP_SIZE', 385);

# Set the radius of the last null in the pattern to be subtracted,
# such as $SHMULLUS_DIR/jcmt_secdiff_160ghz.dat.
$Frm->uhdr('SECONDARY_MODEL_RADIUS', $radius);

# Set the smoothing to be applied to the pattern.
$Frm->uhdr('SECONDARY_MODEL_SMOOTH', $smooth);

$Frm->uhdr('DO_SECONDARY_FIT', $RECPARS{'FIT_SEC_DIFF'} // $fit_secondary);
$Frm->uhdr('DO_SUBTRACT_SECONDARY', $RECPARS{'SUBTRACT_SEC_DIFF'} // $fit_secondary);

$Frm->uhdr('DO_PANEL_FIT', $RECPARS{'FIT_PANELS'} // $fit_panels);
