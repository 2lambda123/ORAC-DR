=head1 NAME

_SPECTROSCOPY_HELLO_ - The first step in processing spectroscopy data.

=head1 DESCRIPTION

The first step in processing spectroscopy data. 

=over 4

=item 1. Calls _MAKE_RAW_FILE_ to copy the frame to a _raw file in $ORAC_DATA_OUT

=item 2. Switches on History recording

=item 3. Adds the SAMPLING user header

=item 4. Adds the frame to the on-the-fly nightlog.

=back

=head1 ARGUMENTS

None.

=head1 TASKS

=over 4

=item * KAPPA - HISSET

=back

=head1 OUTPUT FILES

C<_raw> files are created by _MAKE_RAW_FILE_ which is called from this primitive

=head1 NOTES

Calls the following primitives:

=over 4

=item * _INSTRUMENT_HELLO_

=item * _MAKE_RAW_FILE_

=item * _NIGHT_LOG_

=back

=head1 AUTHORS

Paul Hirst <p.hirst@jach.hawaii.edu>

Frossie Economu

=cut

# Any instrument spectific stuff gets done here
_INSTRUMENT_HELLO_

# Keep the output tidy
orac_print "\n";

# Make the _raw file
_MAKE_RAW_FILE_

# Switch history recording on.
# Because we have copied to _raw, we don't have to worry
# any more about modifying the sacred files in ORAC_DATA_IN
foreach my $frame ( $Frm->files ) {
   $Mon{"ndfpack_mon"}->obeyw( "hisset", "ndf=$frame" );
   orac_print "$frame: History recording enabled\n";
}

orac_print "\n";

# Determine the array sampling used
_DETERMINE_SAMPLING_
my $sampling = $Frm->uhdr("SAMPLING");
orac_print "Observation Sampling is: $sampling\n";
my $nfiles = $Frm->nfiles;
orac_print "There are $nfiles integrations in this observation\n";

# Determine the number of array reads per integrations
_DETERMINE_NREADS_
my $nreads = $Frm->uhdr("NREADS");
orac_print "Number of array reads per exposure: $nreads\n";

# Make sure that the Grp contains a uhdr value for NDIMS.  NDIMS is
# used by the divide-by-standard primitive to determine whether to
# divide by an image or a spectrum.  It is always 2-dimensional at the
# start.
$Grp->uhdr( "NDIMS", 2 );

# Build the nightlog on the fly.
_NIGHT_LOG_ OUT=1

# Keep the output tidy
orac_print "\n";
