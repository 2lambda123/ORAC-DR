=head1 NAME

_SPECTROSCOPY_HELLO_ - The first step in processing spectroscopy data.

=head1 DESCRIPTION

The first step in processing spectroscopy data. 

=over 4

=item 1 

Calls _MAKE_RAW_FILE_ to copy the frame to a _raw file in $ORAC_DATA_OUT

=item 2 

Switches on History recording

=item 3

Adds the SAMPLING user header

=item 4

Adds the frame to the on-the-fly nightlog.

=back

=head1 ARGUMENTS

None.

=head1 TASKS

=over 4

=item * KAPPA - HISSET

=back

=head1 OUTPUT FILES

C<_raw> files are created by _MAKE_RAW_FILE_ which is called from this primitive

=head1 NOTES

Calls the following primitives:

=over 4

=item * _INSTRUMENT_HELLO_

=item * _MAKE_RAW_FILE_

=item * _NIGHT_LOG_

=back

=head1 AUTHORS

Paul Hirst <p.hirst@jach.hawaii.edu>

Frossie Economu

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# Ensure that we're in spectroscopy mode
_SPECTROSCOPY_MODE_

# Make the _raw file
_MAKE_RAW_FILE_

# Switch history recording on.
_TURN_ON_HISTORY_

# Set the NDF pixel origin to match the array readout
_SET_ORIGIN_

# Any instrument spectific stuff gets done here
_INSTRUMENT_HELLO_

# Keep the output tidy
orac_print "\n";

# Determine the array sampling used
_DETERMINE_SAMPLING_
my $sampling = $Frm->uhdr("SAMPLING");
orac_print "Observation Sampling is: $sampling\n";
my $nfiles = $Frm->nfiles;
orac_print "There are $nfiles integrations in this observation\n";

# Determine the number of array reads per integrations
_DETERMINE_NREADS_
my $nreads = $Frm->uhdr("NREADS");
orac_print "Number of array reads per exposure: $nreads\n";

# Determine the waveband and waveband centre.
_DETERMINE_WAVEBAND_

# Make sure that the Grp contains a uhdr value for NDIMS.  NDIMS is
# used by the divide-by-standard primitive to determine whether to
# divide by an image or a spectrum.  It is always 2-dimensional at the
# start.
$Grp->uhdr( "NDIMS", 2 );

# Set the CHOPPING user header.
if (($Frm->uhdr("ORAC_DETECTOR_READ_TYPE") eq "CHOP") || ($Frm->uhdr("ORAC_DETECTOR_READ_TYPE") eq "NDCHOP")) {
   $Frm->uhdr("CHOPPING", 1);
} else {
   $Frm->uhdr("CHOPPING", 0);
}

# Set the POLARIMETRY user header to a default if it's not already set.
if( ! defined( $Frm->uhdr( "POLARIMETRY" ) ) ) {
  $Frm->uhdr("POLARIMETRY", 0);
}

# Build the nightlog on the fly.
_NIGHT_LOG_ OUT=1

# Keep the output tidy
orac_print "\n";
