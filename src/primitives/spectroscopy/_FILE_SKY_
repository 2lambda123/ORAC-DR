
=head1 NAME

_FILE_SKY_ - Files a sky observation with the calibration system.

=head1 DESCRIPTION

This primitive files the current frame as the current sky. It also
adds the sky to the index of sky frames. Both steps are reported.

=head1 NOTES

=over 4

=item *

The current frame should be a SKY. If it is not, a warning message
appears but the frame will be filed regardless.

=item *

The number of files in the current frame must be one.

=back

=head1 OUTPUT DATA

Frame sky_I<n>, where I<n> is the original frame number, is a copy
of the supplied frame.

=head1 AUTHORS

Paul Hirst <p.hirst@jach.hawaii.edu>
Malcolm J. Currie (JAC)
Brad Cavanagh (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

if ($Frm->nfiles == 1) {
  
   unless ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "SKY" ) {
      orac_warn "This is not a sky frame!  Running the wrong recipe?\n";
      orac_warn "The recipe continues, assuming you know what you're doing.\n";
   }

   # Obtain the current frame's number.
   my $obsnum = $Frm->uhdr( "ORAC_OBSERVATION_NUMBER" );
  
   # Take a copy of the current frame using a more-identifiable name.
   my $in = $Frm->file;
   my $sky = "sky_" . $obsnum;
   $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "in=$in out=$sky");
  
   # Store the sky as the current frame.
   $Frm->file($sky);
  
   # File the current frame as the current sky.
   $Cal->sky($Frm->file);
  
   # Report the processing status.
   orac_print $Frm->file . " filed as the current sky.\n";
  
   # Add this frame to the index of sky frames.
   $Cal->skyindex->add( $Frm->file, {%{$Frm->hdr}, %{$Frm->uhdr}} );
  
   # Report the processing status.
   orac_print $Frm->file . " added to index file.\n";
  
   } else {
      orac_warn "Sky frame has not been copied.  Not filed as calibration.\n";

}

