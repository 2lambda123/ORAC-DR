#+
# Name:
#    _EXTRACT_SPECTRA_ 
#
# Purpose:
#    Extracts spectra from an image.
#
# Language:
#    Perl5
#
# Description:
#    This primitive extracts spectra from an image by calling several
#    other primitives.  The first (_EXTRACT_DETERMINE_NBEAMS_)
#    determines the numbers of positive and negative beams.  If argument
#    ROWSCAL is not LOAD, _EXTRACT_FIND_ROWS_ collapses the 2-d image
#    along the wavelength axis using the median to form a smooth profile
#    from which the beams are located.  If requested, _EXTRACT_ARC_ may
#    extract an arc and determine a reasonable accurate wavelength
#    calibration.  If all the expected beams are found, they are
#    extracted using a profile determined or obtained from the
#    calibration system (via argument PROFILECAL).  The ripple from
#    interleaved integrations is removed by making a ripple flat
#    (_DERIPPLE_ALL_BEAMS_).  Next _EXTRACT_FIND_ROWS_ cross-correlates
#    the separate spectra to a uniform wavelength scale.
#    _COADD_EXTRACTED_BEAMS_ combines the spectra from the different
#    beams.  _CREATE_SPECFRAME_ creates a WCS Spectral Frame.
#
#    This primitive simply passes on parameters to the lower level
#    primitives it calls.
#
# Arguments:
#    ROWSCAL = CHARACTER (Given)
#       If this is set to "SAVE", the primitive _EXTRACT_FIND_ROWS_ 
#       will store the beam information it detects to the calibration
#       rows system.  If it  is set to "LOAD", the primitive will ask the
#       calibration system for the beam information rather than trying to
#       determine it from the data.  If unset, the beam information will
#       be determined from the image, and used without being stored to
#       the calibration system.
#    PROFILECAL = CHARACTER (Given)
#       If this is set to "LOAD", it instructs the _EXTRACT_ALL_BEAMS_
#       primitive to load details of the profile from the calibration
#       profile system.  If set to "SAVE", it tells _EXTRACT_ALL_BEAMS_
#       to save the profile details to the calibration system.  If it is
#       unset the profile details are neither saved to nor restored from
#       the calibration system.
#
# Notes:
#    -  This primitive only runs if a `pair' has been completed.  In the
#    ESO sense a pair is a run of on-source then off-source frames of equal
#    length.
#    -  Needs Figaro 5.6-0 or later.
#    -  The boolean Frame user header REDUCE_SINGLE_FRAME_CONFIG_NOARC
#    determines whether or not an arc is to be extracted or not.  If
#    false, extract an arc.
#
# Output Data:
#    -  See called primitives.
#
# Authors:
#    PH: Paul Hirst (JAC)
#    MJC: Malcolm J. Currie (Starlink)
#
# Copyright:
#    Copyright (C) 1998-2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# The pair of positive and negative sets of frames must be available.
    if ( $Frm->uhdr( "PAIR_COMPLETE" ) ) {

# This now needs an up-to-date Figaro, or else beam extraction is
# hopeless.
       if ( starversion_lt( "FIGARO", 'V5.6-0' ) ) {
          orac_err "Your Figaro is too old; versions below 5.6-0 cannot support beam extraction.\n";

# Obtain the arguments defaulting to 0.
       } else {
          my $rowscal = $_EXTRACT_SPECTRA_{ROWSCAL};
          my $profilecal =$_EXTRACT_SPECTRA_{PROFILECAL};

          $rowscal = 0 if ( !defined $rowscal );
          $profilecal = 0 if ( !defined $profilecal );

# Determine how many positive and negative beams there are.
          _EXTRACT_DETERMINE_NBEAMS_

# Collapse along the wavelength axis to form a profile, smoothing
# it using a 5-pixel wide median.  Locate the beams within the profile.
# For ROWSCAL=LOAD, it uses an existing rows calibration.
          _EXTRACT_FIND_ROWS_ ROWSCAL=$rowscal SMOOTH=5

# Should we use an arc?
          my $noarc = $Frm->uhdr( "REDUCE_SINGLE_FRAME_CONFIG_NOARC" );
          if ( !$noarc ) {

# Extract arc about the position of the first beam.  Cross-correlate
# against the reference arc at this position.  Make a wavelngth
# calibration stored in the AXIS component.
# Combine the spectra.
             _EXTRACT_ARC_
          }

# Only proceed if we found all the beams.
          my $nbeams = $Grp->uhdr( "NBEAMS" );

# Extract the spectra using a profile from the data or the calibration
# system.
          if ( $nbeams ) {
             _EXTRACT_ALL_BEAMS_ PROFILECAL=$profilecal

# Remove ripple from interleaved observations using a flat.
             _DERIPPLE_ALL_BEAMS_

# Cross-correlate the separate spectra to a uniform wavelength scale.
             _CROSS_CORR_ALL_BEAMS_

# Combine the spectra.
             _COADD_EXTRACTED_BEAMS_

# Create WCS Spectral Frame.
             _CREATE_SPECFRAME_

          }
       }
    }

# Podule
# ======

=head1 NAME

_EXTRACT_SPECTRA_ -- Extracts spectra from an image.

=head1 DESCRIPTION

This primitive extracts spectra from an image by calling several other
primitives.  The first
(L<_EXTRACT_DETERMINE_NBEAMS_|_EXTRACT_DETERMINE_NBEAMS_>) determines
the numbers of positive and negative beams .  If argument ROWSCAL is
not LOAD, L<_EXTRACT_FIND_ROWS_|_EXTRACT_FIND_ROWS_> collapses the 2-d
image along the wavelength axis using the median to form a smooth
profile from which the beams are located.  If requested,
L<_EXTRACT_ARC_|_EXTRACT_ARC_> may extract an arc and determine a
reasonable accurate wavelength calibration.  If all the expected beams
are found, they are extracted using a profile determined or obtained
from the calibration system (via argument PROFILECAL).  The ripple
from interleaved integrations is removed by making a ripple flat
(L<_DERIPPLE_ALL_BEAMS_|_DERIPPLE_ALL_BEAMS_>).  Next
L<_EXTRACT_FIND_ROWS_|_EXTRACT_FIND_ROWS_> cross-correlates the
separate spectra to a uniform wavelength scale.
L<_COADD_EXTRACTED_BEAMS_|_COADD_EXTRACTED_BEAMS_> combines the
spectra from the different beams.
L<_CREATE_SPECFRAME_|_CREATE_SPECFRAME_> creates a WCS Spectral Frame.

This primitive simply passes on parameters to the lower level
primitives it calls.

=head1 ARGUMENTS

=over 4

=item ROWSCAL = CHARACTER (Given)

If this is set to "SAVE", the primitive
L<_EXTRACT_FIND_ROWS_|_EXTRACT_FIND_ROWS_> 
will store the beam information it detects to the calibration
rows system.  If it  is set to "LOAD", the primitive will ask the
calibration system for the beam information rather than trying to
determine it from the data.  If unset, the beam information will
be determined from the image, and used without being stored to
the calibration system.

=item PROFILECAL = CHARACTER (Given)

If this is set to "LOAD", it instructs the
L<_EXTRACT_ALL_BEAMS_|_EXTRACT_ALL_BEAMS_> primitive to load details
of the profile from the calibration profile system.  If set to "SAVE",
it tells _EXTRACT_ALL_BEAMS_ to save the profile details to the
calibration system.  If it is unset the profile details are neither
saved to nor restored from the calibration system.

=back

=head1 NOTES

=over 4

=item *

This primitive only runs if a `pair' has been completed.  In the
ESO sense a pair is a run of on-source then off-source frames of equal
length.

=item *

Needs Figaro 5.6-0 or later.

=item *

The boolean Frame user header REDUCE_SINGLE_FRAME_CONFIG_NOARC
determines whether or not an arc is to be extracted or not.  If
false, extract an arc.

=back

=head1 OUTPUT DATA

See called primitives.

=head1 AUTHOR

Paul Hirst (JAC) <p.hirst@jach.hawaii.edu>
Malcolm J. Currie (Starlink) <mjc@star.rl.ac.uk>

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
