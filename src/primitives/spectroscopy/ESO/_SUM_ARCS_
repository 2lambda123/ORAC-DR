#+
# Name:
#    _SUM_ARCS_
#
# Purpose:
#    Adds the current frame into the current arc.
#
# Language:
#    Perl5
#
# Description:
#    This primitive sums or copies the current frame into the
#    current arc frame.  Copying occurs if the arc is new.  Both
#    steps are reported.
#
# Notes:
#    -  Only applies to arc frames as specified by user header
#    ORAC_OBSERVATION_TYPE.
#    -  The arc frame is a copy of the supplied frame, if it is the
#    first (and probably only) contributing frame.  Otherwise the
#    new frame is summed into the arc.
#    -  The number of contributing frames comes from a hash stored
#    in user header ARCS_LIST with keys equal to the arc name
#    given by primitive _GET_ARC_NAME_.
#
# Output Data:
#    Frame arc_<group_number>_<grating_name>_<filter>_<slit_name>.
#
# Tasks:
#    KAPPA: ADD, NDFCOPY.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# This should only be performed on OBJECT frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "ARC" ) {

# Obtain the arc frame name.
       _GET_ARC_NAME_
       my $arc = $_GET_ARC_NAME_{NAME};

# Obtain the lists of the arcs.
       my $listname = "ARCS_LIST";
       my $arcref = $Grp->uhdr( $listname );
       my %arc_list = %$arcref;

# Only need to average if there is more than one frame.
       my $count = $arc_list{ $arc };
       if ( $count > 1 ) {

# Create a temporary file.
          my $tmp = new ORAC::TempFile;
          my $tmparc = $tmp->file;

# Take a copy of the current arc frame because we want to update
# the arc.
          my $param = "in=$arc out=$tmparc";
          $Mon{ "ndfpack_mon" }->obeyw( "ndfcopy", "$param" );

# Sum the current frame into the mean arc.
          my $in = $Frm->file;
          $param = "in1=$in in2=$tmparc out=$arc";
          $Mon{ "kappa_mon" }->obeyw( "add", "$param" );

# Report the processing status.
          orac_print "arc $in summed in $arc.\n";

# Take a copy of the current frame using the prescribed name.
       } else {
          my $in = $Frm->file;
          my $param = "in=$in out=$arc";
          $Mon{ "ndfpack_mon" }->obeyw( "ndfcopy", "$param" );
          orac_print "Frame $in copied to $arc.\n";
       }
       orac_print "\n";
    }

# Podule
# ======

=head1 NAME

_SUM_ARCS_ -- Adds the current frame into the current arc.

=head1 DESCRIPTION

This primitive averages or copies the current frame into the
current arc frame.  Copying occurs if the arc is new.  Both
steps are reported.

=head1 NOTES

=over 4

=item *

Only applies to arc frames as specified by user header
ORAC_OBSERVATION_TYPE.

=item *

The arc frame is a copy of the supplied frame, if it is the
first (and probably only) contributing frame.   Otherwise the
new frame is summed into the arc.

=item *

The number of contributing frames comes from a hash stored
in user header ARCS_LIST with keys equal to the arc name
given by primitive L<_GET_ARC_NAME_|_GET_ARC_NAME_>.

=head1 OUTPUT DATA

Frame arc_E<lt>group_numberE<gt>_E<lt>grating_nameE<gt>_E<lt>filterE<gt>_E<lt>slit_nameE<gt>.

=head1 TASKS

KAPPA: ADD, NDFCOPY.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

