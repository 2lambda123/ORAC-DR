=head1 NAME

_NORMALISE_FLAT_BY_BB_ - Normalise a flat field frame with a black-body curve.

=head1 DESCRIPTION

Normalises a frame (usually a CGS4 flat field frame).

This primitive first creates a black-body spectrum using the temperature
from the BBTEMP header, grows this to the size of the image, and divides by
it. It then divides the image by the image's mean pixel value so as to
normalise its absolute level to 1.

=head1 NOTE

Uses the BBTEMP FITS header. Perhaps this should have a system internal
translated value to cope with future instrumentation.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 1998-2005 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# Loop through sub-files
foreach my $i (1 .. $Frm->nfiles) {

   # Generate the input and output filenames
   my ($in, $out) = $Frm->inout("_nf", $i);

   # Get the Black-Body (CGS4 flat field source) temperature
   my $bbtemp = $Frm->hdr("BBTEMP");
   if (!defined $bbtemp) {
      # Assume 330K - an approximation for the michelle integrating sphere
      $bbtemp = 330;
   }

   orac_print "Using blackbody temperature of ${bbtemp}K for normalisation.\n";

   # Create a template for the BB spectrum.
   my $bt=new ORAC::TempFile;
   my $btfile=$bt->file;

   my $ctr = int ($Frm->uhdr("ORAC_Y_DIM") / 2);
   $Mon{'figaro1'}->obeyw("extract", "image=$in ystart=$ctr yend=$ctr spectrum=$btfile");
   $Mon{'ndfpack_mon'}->obeyw("axlabel", "ndf=$btfile dim=1 label=wavelength");

   # Create a black-body model in a file, referring to $btfile (ie $in) 
   # for the dispersion-axis information.
   my $bb=new ORAC::TempFile;
   my $bbfile = $bb->file;
   my $bc=new ORAC::TempFile;
   my $bcfile=$bc->file;

   $Mon{'figaro4'}->obeyw("bbody", "temp=$bbtemp in=$btfile out=$bcfile");
   $Mon{'figaro2'}->obeyw("fwconv", "spectrum=$bcfile flux_unit=erg output=$bbfile");

   # Grow the bb file to be 2-dimensional.
   my $ystart = $Frm->uhdr("ORAC_Y_LOWER_BOUND");
   my $yend = $Frm->uhdr("ORAC_Y_UPPER_BOUND");
   my $param = "in=$bbfile out=$bcfile axes=[1,0] lbound=$ystart ubound=$yend";
   $Mon{'kappa_mon'}->obeyw( "manic", "$param" );

   # Stuff on a zero variance so as not to drop the variance array shortly
   $Mon{'ndfpack_mon'}->obeyw("setvar", "ndf=$bcfile variance=0");

   # Divide the flat by the bbimage, into another temp file
   my $temp=new ORAC::TempFile;
   my $tempfile = $temp->file;
   $Mon{'kappa_mon'}->obeyw("div", "in1=$in in2=$bcfile out=$tempfile");

   # Now normalise the tempfile into another temp file
   $Mon{'kappa_mon'}->obeyw("stats", "ndf=$tempfile");

   (my $ORAC_STATUS, my $mean)=$Mon{'kappa_mon'}->get("stats", "mean");

   orac_print "Normalisation factor is: $mean\n";

   $Mon{'kappa_mon'}->obeyw("cdiv", "in=$tempfile scalar=$mean out=$out");

   # Update the Frm object
   $Frm->file($out, $i);

   orac_print("$in to $out: Flat field normalised by Black Body\n");

}

# Display the frame
$Display->display_data( $Frm ) if defined $Display;
