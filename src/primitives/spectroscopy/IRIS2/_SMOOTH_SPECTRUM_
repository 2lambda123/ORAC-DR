=head1 NAME

_SMOOTH_SPECTRUM_ - Smooth a spectrum using a block filter.

=head1 DESCRIPTION

Smooths the spectrum with a block filter of 3 pixels. This helps
clip any spikes in the final spectrum, without compromising the
resolution.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

Stuart Ryder <sdr@aaoepp.aao.gov.au>

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

if ($Frm->uhdr("PAIR_COMPLETE")) {

  my $in = $Grp->file;

  # Simply add an s to the filename to denote smoothed.
  my $out = $in ."s";

  my $tmp = new ORAC::TempFile;
  my $tmpfile = $tmp->file;

  # Find what the sampling was.
  # SDR: For IRIS2, this will always be 1, and smoothing with
  #      a 1 pixel block won't do much!
  # my $detincr = $Frm->uhdr("ORAC_SCAN_INCREMENT");
  # my $a = nint (1/ $detincr);

  # if($a > 1) {
  # $Mon{'kappa_mon'}->obeyw("block", "in=$in out=$out title=$out box=$a");
  # SDR: Smoothing with a 3 pixel block can help though.
    $Mon{'kappa_mon'}->obeyw("block", "in=$in out=$tmpfile title=$out box=3");

  # By now, there should be no negative pixels so threshold just to be sure
    $Mon{'kappa_mon'}->obeyw("thresh", "in=$tmpfile out=$out thrlo=0 newlo=0 thrhi=1000000 newhi=1000000"); 

    orac_print "$in to $out: Smoothed and clipped negative values\n";

    # Update the Group object
    $Grp->file( $out );

    # Display the smoothed spectrum
    $Display->display_data( $Grp ) if defined $Display;

    orac_print "\n";

#  }
}
