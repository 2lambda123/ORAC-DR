=head1 NAME

_NORMALISE_TO_ONE_SECOND_EXPOSURE_TIME_ - Normalises an observation to
one second exposure time.

=head1 DESCRIPTION

This primitive divides an observation by its exposure time, resulting
in a normalised frame.

=head1 ARGUMENTS

=over 4

=item GRP = LOGICAL (Given)

If true, normalise the current Group object. Otherwise, normalise
the current Frame object. [0]

=back

=head1 NOTES

=over 4

=item *

This primitive only works if the user header PAIR_COMPLETE is true.

=back

=head1 AUTHOR

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

if( $Frm->uhdr("PAIR_COMPLETE") ) {

# Find out if we're working on the Frame object or the Group object.
  my ( $in, $out, $obj );
  if( defined( $_NORMALISE_TO_ONE_SECOND_EXPOSURE_TIME_{GRP} ) &&
      $_NORMALISE_TO_ONE_SECOND_EXPOSURE_TIME_{GRP} == 1 ) {
    $in = $Grp->file;
    $out = $Grp->raw . "_nrm";
    $obj = $Grp;
  } else {
    ( $in, $out ) = $Frm->inout("_nrm");
    $obj = $Frm;
  }

# Determine the exposure time.
  my $exp_time = $obj->uhdr("ORAC_EXPOSURE_TIME");

# Set up the parameter string for CDIV.
  my $param = "in=$in out=$out scalar=$exp_time";

# Do the division.
  $Mon{'kappa_mon'}->obeyw("cdiv", "$param");

# Update the object.
  $obj->file($out);

# Report to the user.
  orac_print("$in to $out: Normalised to one second exposure time.\n\n");

}
