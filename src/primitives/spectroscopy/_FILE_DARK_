=head1 NAME

_FILE_DARK_ - Files a frame as the current dark.

=head1 DESCRIPTION

This generic primitive files the current frame as the current dark.
It also adds the dark to the index of dark frames.  Both steps are
reported.

=head1 NOTES

=over 4

=item *

The current frame must be a dark, otherwise a warning message appears.

=item *

The number of files in the current frame must be one.

=back

=head1 OUTPUT DATA

Frame dark_I<n>, where I<n> is the original frame number, is a copy of
of the supplied frame.

=head1 TASKS

KAPPA: NDFCOPY.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)
BC: Brad Cavanagh (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# This is going to need updating
if ( $Frm->nfiles == 1 ) {
  unless ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "DARK" ) {
    orac_warn "This is not a dark frame!  Are you running the wrong recipe?\n";
    orac_warn "The recipe continues, assuming you know what you're doing.\n";
  }

  # Obtain the current frame's number.
  my $obsnum = $Frm->uhdr( "ORAC_OBSERVATION_NUMBER" );

  # Take a copy of the current frame using a more-identifiable name.
  my $in = $Frm->file;
  my $dark = "dark_" . $obsnum;
  $Mon{ "ndfpack_mon" }->obeyw( "ndfcopy", "in=$in out=$dark" );

  # Store the dark as the current frame.
  $Frm->file( $dark );

  # File the current frame as the current dark.
  $Cal->dark( $Frm->file );

  # Report the processing status.
  orac_print "$in to $dark: copied and filed as the current dark.\n";

  # Add this frame to the index of dark frames, along with its headers and
  # user headers.
  $Cal->darkindex->add( $Frm->file, { %{ $Frm->hdr }, %{ $Frm->uhdr } } );

  # Report the processing status.
  orac_print $Frm->file . " added to index file.\n";

} else {
  orac_warn "Dark frame has not been copied.  Not filed as calibration.\n";
}

orac_print "\n";

