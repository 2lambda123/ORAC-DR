
=head1 NAME

_SBPOL_COADD_TO_GROUP_ - Coadd a completed pair to a reduced group for
single-beam polarimetry.

=head1  DESCRIPTION

Creates the group file if necessary, and coadds the completed pair to it.
In coadding this primitive averages together observations.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# The group file name - we use the ->raw one here, as subsequent steps
# (eg extraction) will update the ->file and we want none of that here

# Tag on the waveplate angle
my $wpa = $Frm->uhdr("ORAC_WAVEPLATE_ANGLE");
my $owpa = $wpa;
# Hack the >= 180 ones to be < 180
#if ($wpa >= 180) {
#   $wpa -= 180;
#}

# Store the original group raw filename in the uhdr if its not allready there

if(!defined ($Grp->uhdr("ORIGINAL_RAW"))) {
   my $orig_raw = $Grp->raw;
   $Grp->uhdr("ORIGINAL_RAW", $orig_raw);
}

my $orig_raw = $Grp->uhdr("ORIGINAL_RAW");

# Set the group raw filename to include the wpa

my $groupfile = $orig_raw."_".int($wpa);

$Grp->raw($groupfile);
$Grp->file($groupfile);

orac_print "Using groupfile $groupfile (WPA = $owpa)\n";

# Get the filename for the sky subtracted pair
my $in = $Frm->file;

orac_print "Coadding file: $in\n";

my $obsnum = $Frm->number;
$Grp->coaddspush($obsnum);

# my $nobs=scalar(@{ scalar($Grp->coadds) } );

# $nobs = int(($nobs-1) / 4)+1;

my $nobs;

my $coaddshdr = "COADDS_".int($wpa);
my $cahv = $Grp->uhdr($coaddshdr);
if (defined $cahv) {
   $nobs = $Grp->uhdr($coaddshdr);
} else {
   $nobs = 0;
   $Grp->uhdr($coaddshdr, 0);
}

if($nobs == 0) {
   # Re-create the group file
   unlink($groupfile.".sdf");
   $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "in=$in out=$groupfile");
   orac_print "Created $groupfile with $in\n";
   $Grp->file($groupfile);

} else {

   # The group file allready exists - coadd into it
   # Unaverage the groupfile into a tmp file

   my $tmp = new ORAC::TempFile;
   my $tmpfile = $tmp->file;

   my $factor = $nobs - 1;
   $Mon{'kappa_mon'}->obeyw("cmult", "in=$groupfile scalar=$factor out=$tmpfile");

   # Add the tmpfile and the _ss into a temp file

   my $temp = new ORAC::TempFile;
   my $tempfile = $temp->file;

   $Mon{'kappa_mon'}->obeyw("add", "in1=$tmpfile in2=$in out=$tempfile");

   # Re-normalise back into the groupfile
   $Mon{'kappa_mon'}->obeyw("cdiv", "in=$tempfile scalar=$nobs out=$groupfile");

   orac_print "$in coadded to $groupfile\n";
   orac_print "Group $groupfile now contains $nobs pairs\n";

   $nobs++;
   $Grp->uhdr($coaddshdr, $nobs);

   $Grp->file($groupfile);

}

orac_print "\n";


