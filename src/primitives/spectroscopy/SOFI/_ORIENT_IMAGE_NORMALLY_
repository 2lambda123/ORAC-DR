=head1 NAME

_ORIENT_IMAGE_NORMALLY_ - Transforms the image to the normal orientation

=head1 DESCRIPTION

Some instruments produce an image in an unusual orientation
- e.g. the wavelength might increase from right to left rather
than left to right.  We use this primitive to re-orientate the
image to a more conventional orientation - i.e. slit runs up/down,
short wavelength is to the left, long wavelength to the right.

This version of the primitive is intended for SOFI spectroscopic data
where the slit is aligned with the x axis, not the customary y.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

Malcolm J. Currie <mjc@star.rl.ac.uk>

=head1 COPYRIGHT

Copyright (C) 1998-2005 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# SDR: This was a null recipe, but I have borrowed from the UIST one.

# Loop through the sub-files.
foreach my $i (1 .. $Frm->nfiles) {

# Generate the input and output file names
   my ($in, $out) = $Frm->inout ("_reo", $i);

   # Rotate the data frame (and associated axis values) 90 degrees
   # clockwise, reseting the origin.
   $Mon{ 'kappa_mon' }->obeyw( "rotate", "in=$in out=$out angle=90" );

   # Obtain the origin of the input frame. Notice the swap because of
   # the rotation.
   $Mon{'ndfpack_mon'}->obeyw("ndftrace", "ndf=$in");
   ( my $ORAC_STATUS, my @lbnd ) = $Mon{ 'ndfpack_mon' }->get( "ndftrace", "lbound" );
   $Mon{ 'ndfpack_mon' }->obeyw( "setorigin", "ndf=$out origin=[$lbnd[1],$lbnd[0]]" );

   # Update Frame object
   $Frm->file($i, $out);

   orac_print "$in to $out: rotated array 90 degrees clockwise, so " .
              "    the wavelength axis is along rows.\n";

   # Display the frame
   $Display->display_data( $Frm ) if defined $Display;

}

# Keep it tidy
orac_print "\n";

