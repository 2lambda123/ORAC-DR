=head1 NAME

_DIVIDE_BY_STANDARD_ - Divides a spectrum or an array by a suitable standard.

=head1 DESCRIPTION

Asks the calibration system for a suitable standard star, and divides by it.
This primitive works for either 1D or 2D data.

This primitive outputs a file with a _dbs suffix for 1D data, or a _dbsi
suffix for 2D data.

=head1 NOTES

=over 4

=item *

The input frames should have been normalised to 1 second exposures.

=item *

Only works if the user header PAIR_COMPLETE is true, i.e. we have come
to a frame that completes a pair.

=back

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>
Malcolm J. Currie <mjc@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research Council.
Copyright (C) 2014 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

if ($Frm->uhdr("PAIR_COMPLETE")) {

  my $base = $Grp->raw;
  my $in = $Grp->file;
  my $out;

  # Copy the group uhdr into the frame uhdr for the Cal system to see it
  my $ndims = $Grp->uhdr("NDIMS");
  $Frm->uhdr("NDIMS", $ndims);

  # Need a different name for images and spectra for display system.
  my $suffix = "dbs";
  if($ndims == 2) {
     $out = $base . "_" . $suffix . "i";
  } else {
     $out = $base . "_" . $suffix;
  }

  # Find me a standard
  my $std = $Cal->standard;
  orac_print "Standard: $std will be used\n";

  # Shift the spectrum to the same wavelength as the standard
  _ALIGN_SPECTRUM_TO_STD_ STANDARD=$std
  $in = $Grp->file;

  # Divide by it
  $Mon{'kappa_mon'}->obeyw("div", "in1=$in in2=$std out=$out title=$out");
  orac_print "$in to $out: Divided by standard: $std\n";

  # Update the Group object
  $Grp->file( $out );

# Set the PRODUCT keyword for the cube divided by the standard.
  my $product = "dbs";
  my ( $comment, $preview_suffix );
  if ( $ndims == 2 ) {
     $preview_suffix = $suffix . "_rimg";
     $comment = "Spectral image divided by standard";
  } else {
     $preview_suffix = $suffix . "_rsp";
     $comment = "Spectrum divided by standard";
  }
  $Grp->product( $product, $comment );
  
  # Create the preview images and create the jsa:product keyword within them.
  _TAG_AS_REPRESENTATIVE_ UPDATE=0 GROUP=1 PRODUCT=$product SUFFIX=$preview_suffix COMMENT=$comment

  # Update the headers with the PRODUCT.
  $Grp->allow_header_sync( 1 );
  $Grp->sync_headers( 1 );
  $Grp->allow_header_sync( 0 );

  # Display the dbs frame
  $Display->display_data( $Grp ) if defined $Display;

  orac_print "\n";
}
