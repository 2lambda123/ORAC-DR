=head1 NAME

_EXTRACT_FIND_ROWS_

=head1 DESCRIPTION

Finds the rows in a group image at which to centre the spectra 
extraction windows.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# Get the input filename. We won't actually use $out here - we just add
# some entries to the group uhdr.
my $in=$Grp->file;

# Variables we're going to set:

# Central rows of each beam
my @row;

# We get the number of beams there should be from the Grp->uhdr - should have been put
# there by _EXTRACT_DETERMINE_NBEAMS_

my $nbeams = $Grp->uhdr("NBEAMS");


# The methodolgy of this is as follows: 
#   1) try to detect beams simply by looking at the frame image
#      If we detect them with sufficient confindence, we use them
#      otherwise we fall back to:
#   2) Consult index.rows 
#      If this fails:
#   3) Can we determine where the beams should be from the headers
#      - this includes pair reduction where we know the offset.
#      If not, we fall back to:
#      If this fails, we fall back to the last resort:
#   4) Assume rows 102 and 140.


# First, try to detect beams in the image.

# Collapse the image along the dispersion axis into a tmp file

my $colfile = $in."_ypr";
$Mon{'kappa_mon'}->obeyw("collapse", "in=$in out=$colfile axis=1");

# Send the Y PRofile file off to display
my $yprFrm = new $Frm;
$yprFrm->file($colfile);
$Display->display_data( $yprFrm ) if defined $Display;

my $ncol = new ORAC::TempFile;
my $ncolfile = $ncol->file;
$Mon{'kappa_mon'}->obeyw("cmult", "in=$colfile scalar=-1 out=$ncolfile");

# We do +ve beams first.
# How many +ve beams should there be?
my $posbeams=0;
$posbeams=1 if ($nbeams==1);
$posbeams=1 if ($nbeams==2);
$posbeams=1 if ($nbeams==3);
$posbeams=2 if ($nbeams==4);

# the beam multiplier
my $mult = 1;
$mult = 2 if($nbeams==3);

my $tmp = new ORAC::TempFile;
my $tmpfile = $tmp->file;
my $ORAC_STATUS;

my $posbeamsfound=0;
if($posbeams) {
   # Need to thresh to only see the +ve half
   $Mon{'kappa_mon'}->obeyw("thresh", "in=$colfile out=$tmpfile thrlo=0 newlo=0 thrhi=1000000 newhi=1000000"); 

   # Call figaro emlt on the +ve half of the collapsed file
   $Mon{'figaro2'}->obeyw("emlt", "spectrum=$tmpfile xstart=min xend=max lines=$posbeams");

   ($ORAC_STATUS, $posbeamsfound) = $Mon{'figaro2'}->get("emlt", "EMLT_LINES");
   orac_print "Detected $posbeamsfound of $posbeams positive beams\n";

   # loop over the detected beams, writing the details to the group user header
   my @pix = $Mon{'figaro2'}->get("emlt", "EMLT_POS");
   my @peak = $Mon{'figaro2'}->get("emlt", "EMLT_PEAK");
   for (my $i=1; $i<=$posbeamsfound; $i++) {
      my $keyword = 'BEAM_POSITION_'.$i;
      my $pixvalue = $pix[$i];
      $Grp->uhdr($keyword, $pixvalue);
      $keyword = 'BEAM_MULT_'.$i;
      $Grp->uhdr($keyword, $mult);
      my $peakvalue = $peak[$i];
      
      orac_print "Found beam $i (factor $mult) at: pixel $pixvalue; peak mean strength = $peakvalue\n";
   }
}

# Now do the -ve beams;
my $negbeams=0;
$negbeams=0 if($nbeams==1);
$negbeams=1 if($nbeams==2);
$negbeams=2 if($nbeams==3);
$negbeams=2 if($nbeams==4);
$mult = -1;

my $negbeamsfound=0;
if($negbeams) {
   # Need to thresh to only see the +ve half of the negated file
   $Mon{'kappa_mon'}->obeyw("thresh", "in=$ncolfile out=$tmpfile thrlo=0 newlo=0 thrhi=1000000 newhi=1000000");

   # Call figaro emlt on the negated collapsed file
   $Mon{'figaro2'}->obeyw("emlt", "spectrum=$tmpfile xstart=min xend=max lines=$negbeams");

   ($ORAC_STATUS, $negbeamsfound) = $Mon{'figaro2'}->get("emlt", "EMLT_LINES");
   orac_print "Detected $negbeamsfound of $negbeams negative beams\n";

   # loop over the detected beams, writing the details to the group user header
   my @pix = $Mon{'figaro2'}->get("emlt", "EMLT_POS");
   my @peak = $Mon{'figaro2'}->get("emlt", "EMLT_PEAK");
   for (my $i=1; $i<=$negbeamsfound; $i++) {
      my $j = $i + $posbeamsfound;
      my $keyword = 'BEAM_POSITION_'.$j;
      my $pixvalue = $pix[$i];
      $Grp->uhdr($keyword, $pixvalue);
      $keyword = 'BEAM_MULT_'.$j;
      $Grp->uhdr($keyword, $mult);
      my $peakvalue = $peak[$i];
      
      orac_print "Found beam $j (factor $mult) at: pixel $pixvalue; peak mean strength = $peakvalue\n";
   }
}
   
if (($posbeamsfound + $negbeamsfound) == $nbeams) {
   # We found all the beams
} else {
   # Don't let it do any extraction for now
   $nbeams = 0;
}

$Grp->uhdr("NBEAMS", $nbeams);

orac_print "\n";
