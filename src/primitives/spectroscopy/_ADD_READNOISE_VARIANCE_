=head1 NAME

_ADD_READNOSE_VARIANCE_ - Adds a variance array based on readnoise

=head1 DESCRIPTION

Adds an initial variance component, which is simply flat and equal to
the readnoise of the detector, taking the GAIN, number of exposures
and number of array reads per exposure into account.

The readnoise is obtained from the $Cal->readnoise object.
- The Array Tests recipe files the readnoise into the Cal system
when it measures it.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=cut

# Get the gain
my $gain = $Frm->uhdr("ORAC_GAIN");
if (!$gain) {
   orac_err("Cannot determine Gain - is the ORAC_GAIN uhdr set?\n");
   exit;
}

# Get the readnoise, in electrons
my $rne = $Cal->readnoise;

# This is for a single read. Divide it down for nreads
my $n = $Frm->uhdr("NREADS");
# This factor is apparently the way that least-sqares fit noise scales.
my $factor = 1;
if ($n > 1) {
   $factor = sqrt(($n*($n+1))/(12*($n-1)));
}
$rne /= $factor;

# Get the number of coadds (NEXP)
my $nexp = $Frm->uhdr("ORAC_NUMBER_OF_EXPOSURES");

# Get the readnoise in data-numbers, per coadd
my $rn = $rne / $gain;

# Get the variance in DN^2 per coadd
my $var = $rn * $rn;

# The variance on n coadds is thus n^2 * var
my $nvar = $var * $nexp * $nexp;

# Gonna need a temp file for this
my $tmp=new ORAC::TempFile;
my $tmpfile=$tmp->file;

# Loop through the sub-files
foreach my $i (1 .. $Frm->nfiles) {
	# Generate the input and output file names
	my ($in, $out) = $Frm->inout ("_rnv", $i);

	# Multiply up the data array to be total electrons (ie * gain * nexp)
	my $factor = $gain * $nexp;
	$Mon{'kappa_mon'}->obeyw("cmult", "in=$in scalar=$factor out=$tmpfile");

	# Set the variance on that to be what we calculated ($nvar)
	$Mon{'ndfpack_mon'}->obeyw("setvar", "ndf=$tmpfile variance=$nvar");

	# Divide back into DN per coadd.
	$Mon{'kappa_mon'}->obeyw("cdiv", "in=$tmpfile scalar=$factor out=$out");

	# Update Frame object
	$Frm->file($i, $out);
	my $string = sprintf ("%.1f", $rne);
	orac_print("$in to $out: Read Noise variance added: $string electrons\n");
}

orac_print "\n";
