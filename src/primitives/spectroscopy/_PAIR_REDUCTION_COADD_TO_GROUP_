=head1 NAME

_PAIR_REDUCTION_COADD_TO_GROUP_

=head1 DESCRIPTION

Creates the group file if necessary, and coadds the completed pair to it.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=cut

# The group file name - we use the ->raw one here, as subsequent steps
# (eg extraction) will update the ->file and we want none of that here
my $groupfile = $Grp->raw;

# Get the filename for the sky subtracted pair (ignore $out)
my ($in, $out) = $Frm->inout("_junk");
my $obsnum = $Frm->number;

# If it doesn't exist, create the group file
if (!($Grp->file_exists)) {
   # Create the group file by copying the sky subtracted pair into it
   orac_print "Creating group $groupfile with $in\n";
   $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "in=$in out=$groupfile title=$groupfile");
      
   # Update the group object
   $Grp->coaddspush($obsnum);
} else {
   # The group file does exist. Coadd the current pair into it

   # We use a tmp file to do the unaveraging
   my $ua=new ORAC::TempFile;
   my $uafile= $ua->file;

   # Need to know how many pairs are in the group
   my $nobs=scalar(@{ scalar($Grp->coadds) } );
      
   # Do the unaverage
   $Mon{'kappa_mon'}->obeyw("cmult", "in=$groupfile scalar=$nobs out=$uafile");

   # Use a tmp file to do the addition
   my $add=new ORAC::TempFile;
   my $addfile = $add->file;
   $Mon{'kappa_mon'}->obeyw("add", "in1=$uafile in2=$in out=$addfile");

   # Average back into the group file
   $nobs++;
   orac_print "$in coadded to $groupfile\n";
   orac_print "Group $groupfile now contains $nobs pairs\n";
   $Mon{'kappa_mon'}->obeyw("cdiv", "in=$addfile scalar=$nobs out=$groupfile title=$groupfile");
}

# Update the Group object
$Grp->file($groupfile);

orac_print "\n";
