=head1 NAME

_FIND_BAD_PIXELS_

=head1 DESCRIPTION

Used in array tests to add the bad pixels detected in this frame into the 
bad pixel mask

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=cut

if ($Frm->uhdr("ORAC_OBSERVATION_TYPE") eq "BIAS") {
   # Threshold on the pixel value

   my ($in, $out) = $Frm->inout("_bpd");

   # Do a kappa stats
   $Mon{'kappa_mon'}->obeyw("stats", "ndf=$in comp=Data clip=\[ 3 \]");
   
   # Get the mean and standard deviation
   my $ORAC_STATUS;

   ($ORAC_STATUS, my $mean) = $Mon{'kappa_mon'}->get("stats", "mean");
   ($ORAC_STATUS, my $sigma) = $Mon{'kappa_mon'}->get("stats", "sigma"); 

   my $thrhi = $mean + 6*$sigma;
   my $thrlo = $mean - 6*$sigma;

   $Mon{'kappa_mon'}->obeyw("thresh", "in=$in newlo=bad newhi=bad out=$out title=$out thrhi=$thrhi thrlo=$thrlo");

   $Mon{'ndfpack_mon'}->obeyw("setbad", "ndf=$out value=true");
   orac_print "$in to $out: Bad pixels detected by thresholding bias values\n";


   # Now search for anomolously large values in the variance component.
   # These would be pixels with unstable BIAS values.

   # Do a kappa stats
   $Mon{'kappa_mon'}->obeyw("stats", "ndf=$in comp=Variance clip = \[ 3 \]");

   # Get the mean and standard deviation

   ($ORAC_STATUS, $mean) = $Mon{'kappa_mon'}->get("stats", "mean");
   ($ORAC_STATUS, $sigma) = $Mon{'kappa_mon'}->get("stats", "sigma"); 

   $thrhi = $mean + 6*$sigma;   
   
   my $tmp = new ORAC::TempFile;
   my $tmpfile = $tmp->file;

   $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "in=$out out=$tmpfile");

   $Mon{'kappa_mon'}->obeyw("errclip", "in=$tmpfile out=$out limit=$thrhi mode=Variance");

   orac_print "$out to $out: Unstable bias pixels detected and flagged\n";

   # Do NOT update the frame object as we don't want the _bpm going onto
   # the next stage.

   _FILE_BAD_PIXELS_ FILE=$out

}

if ($Frm->uhdr("ORAC_OBSERVATION_TYPE") eq "DARK") {

   # This is going to get run on darks of all exposure times, not just the
   # long dark.

   # Mask any pixels with Really excessive dark current

    my ($in, $out) = $Frm->inout("_bpd");

   # Do a kappa stats
   $Mon{'kappa_mon'}->obeyw("stats", "ndf=$in comp=Data");
   
   # Get the mean and standard deviation
   my $ORAC_STATUS;

   ($ORAC_STATUS, my $mean) = $Mon{'kappa_mon'}->get("stats", "mean");
   ($ORAC_STATUS, my $sigma) = $Mon{'kappa_mon'}->get("stats", "sigma"); 

   my $thrhi = $mean + 10*$sigma;
   my $thrlo = $mean - 10*$sigma;

   $Mon{'kappa_mon'}->obeyw("thresh", "in=$in newlo=bad newhi=bad out=$out title=$out thrhi=$thrhi thrlo=$thrlo");

   orac_print "$in to $out: Bad pixels detected by thresholding dark values\n";

   # Do NOT update the frame object as we don't want the _bpm going onto
   # the next stage.

   _FILE_BAD_PIXELS_ FILE=$out

}
orac_print "\n";
