=head1 NAME

_DERIPPLE_ALL_BEAMS_ - Deripple interleaved observations.

=head1 DESCRIPTION

This primitive deripples interleaved observations by creating a ripple
flat, then dividing this ripple flat into the observation. If the amplitude
of the ripple is greater than 70%, then no derippling is done.

The resulting spectrum is created in a file with a _dri suffix. This
file is created even if no derippling is performed because the amplitude
is greater than 70% -- the spectrum is copied directly from source.

The generated flat-field is created in a file with a _rif suffix.

If there is only one observation used in interleaving (i.e. no interleaving
is done) then no derippling is performed, and the original spectrum
is propagated through. If this is the case, then no _dri file is created.

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# Bring in Starlink::HDSPACK;
use Starlink::HDSPACK qw/ create_hdsobj /;

# We should have a "NBEAMS" header from _EXTRACT_DETERMINE_NBEAMS_
my $nbeams = $Grp->uhdr("NBEAMS");

my $detincr = $Frm->uhdr("ORAC_SCAN_INCREMENT");
my $period = nint (1/$detincr);

my $base = $Grp->raw;
my $inbase = $Grp->file;

if ($detincr != 1) {

   my $rifbase = $base."_rif";
   my $dribase = $base."_dri";

   my $ORAC_STATUS = ( create_hdsobj( $rifbase, 'NDF', [ 0 ] ) ? ORAC__OK : ORAC__ERROR );
   $ORAC_STATUS = ( create_hdsobj( $dribase, 'NDF', [ 0 ] ) ? ORAC__OK : ORAC__ERROR );

   for (my $i=1; $i<=$nbeams; $i++) {

      # Create a ripple flat field
   
      my $in = $inbase.".beam$i";
      my $rif = $rifbase.".beam$i";
      $Mon{'figaro2'}->obeyw("irflat", "spectrum=$in xstart=min xend=max more=false period=$period output=$rif");
      # Need to create a zero variance array on the ripple flat field
      $Mon{'ndfpack_mon'}->obeyw("setvar", "ndf=$rif variance=0"); 
      orac_print "$in to $rif: Ripple Flat field created\n";
      $Mon{'kappa_mon'}->obeyw("stats", "ndf=$rif");
      (my $ORAC_STATUS, my $sigma) = $Mon{'kappa_mon'}->get("stats", "sigma");
      my $string = sprintf ("%5.2f", 100*$sigma);
      orac_print "$rif: Ripple amplitude is $string%\n";

      # Do the de-ripple - but only if the ripple amplitude is less than 70%
      my $dri = $dribase.".beam$i";
      if ($sigma < 0.7) {
         $Mon{'kappa_mon'}->obeyw("div", "in1=$in in2=$rif out=$dri title=$dri");
         orac_print "$in to $dri: Derippled with ripple-flat $rif\n";
      } else {
         # Just do a copy instead - so that if one beam gets rejected, the file still contains all beams
         $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "in=$in out=$dri");
         orac_print "$in to $dri: NOT derippled as ripple amplitdue above 70%\n";
      }
      # Update the group object
      $Grp->file($dribase);
   }
} else {

   orac_print "$inbase: No need to deripple - scan increment is: $detincr\n";
}

   orac_print "\n";
