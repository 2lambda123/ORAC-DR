=head1 NAME

_EXTRACT_ALL_BEAMS_

=head1 DESCRIPTION

Optimally extracts all the beams in a group file

=head1 AUTHOR

Paul Hirst <p.hirst@jach.hawaii.edu>

=cut

# We should have a "NBEAMS" header from _EXTRACT_DETERMINE_NBEAMS_
my $nbeams = $Grp->uhdr("NBEAMS");

# Get the beam positions and multipliers
my @row;
my @mult;
foreach my $i (1..$nbeams) {
   # We should have BEAM_POSITION_$i headers
   my $keyword = "BEAM_POSITION_".$i;   
   $row[$i] = $Grp->uhdr($keyword);

   # And BEAM_MULT_$i headers
   $keyword = "BEAM_MULT_".$i;
   $mult[$i] = $Grp->uhdr($keyword);
}

# Get the input file
my $in = $Grp->file;

# Go back to this when we have propper beam detection
# Get the optextract window size. The bigger the better, sans overlap, so:
#my $window=0;
#if ($nbeams == 2) {
#   # Set it to half the beam separation
#   $window = int (0.5*(abs ($row[1] - $row[2])));
#} else {
#   # Set it to 10 pixels
#   $window=10;
#}

my $window = 10;
orac_print ("Optimal Extraction apperture half-width will be: $window pixels\n");


# Loop through the beams, extracting them
# We'll use HDS containers so as to store the multiple beams
my $base = $Grp->file;
my $oep = $base."_oep";
my $oer = $base."_oer";
my $oes = $base."_oes";

my $tmp = new ORAC::TempFile;
my $tmpfile = $tmp->file;

$Mon{'figaro1'}->obeyw("creobj", "type=structure dims=0 object=$oep");
$Mon{'figaro1'}->obeyw("creobj", "type=structure dims=0 object=$oer");
$Mon{'figaro1'}->obeyw("creobj", "type=structure dims=0 object=$oes");

foreach my $i (1..$nbeams) {
   # Get the filename for the opt-extract profile
   $oep = $base."_oep".".beam$i";
   
   # And the profile residuals
   $oer = $base."_oer".".beam$i";

   # Set handy limits
   my $lbound = $Frm->uhdr("ORAC_Y_LOWER_BOUND");
   my $ystart = ($row[$i]-$window < $lbound) ? $lbound : $row[$i]-$window;

   my $ubound = $Frm->uhdr("ORAC_Y_UPPER_BOUND");
   my $yend = ($row[$i]+$window > $ubound) ? $ubound : $row[$i]+$window;

   # Do the profile
   $Mon{'figaro1'}->obeyw("profile", "image=$in ystart=$ystart yend=$yend degree=3 profile=$oep residual=$oer weight nreject=0");
   orac_print "$in to $oep: Opt-Extract profile over window: $ystart:$yend\n";
   orac_print "$in to $oer: Opt-Extract residuals from $oep\n";

   # Do the opt extract - (optimally extracted spectra)
   # Actually, go via a temp file if the multiplier for the beam != 1 and divide by it otherwise
   $oes = $base."_oes".".beam$i";
   if ($mult[$i] == 1) {
      $Mon{'figaro1'}->obeyw("optextract", "image=$in profile=$oep weight spectrum=$oes");
   } else {
      $Mon{'figaro1'}->obeyw("optextract", "image=$in profile=$oep weight spectrum=$tmpfile");
      $Mon{'kappa_mon'}->obeyw("cdiv", "in=$tmpfile scalar=$mult[$i] out=$oes");
   }
   orac_print "$in to $oes: Optimally extracted using profile: $oep and divisor: $mult[$i]\n";

   # Update the group object
   $oes = $base."_oes";
   $Grp->file($oes);

   # At this point, the group is 1 dimentional
   $Grp->uhdr("NDIMS", 1);
}

orac_print "\n";
