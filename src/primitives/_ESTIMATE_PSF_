# _ESTIMATE_PSF_
#
# Estimates the PSF of a standard star.
#
# TASK: KAPPA - CENTROID, PSF
#
# Exports:
#    PSFNAME, Reference to @CENTRE
#  
# This should only be performed on OBJECT frames.
# This method Acts on a reduced group
# We have to specify this since we have to decide whether we
# are using $Frm or $Grp and in general this routine is run
# on reduced images.

print colored ("PRIMITIVE: ESTIMATE_PSF\n",'magenta');

if ($Grp->hdr(OBSTYPE) =~ /OBJECT/) {

  # User-accessible mapping and parameters
  $user = "";

  # Specify the other parameters for the CENTROID stage.
  $header = "ndf=".$Grp->file."(~40,~40)";
  $hidden = "mode=interface init=[128,128] cosys=w"; 

  # Find the centroid of the object.  For the moment start the search at
  # the frame centre.  The standard position may be displaced from this,
  # and should be written to the headers.
  $Mon{"kappa_mon"}->obeyw("centroid","$header $user $hidden");
  #   print "Command was: centroid $header $user $hidden \n";

  # Store the located centroid within a text file of the format PSF expects.
  # (There should be some rationalisation in KAPPA and CCDPACK to use
  # Clive Davenhall's small tables.  In that case this would be altered.)
  # The split of the centre parameter array has a leading space.  Put this
  # into a junk variable.
  ($value, $status ) = $Mon{"kappa_mon"}->get("centroid:centre");
  ($junk, @centre) = split(/\[|,|\]/, $value, 4);
  open ( PSFIN, ">centre$$.dat" );
  print PSFIN "@centre\n";
  close ( PSFIN );

  # Store the centre information for later use.
  $_ESTIMATE_PSF_{CENTRE} = \@centre;

  # Assign the other parameters.
  $psfname = ($_ESTIMATE_PSF_{PSF} || "psf$$");

  # Specify the other parameters for the PSF stage.
  $header = "in=".$Grp->file." out=$psfname";
  $hidden = "cut=1E-20 device=! cofile=centre$$.dat";

  # Calculate the psf, using the standard star alone.  Make an image of
  # the psf, which goes to a very low signal.  It's needed to compute the
  # light beyond the aperture.
  $Mon{"kappa_mon"}->obeyw("psf","$header $user $hidden");

  # Store the PSF name in the primitives hash
  $_ESTIMATE_PSF_{"PSFNAME"} = $psfname;

  # Now we can remove the temporary ascii file
  unlink ("centre$$.dat");

  print colored("Orac says: PSF of standard star in frame ".$Grp->file." determined\n",'magenta');
};
