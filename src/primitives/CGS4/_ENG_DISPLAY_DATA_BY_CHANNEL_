# DISPLAY DATA BY CHANNEL -*-perl-*-


=head1 NAME

DISPLAY DATA BY CHANNEL - displays data by readout channel

=head1 DESCRIPTION

This primitive displays data by readout channel. Channel from one data
is isolated by masking out all other channels. 


=head1 ORAC

=head2 Engines referenced

KAPPA

=head2 Tasks called

=over 4

=item kappa_mon

ardmask

=item ndfpack_mon

setbad

=back

=head2 Objects addressed

$Frm

=head2 Other files

$ORAC_DATA_CAL/ard_channelN.dat where 1<N<4

=head1 NOTES

Currently uses MICHELLE ARD files to define channels for display. As the
MICHELLE array is larger than the CGS4 array, these ARD files define columns
that do not exist on the CGS4 array. This is currently not a problem with
the 'ardmask' task, but if it is changed in the future, these ARD files 
will also need to be changed.

=head2 REVISION

$Id$

=head1 AUTHOR

frossie@jach.hawaii.edu

=cut

if (defined $Display) {
  
  my $file = $Frm->file;
  
  foreach my $channel (1..4) {
    
    my ($junk,$nout) = $Frm->inout("_c$channel");
    my $ardfile = $ENV{'ORAC_DATA_CAL'}."/ard_channel$channel.dat";
    $Mon{'kappa_mon'}->obeyw("ardmask","in=$file out=$nout ardfile=$ardfile title='Channel $channel'");
    
    # work around ardmask bug
    $Mon{'ndfpack_mon'}->obeyw("setbad","ndf=$nout value=true");
    
    my $Tmpfrm = new $Frm;
    $Tmpfrm->file($nout);
    
    $Display->display_data($Tmpfrm) ;
  };
  

};
