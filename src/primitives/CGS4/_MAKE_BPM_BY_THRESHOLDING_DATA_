# -*-perl-*-

=head1 NAME

MAKE_BPM_BY_THRESHOLDING_DATA - creates a bad pixel mask by
thresholding the data array

=head1 DESCRIPTION

This primitive presents a histogram of the data array and
interactively prompts the user for an upper and lower threshold,
outside of which data is marked as bad. As a result, a bad pixel mask
is generated. The mask consists of good pixels with a value of zero,
and bad pixels with a value of BAD. 

=head1 NOTES FOR USERS

The name of the output file is bpm_N.sdf, where N is the number of the
observation from which the mask was derived. In order to use this mask
in preference to the one provided in the calibration directory, use

oracdr -calib mask=bpm_N

=head1 NOTES FOR INSTRUMENT SCIENTISTS

If you have created a mask that you want to install as the new
standard mask in the calibration directory, copy it into
$ORAC_DATA_CAL and name it approrpriately (consult the ORAC-DR
specialist for your instrument if you are unsure about what name to
use).

=head1 NOTES FOR DEVELOPERS

Like a few other engineering primitives, this one addresses the
display system directly, rather than depending on the user
configuration file disp.dat. This is done because the author judges
that the engineering function of this primitive would be severely
impaired without the display being configured in a specific manner,
and therefore should not be left to the user.

In most situations however, direct manipulation of the Display object
is frowned upon, and a baseball bat will be employed to discourage its
use in astronomical primitives.

=head1 ORAC

=head2 Engines referenced

KAPPA

=head2 Tasks called

=over 4

=item kappa_mon

thresh

=item ndfpack_mon

erase

=back

=head2 Objects addressed

$Frm, $Display

=head2 Other files

Logs to $ORAC_DATA_OUT/log.channel

=head2 REVISION

$Id$

=head1 AUTHOR

frossie@jach.hawaii.edu

=cut

# Show histogram is display is active

my $min = 10;


my $max = 100;

orac_print("Thresholding data outside the values $min and $max\n");

my $in = $Frm->file;
my $out = "bpm_".$Frm->number;

# set all values outside the provided limitis to bad
$Mon{'kappa_mon'}->obeyw("thresh","in=$in out=tmp$$ thrlo=$min thrhi=$max newhi=bad newlo=bad title=$out");
# set all (good) values to 0
# note that UFTI does not use the same convention
# the value of 0 for good pixels was chosen by THK for similarity with CGS4
# this might be changed if it does not work out....
$Mon{'kappa_mon'}->obeyw("thresh","in=tmp$$ out=$out thrlo=$max thrhi=$max newhi=bad newlo=0 title=$out");
# delete temporary file
$Mon{'ndfpack_mon'}->obeyw("erase","object=tmp$$ ok");

orac_print("The bad pixel mask $out has been created.\n");

# File the current frame as the current mask.
$Cal->mask( $Frm->file );
$Cal->maskindex->add( $Frm->file, $Frm->hdr );
orac_print $Frm->file . " added to index file\n";



