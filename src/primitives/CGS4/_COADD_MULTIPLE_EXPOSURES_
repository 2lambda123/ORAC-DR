# -*-perl-*-

=head1 NAME

COADD_MULTIPLE_EXPOSURES - coadd sub-frames to give one output frame

=head1 DESCRIPTION

Coadds sub-frames via averaging to give a single output frame.

=head1 PARAMETERS

=over 4

none

=back

=head1 ORAC

=head2 Engines referenced

KAPPA

=head2 Tasks called

=over 4

=item kappa_mon

cdiv, maths

=back

=head2 Objects addressed

$Frm

=head2 REVISION

  $Id$

=head1 AUTHOR

frossie@jach.hawaii.edu

=cut

my $nfiles = $Frm->nfiles;

if($nfiles != 1) {

  # generate list of files for 'makemos'
  my $tmp = new ORAC::TempFile;
  my @temp;    # workaround -- remove line when 'makemos' is fixed
  foreach my $i (1..$nfiles) {
    ##############################################################
    # Workaround because 'makemos' doesn't handle HDS containers #
    ##############################################################
    $temp[$i] = new ORAC::TempFile;
    my $tempname = $temp[$i]->file;
    my $orig = $Frm->file($i);
    $Mon{'ndfpack_mon'}->obeyw("ndfcopy","in=$orig out=$tempname");
    print {$tmp->handle} $tempname . "\n";
    # END of workaround
    # remove the previous code to remove workaround
#    print {$tmp->handle} $Frm->file($i) . "\n"; # remove comment when 'makemos' is fixed
  }
  $tmp->handle->close;

  # generate name of output file
  $Frm->files($Frm->file);
  my ($in,$out) = $Frm->inout("_co");

  # average the files together using 'makemos'
  my $mosargs = "in=^" . $tmp->file . " noscale nousevar genvar nozero method=mean logto=neither logfile=!";
  $Mon{'ccdpack_reg'}->obeyw("makemos","$mosargs out=$out");

  # update $Frm object
  $Frm->file($out);
  $Frm->mergehdr;
  
  $Display->display_data($Frm) if defined $Display;
  
  # print congratulatory message
  orac_print ("Frames coadded into $out\n");
}
