# _NORMALIZE_FLAT_BY_SMOOTH_			-*-perl-*-

=head1 NAME

NORMALIZE_FLAT_BY_SMOOTH - normalizes a 2-D image by using a moving box filter

=head1 DESCRIPTION

Normalizes a 2D image (usually a flat-field) and removes any large-scale changes
with wavelength by applying the following procedure:

1. The 2-D image is collapsed in Y to an average 1-D spectrum.

2. The spectrum is smoothed using a moving box filter.

3. The smoothed spectrum is grown in Y to an image with dimensions matching
the original image.

4. The original image is divided by the smoothed image.

=head1 PARAMETERS

=over 4

=item BOXSIZE

Defines the smoothing box size, in pixels. This should be an odd number in the range 
1:XMAX/2. Defaults to 5.

=back

=head1 ORAC

=head2 Engines referenced

KAPPA, FIGARO

=head2 Tasks called

=over 4

=item kappa_mon

block, div

=item figaro1

growx

=item figaro4

xtract

=back

=head2 Objects addressed

$Frm

=head2 REVISION

  $Id$

=head1 AUTHOR

b.cavanagh@jach.hawaii.edu

=cut

# get parameters

my $boxsize = ($_NORMALIZE_FLAT_BY_SMOOTH_{BOXSIZE} || undef);

($boxsize) || ($boxsize = 5);

if(($boxsize % 2) == 0) { 
  my $oldbox = $boxsize;
  $boxsize -= 1;
  orac_warn("Flat normalization smoothing box size modified from $oldbox to $boxsize\n");
}

foreach my $i (1..$Frm->nfiles) {

  # Generate the input and output filenames.
  my ($in,$out) = $Frm->inout("_nf",$i);
  
  # Get the dimensions of the input image

  my $ydim = $Frm->hdr("DROWS");            # number of rows in array
  my $xdim = $Frm->hdr("DCOLUMNS");         # number of columns in array

  if(int( $xdim / 2 ) < $boxsize) {
    my $oldbox = $boxsize;
    ((int( $xdim/2 ) % 2 ) == 0) ? ($boxsize = int($xdim / 2) - 1) : ($boxsize = int($xdim / 2));
    orac_warn("Flat normalization smoothing box size modified from $oldbox to $boxsize\n");
  }

  # Collapse the 2D image to a 1D spectrum

  my $spec = new ORAC::TempFile;
  my $specname = $spec->file;
  $Mon{'figaro4'}->obeyw("xtract","in=$in out=$specname colaps=\[0,1\] info=no varuse=no");
  
  # Smooth the 1D spectrum using a box filter

  my $boxspec = new ORAC::TempFile;
  my $boxspecname = $boxspec->file;;
  $Mon{'kappa_mon'}->obeyw("block","in=$specname out=$boxspecname box=$boxsize estimator=mean wlim=!");
  
  # Grow the smoothed spectrum into a 2D image

  my $smoothimage = new ORAC::TempFile;
  my $smoothimagename = $smoothimage->file;
  $Mon{'figaro1'}->obeyw("growx","spectrum=$boxspecname image=$smoothimagename ystart=1 yend=$ydim ysize=$ydim new=true");
  
  # Divide the flat field by the smoothed image

  $Mon{'kappa_mon'}->obeyw("div","in1=$in in2=$smoothimagename out=$out");

  # Update Frame object

  $Frm->file($i,$out);

  # Print congratulatory message

  orac_print("Orac says: $in to $out: Flat normalized\n");

}



