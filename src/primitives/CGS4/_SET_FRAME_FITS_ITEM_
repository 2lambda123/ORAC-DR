# _SET_FRAME_FITS_ITEM_   -*-perl-*-
#
# adds or modifies a fits header for the Frm object

my $key = ($_SET_FRAME_FITS_ITEM_{'KEY'} || undef);
my $value = ($_SET_FRAME_FITS_ITEM_{'VALUE'} || undef);
my $comment = ($_SET_FRAME_FITS_ITEM_{'COMMENT'} || undef);

if((!defined($key)) || (!defined($value))) {
  orac_warn "Must specify key/value pair for FITS header.\n";
} else {

  my $frame = $Frm->file;
  
  # get the fits header
  
  my ($hashref, $status) = NDF::fits_read_header($frame);
  
  # modify the comment (set to null if undefined, replace | with a space,
  # put single quotes around it)
  
  if(!defined($comment)) { $comment = '\$C'; }
  $comment =~ s/\|/ /g;
  $comment = "\'" . $comment . "\'";
  
  if(exists($$hashref{$key})) {
    
    # the key exists, so update with the new value (and comment if necessary)
    
    my $pars = "edit=update position=! string=false";
    $Mon{'ndfpack_mon'}->obeyw("fitsmod","ndf=$frame keyword=$key value=$value comment=$comment $pars");
    
  } else {
    
    # the key doesn't exist, so add the new value (and comment if necessary)
    
    my $pars = "edit=write position=! string=false";
    $Mon{'ndfpack_mon'}->obeyw("fitsmod","ndf=$frame keyword=$key value=$value comment=$comment $pars");
    
  }
  
  # update the $Frm object header

  $Frm->hdr($key => $value);

}
