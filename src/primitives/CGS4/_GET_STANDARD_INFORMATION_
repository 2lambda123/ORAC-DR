# _CREATE_STANDARD_          -*- perl -*-
#

=head1 NAME

_CREATE_STANDARDR_ - creates a standard image

=head1 AUTHOR

Brad Cavanagh.

=cut

# creates a standard image

# get temperature parameter
# if the temperature parameter is not defined, default to 6000

my $temperature = ($_CREATE_STANDARD_{TEMP} || undef);
($temperature) || ($temperature = 6000);

# get extraction row
# if the extraction row is not defined, default to 96(?)

my $extractrow = ($_CREATE_STANDARD_{ROW} || undef);
($extractrow) || ($extractrow = 96);

# get reference wavelengh
# blackbody flux will be normalized to the flux at this wavelength

my $refwave = $Frm->hdr("GLAMBDA") / 1000000;   # units in meters

# get y-dimensions

my $ORAC_STATUS;
($ORAC_STATUS, my @lbound) = $Mon{'ndfpack_mon'}->get('ndftrace','lbound');
($ORAC_STATUS, my @ubound) = $Mon{'ndfpack_mon'}->get('ndftrace','ubound');
my $ymin = $lbound[1];
my $ymax = $ubound[1];
my $ydim = $ymax - $ymin + 1;

# start the processing

foreach my $i (1..$Frm->nfiles) {

  # generate the input and output filenames
  my ($in, $out) = $Frm->inout("_std",$i);

# extract the row specified above into $specname

  my $spec = new ORAC::TempFile;
  my $specname = $spec->file;
  $Mon{'figaro1'}->obeyw("extract","image=$in ystart=$extractrow yend=$extractrow spectrum=$specname");

# set axis information (assuming wavelength units are microns)

  $Mon{'ndfpack_mon'}->obeyw("axlabel","ndf=$specname label=wavelength dim=1");
  $Mon{'ndfpack_mon'}->obeyw("axunits","ndf=$specname units=micron dim=1");

# create a blackbody in $bbname using axis information from $specname

  my $bb = new ORAC::TempFile;
  my $bbname = $bb->file;
  $Mon{'figaro4'}->obeyw("bbody","logar=no temp=$temperature in=$specname out=$bbname");

# convert the blackbody units from F-nu to F-lambda

  $Mon{'figaro2'}->obeyw("fwconv","spectrum=$bbname flux_unit=erg output=$bbname");

# convert the blackbody units from CGS F-lambda to MKS F-lambda

  my $bbmks = new ORAC::TempFile;
  my $bbmksname = $bbmks->file;
  $Mon{'kappa_mon'}->obeyw("cmult","in=$bbname scalar=0.1 out=$bbmksname");

# calculate the flux at the reference wavelength (flux units are Jy/sr)

  my $const1 = 1.1910439e-16;
  my $const2 = 0.01438769;
  my $refflux = ($const1 / ($refwave ** 5)) / (exp($const2 / ($refwave * $temperature)) - 1);
  print "DEBUG: reference flux: $refflux reference wavelength: $refwave\n";

# normalize the blackbody by the reference flux

  my $normbb = new ORAC::TempFile;
  my $normbbname = $normbb->file;
  $Mon{'kappa_mon'}->obeyw("cdiv","in=$bbmksname out=$normbbname scalar=$refflux");

# divide the extracted spectrum by the normalized blackbody spectrum

  my $div = new ORAC::TempFile;
  my $divname = $div->file;
  $Mon{'kappa_mon'}->obeyw("div","in1=$specname in2=$normbbname out=$divname");

# grow the blackbody-normalized spectrum into 2D

  $Mon{'figaro1'}->obeyw("growx","spectrum=$divname image=$out ystart=$ymin yend=$ymax ysize=$ydim new=true");

# update Frame object
#
#  $Frm->file($i,$out);
#
# print congratulatory message
#
#  orac_print("Orac says: $in to $out: Standard created\n");
#
}
