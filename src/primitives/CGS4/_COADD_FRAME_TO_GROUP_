# _COADD_PAIRS_AND_GROUP_  -*-perl-*-

=head1 NAME

_COADD_FRAME_GROUP - coadd observations to group file

=head1 DESCRIPTION

Coadds observation frames to a group file. The average of the
observations is stored in the group. This does not work with
OBJECT/SKY pairs (see _COADD_PAIRS_AND_GROUP_ instead).

=head1 PARAMETERS

=over 4

none

=back

=head1 ORAC

=head2 Engines referenced

KAPPA

=head2 Tasks called

=over 4

=item kappa_mon

sub, cmult, add, cdiv

=item ndfpack_mon

erase

=back

=head2 Objects addressed

$Frm, $Grp

=head1 NOTES

This primitive does work with the C<-resume> flag but does not work
with the C<-batch> flag.

Assumes that by the time this primitive is called, there is only 
one file associated with the frame object.

=head2 REVISION

  $Id$

=head1 AUTHOR

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=cut

my $obsnum = $Frm->number;

# We're using $Grp->raw so that the primitive will -always- coadd to the base
# group file. If some other steps were done after this (i.e. ratioing by a
# standard), then $Grp->file would be the name of the file after the other
# steps, thus sending the entire primitive into a pit of despair from which
# it would be quite difficult to return

my $groupname = $Grp->raw;
my $framename = $Frm->file;

# Now update the groupname with this value so that all the
# methods will look in the right place

$Grp->file( $groupname );

if( ! ($Grp->file_exists) ) {

  # The group file doesn't exist, so copy the frame to the group file
  $Mon{'ndfpack_mon'}->obeyw("ndfcopy","in=$framename out=$framename title=$groupname");
  orac_print "Creating group $groupname\n";

  # ...and update the group header
  $Grp->readhdr;

  # This is repeated in a later segment as well.
  # Since we have coadded an observation we need to store this information
  # in the group file coadds array
  $Grp->coaddspush($obsnum);

} elsif ( $Grp->coaddspresent($obsnum) ) {

  # Already been coadded

  orac_print "This observation ($obsnum) have already been coadded. Skipping.\n";

} else {

  # The group file exists and this observation has not previously been added
  # Deteremine how many observations have already been added
  # The number of observations added previously is from coadds
  my $numobsadded = scalar(@{ $Grp->coadds } );

  # Now we need to "unaverage" the group file. A temporary file is needed for this.

    my $unavg = new ORAC::TempFile;
    my $unavgname = $unavg->file;
    $Mon{'kappa_mon'}->obeyw("cmult","in=$groupname scalar=$numobsadded out=$unavgname");

    # Now add the current obs to the unaveraged group. A temp file is needed.

    my $addgroup = new ORAC::TempFile;
    my $addgroupname = $addgroup->file;
    $Mon{'kappa_mon'}->obeyw("add","in1=$unavgname in2=$framename out=$addgroupname");

    # Now average the result. Erase the original group file first, because
    # kappa will complain if it tries to overwrite a file (will it?? TIMJ).

    $Mon{'ndfpack_mon'}->obeyw("erase","object=$groupname ok=true");
    my $avgscalar = $numobsadded + 1;
    $Mon{'kappa_mon'}->obeyw("cdiv","in=$addgroupname scalar=$avgscalar out=$groupname title=$groupname");
    orac_print "Adding observation $framename to group $groupname\n";

    # Print an informative message (I dont think it will ever get here
    # with only a single frame since the early if should catch it.
    if ($avgscalar == 1) {
      orac_print "Group file now contains observations from $avgscalar frame\n";
    } else {
      orac_print "Group file now contains observations from $avgscalar frames\n";
    }

    # Since we have coadded an observation we need to store this information
    # in the group file coadds array
    $Grp->coaddspush( $obsnum );

    # Now update the FITS header to reflect the new RUTEND  and AMEND
    # from the current frame
    my $rutend = $Frm->hdr('RUTEND');
    my $amend  = $Frm->hdr('AMEND');
    _SET_GROUP_FITS_ITEM_ KEY=RUTEND VALUE=$rutend
    _SET_GROUP_FITS_ITEM_ KEY=AMEND VALUE=$amend

  }

  $Display->display_data($Grp) if defined $Display;

}

