#+
# Name:
#    _REMOVE_COLUMN_ROW_STRUCTURE_
#
# Purpose:
#    Removes additive artifacts present in the rows and columns.
#
# Language:
#    Perl5
#
# Description:
#    This primitive removes vertical and horizontal additive artifacts
#    arising from pickup and bias variations.  It first collapses each
#    column using a median filter.  The resultant vector is grown to the
#    dimensions of the original frame, and set to the original origin.
#    This frame of medians is subtracted from the original frame.
#    Similar steps are repeated but the collapse is along the rows.
#
# Notes:
#    -  This primitive is suitable for Michelle in imaging mode.
#    -  Processing only occurs for object frames.
#    -  The removal of column and row structure is reported.
#    -  The column- and row-corrected frames can be displayed.
#
# Output Data:
#    -  The x and y collapsed median vectors inheriting the current
#    frame's filename but with the _xpr and _ypr suffices.
#    -  The column and row corrected frames inheriting the current
#    frame's filename but with the _cpc and _rpc suffices.
#
# Tasks:
#    KAPPA: COLLAPSE, NDFTRACE, PIXDUPE, RESHAPE, SETORIGIN, SUB.
#
# Deficiencies:
#    This algorithm assumes that the data have been differenced and the
#    background should be zero within the errors.  For data not
#    satisfying these criteria, the median of the whole input frame
#    would need to be subtracted first then added back at the end.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 2002 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# This should only be performed on OBJECT or SKY frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "OBJECT" || 
         $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "SKY") {

# Record the input file name.
       my $ndf = $Frm->file;
       
# Obtain the dimensions of the supplied frame.
       $Mon{ "ndfpack_mon" }->obeyw( "ndftrace", "ndf=$ndf" );
       my ( $ORAC_STATUS, @dims ) = $Mon{"ndfpack_mon"}->get( "ndftrace", "dims" );
       my $xdim = $dims[ 0 ];
       my $ydim = $dims[ 1 ];
       
# Correct for column structure
# ============================

# Create temporary files.
       my $coltmp = new ORAC::TempFile;
       my $colfile = $coltmp->file;

       my $colprotmp = new ORAC::TempFile;
       my $colprofile = $colprotmp->file;

# Collapse the columns obtaining the median.  This forms a map of
# column structure, caused for example by bias variations.
       my( $in, $out ) = $Frm->inout( "_ypr" );
       my $param = "in=$in out=$out estimator=median axis=2";
       $Mon{ "kappa_mon" }->obeyw( "collapse", "$param" );

# Convert this vector to two dimensions.  Note the unusual monolith
# for RESHAPE.
       $param = "in=$out out=$colprofile shape=[$xdim,1]";
       $Mon{ "ndfpack_mon" }->obeyw( "reshape", "$param" );

# Duplicate along the columns restoring an image the size of the
# frame on input. 
       $param = "in=$colprofile out=$colfile expand=[1,$ydim]";
       $Mon{ "kappa_mon" }->obeyw( "pixdupe", "$param" );

# Set the origin to match that of the original frame.
       $param = "ndf=$colfile like=$ndf";
       $Mon{ "ndfpack_mon" }->obeyw( "setorigin", "$param" );

# Subtract the two-dimensional column pattern from the original frame.
# CPC stands for column-profile corrected.
       ( $in, $out ) = $Frm->inout( "_cpc" );
       $param = "in1=$in in2=$colfile out=$out";
       $Mon{ "kappa_mon" }->obeyw( "sub", "$param" );

# Report progress.
       orac_print "Remove column structure in $in using the median to form $out\n";

# Update the frame.
       $Frm->file( $out );

# Display the cleaned frame.
       $Display->display_data( $Frm ) if ( defined $Display );

# Correct for row structure
# =========================

# Create temporary files.
       my $rowtmp = new ORAC::TempFile;
       my $rowfile = $rowtmp->file;

       my $rowprotmp = new ORAC::TempFile;
       my $rowprofile = $rowprotmp->file;

# Collapse the rows obtaining the median.  This forms a map of the row
# structure, caused for example by electronic pickup.
       ( $in, $out ) = $Frm->inout( "_xpr" );
       $param = "in=$in out=$out estimator=median axis=1";
       $Mon{ "kappa_mon" }->obeyw( "collapse", "$param" );

# Convert this vector to two dimensions.
       $param = "in=$out out=$rowprofile shape=[1,$ydim]";
       $Mon{ "ndfpack_mon" }->obeyw( "reshape", "$param" );

# Duplicate along the rows restoring an image the size of the frame on
# input. 
       $param = "in=$rowprofile out=$rowfile expand=[$xdim,1]";
       $Mon{ "kappa_mon" }->obeyw( "pixdupe", "$param" );

# Set the origin to match that of the original frame.
       $param = "ndf=$rowfile like=$ndf";
       $Mon{ "ndfpack_mon" }->obeyw( "setorigin", "$param" );

# Subtract the two-dimensional row pattern from the original frame.
# RPC stands for row-profile corrected.
       ( $in, $out ) = $Frm->inout( "_rpc" );
       $param = "in1=$in in2=$rowfile out=$out";
       $Mon{ "kappa_mon" }->obeyw( "sub", "$param" );

# Report progress.
       orac_print "Remove row structure in $in using the median to form $out\n";

# Update the frame.
       $Frm->file( $out );

# Display the cleaned frame.
       $Display->display_data( $Frm ) if ( defined $Display );

# Tidy output.
       orac_print "\n";
    }

# Podule
# ======

=head1 NAME

_REMOVE_COLUMN_ROW_STRUCTURE_ -- Removes additive artifacts present in the rows and columns.

=head1 DESCRIPTION

This primitive removes vertical and horizontal additive artifacts
arising from pickup and bias variations.  It first collapses each
column using a median filter.  The resultant vector is grown to the
dimensions of the original frame, and set to the original origin.
This frame of medians is subtracted from the original frame.
Similar steps are repeated but the collapse is along the rows.

=head1 NOTES

=over 4

=item *

This primitive is suitable for Michelle in imaging mode.

=item *

Processing only occurs for object frames.

=item *

The removal of column and row structure is reported.

=item *

The column- and row-corrected frames can be displayed.

=back

=head1 OUTPUT DATA

=over 4

=item *

The I<x> and I<y> collapsed median vectors inheriting the current
frame's filename but with the _xpr and _ypr suffices.

=item *

The column and row corrected frames inheriting the current
frame's filename but with the _cpc and _rpc suffices.

=head1 TASKS

KAPPA: COLLAPSE, NDFTRACE, PIXDUPE, RESHAPE, SETORIGIN, SUB.

=head1 DEFICIENCIES

This algorithm assumes that the data have been differenced and the
background should be zero within the errors.  For data not
satisfying these criteria, the median of the whole input frame
would need to be subtracted first then added back at the end.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 2002 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
