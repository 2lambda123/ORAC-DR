#+
# Name:
#    _REDUCE_DARK_STEER_
#
# Purpose:
#    Steers processing for REDUCE_DARK recipe.
#
# Language:
#    Perl5
#
# Description:
#    This primitive control processing for REDUCE_DARK recipe through
#    steering headers listed below.
#
# Steering Headers:
#    DARK_FRAMES = HASH
#       The name of the dark for a given exposure time, and the
#       corresponding number of frames used to create it.
#    USE_VARIANCE = LOGICAL
#       Whether or not variance processing is to occur.  This equates to
#       argument USEVAR.
#
# Arguments:
#    USEVAR = LOGICAL (Given)
#       Whether or not to create and propagate variance arrays.  [1]
#
# Notes:
#    -  This primitive is suitable for imaging infra-red cameras.
#    -  Processing only occurs for dark frames.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# This should only be performed on OBJECT frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "DARK" ) {

# Define a group header to store the name of a group selected by filter.
       my $listname = "DARK_FRAMES" ;

# Form the dark name, usually involving the exposure time and group
# number.
       _GET_DARK_NAME_
       my $dark = $_GET_DARK_NAME_{NAME};

# Does the Group of dark frames exist?  If not create it and
# use the filename derived from the current file.
       my $darkref = $Grp->uhdr( $listname );
       my %dark_list;
       if ( ! defined( $darkref ) ) {

# Store the dark filename and the associated number of darks in
# a hash, retained in the group headers for persistence.
          $dark_list{ $dark } = 1;
          my $darkref = \%dark_list;
          $Grp->uhdr( $listname, $darkref );

# The list exists, so check whether or not the current dark filename
# is already present.
       } else {
          $darkref = $Grp->uhdr( $listname );
          %dark_list = %$darkref;

# The dark file exists, so increment the count of the number of members
# to combine to form the dark.
          if ( exists( $dark_list{ $dark } ) ) {
             $dark_list{ $dark }++;
             $Grp->uhdr( $listname, \%dark_list );
          } else {

# Store the dark filename and the associated number of darks in
# the hash.
             $dark_list{ $dark } = 1;
             $Grp->uhdr( $listname, \%dark_list );
          }
       }

# Set steering headers.
# =====================

# Obtain the USEVAR argument.  Default to false.
       my $usevar = $_REDUCE_DARK_STEER_{USEVAR};
       $usevar = defined( $usevar ) ? $usevar : 1;
       $Frm->uhdr( "USE_VARIANCE", $usevar );
    }

# Podule
# ======

=head1 NAME

_REDUCE_DARK_STEER_ -- Steers processing for REDUCE_DARK recipe.

=head1 DESCRIPTION

This primitive control processing for REDUCE_DARK recipe through
steering headers listed below.

=head1 STEERING HEADERS

=over 4

=item DARK_FRAMES = HASH

The name of the dark for a given exposure time, and the
corresponding number of frames used to create it.

=item USE_VARIANCE = LOGICAL

Whether or not variance processing is to occur.  This equates to
argument USEVAR.

=back

=head1 ARGUMENTS

=over 4

=item USEVAR = LOGICAL (Given)

Whether or not to create and propagate variance arrays.  [1]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for imaging infra-red cameras.

=item *

Processing only occurs for dark frames.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
