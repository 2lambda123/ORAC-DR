#+
# Name:
#    _DIFFERENCE_PAIR_
#
# Purpose:
#    Subtracts pairs of NOD_CHOP polarimetry frames at the same waveplate
#    angle, and stores them in a new group.
#
# Language:
#    Perl5
#
# Description:
#    This primitive subtracts pairs of consecutive frames in a group.
#    The group is a subset, selected by the current frame's polarimetric
#    waveplate angle and recipe cycle number.

#    The sense of the subtraction is defined by the steering header
#    PAIR_ORDER.  When PAIR_ORDER is true, the current frame is
#    subtracted from the previous frame, and vice versa.  In both cases,
#    the frame being subtracted from is designated the primary frame.
#
#    The resultant difference frame becomes part of a group $diffGrp.
#    $diffGrp is created if it does not exist, and a reference to this
#    new group is recorded in the internal group header DIFFERENCE_GROUP.
#    Access to this group for further invocations is via DIFFERENCE_GROUP.
#    The difference frame inherits the headers of the primary frame.
#
#    When argument DISPLACE is true, as needed for NOD recipes the
#    following additional steps are made.  The primitive evaluates
#    displacements in equatorial co-ordinates (arcsec) between the two
#    frames and reports them; it records the displacements in the
#    difference frame as RA_OFFSET_DIFFERENCE and DEC_OFFSET_DIFFERENCE
#    internal headers.  The mean offsets of the pair replace those of the
#     primary header.
#
# Arguments:
#    DISPLACE = LOGICAL (Given)
#       When true (1), the equatorial displacements in arcsec between pairs
#       are recorded as RA_OFFSET_DIFFERENCE and DEC_ OFFSET_DIFFERENCE
#       user headers in the difference frame, and reported.  The mean
#       offsets of the pair replace those of the primary header.  This
#       assumes symmetric jittering.  [1]
#
# Notes:
#    -  This primitive is suitable for Michelle in imaging mode.
#    -  Processing only occurs for object and sky frames when
#    the steering header DIFFERENCE_PAIR is true.
#    -  The steering header CYCLE_NUMBER specifies the cycle number.
#    The waveplate angle comes from user header ORAC_WAVEPLATE_ANGLE.
#    -  The difference image can be displayed.
#    -  The start airmass is propagated from the first frame and the
#    end airmass from the second frame.
#    -  The primary frame title is propagated to the differenced frame.
#
# Output Data:
#    -  Differenced pairs inheriting the primary frame's name but with
#    the _dp suffix.
#    -  Group of differenced frames via the DIFFERENCE_GROUP internal
#    group header.
#
# Tasks:
#    KAPPA: FITSMOD, MATHS, SUB.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2001 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Selection
# =========
# This should only be performed on OBJECT frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "OBJECT" ||
         $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "SKY" ) {

# Is it time to difference a pair?
       my $take_difference = $Frm->uhdr( "DIFFERENCE_PAIR" );
       if ( $take_difference ) {

# Obtain the current frame's polarisation angle and cycle number.
          my $wplangle = $Frm->uhdr( "ORAC_WAVEPLATE_ANGLE" );
          my $cycleno = $Frm->uhdr( "CYCLE_NUMBER" );

# Create a sub group of the frames at the same waveplate angle and this
# cycle of the recipe.
          my $wpaGrp = $Grp->subgrp( ORAC_WAVEPLATE_ANGLE => $wplangle,
                                     CYCLE_NUMBER => $cycleno );

# Arguments
# =========
          my $displace = $_DIFFERENCE_PAIR_POL_NOD_CHOP_{DISPLACE};
          $displace = defined( $displace ) ? $displace : 1;

# Subtract within the pair.
# =========================

# Generate the input and output filenames.  The output file has the same
# name as the input except the suffix is changed to indicate that it is
# differenced pair.
          ( my $in, my $out ) = $Frm->inout( "_dp" );

# Obtain the previous file from the subgroup group.  This should be the
# previous frame at the same waveplate angle, but in a different nod
# position.
          my $previousFrm = $wpaGrp->frame( $wpaGrp->num - 1 );
          my $previous = $previousFrm->file;

# Obtain the sense of the subtractions from the steering header.  Note
# we we need to propagate the headers from the primary (A in ABBA
# order) NDF.  The primary NDF in SUB is that specified by parameter IN1.
          my $param1;
          if ( $Frm->uhdr( "PAIR_ORDER" ) ) {
             $param1 = "in2=$in in1=$previous out=$out title=!";
             $Mon{ "kappa_mon" }->obeyw( "sub", "$param1" );

# Report the processing status.
             orac_print "$in subtracted from $previous to make $out:\n" .
                        "   Pair differenced.\n";
          } else {

# Difference the two frames.
             $param1 = "in2=$previous in1=$in out=$out title=!";
             $Mon{ "kappa_mon" }->obeyw( "sub", "$param1" );

# Report the processing status.
             orac_print "$previous subtracted from $in to make $out:\n" .
                        "   Pair differenced.\n";
          }

# Access or create the group of differenced frames.
# =================================================

# Does the Group of difference frames exist?  If not create it and
# inherit the group file name ftom the main group.  Note that this
# is the main group, not the temporary sub group.
          my $diffGrp = $Grp->uhdr( "DIFFERENCE_GROUP" );
          if ( ! defined( $diffGrp ) ) {
             $diffGrp = $Grp->new;
             $diffGrp->file( $Grp->file );

#  Store the pointer to the group in the main Group user header.
             $Grp->uhdr( "DIFFERENCE_GROUP", $diffGrp );
          }

# Evaluate the offsets between the frames.
# ========================================

# Obtain the header keywords for the telescope offsets.  Assume for
# the moment that there's only one key.
          my $raname = "ORAC_RA_TELESCOPE_OFFSET";
          my $decname = "ORAC_DEC_TELESCOPE_OFFSET";
          my %keywords = $Frm->translate_hdr( $raname );

          my @rakey = keys( %keywords );
          %keywords = $Frm->translate_hdr( $decname );
          my @deckey = keys( %keywords );

# Since the frames are combined, we find the average of their offsets.
          my ( $raoff, $decoff );
          if ( $displace ) {
             $raoff = 0.5 * ( $previousFrm->uhdr( $raname ) +
                              $Frm->uhdr( $raname ) );
             $decoff = 0.5 * ( $previousFrm->uhdr( $decname ) +
                               $Frm->uhdr( $decname ) );

# Revise the offsets stored in the FITS extension in the output (differenced
# pair) image.  Leave the position and comment unchanged.
             $param1 = "ndf=$out keyword=$rakey[ 0 ] edit=update value=$raoff position=!";
             $Mon{ "ndfpack_mon" }->obeyw( "fitsmod", "$param1 comment=\\\$C" );
             $param1 = "ndf=$out keyword=$deckey[ 0 ] edit=update value=$decoff position=!";
             $Mon{ "ndfpack_mon" }->obeyw( "fitsmod", "$param1 comment=\\\$C" );
          }

# Propagate the start airmass from the earlier of the two frames.  The end
# airmass comes from the second observation.
          my $amstart = $previousFrm->uhdr( "ORAC_AIRMASS_START" );
          %keywords = $Frm->translate_hdr( "ORAC_AIRMASS_START" );
          my @amkey = keys( %keywords );
          $param1 = "ndf=$out keyword=$amkey[ 0 ] edit=update value=$amstart position=!";
          $Mon{ "ndfpack_mon" }->obeyw( "fitsmod", "$param1 comment=\\\$C" );

# Evaluate the displacements between the positive and negative images.
# ====================================================================

# Derive the displacement between previous and current frames.  Here we
# assume symmetry about the centre, so that the pair of images can be located
# quickly, and hence measured.
          my ( $radisp, $decdisp );
          if ( $displace ) {
             $radisp = $previousFrm->uhdr( $raname ) - $Frm->uhdr( $raname );
             $decdisp = $previousFrm->uhdr( $decname ) - $Frm->uhdr( $decname );

# Change the sign for the reverse order.
             if ( ! $Frm->uhdr( "PAIR_ORDER" ) ) {
                $radisp = -$radisp;
                $decdisp = -$decdisp;
             }

# Report the offsets.
             orac_print "The equatorial offsets between the positive and " .
                        "negative images is ($radisp,$decdisp) arcseconds.\n";
          }

# Store the differenced frame in the group.
# =========================================

# Create a new frame to store the differenced pair image.
          my $tempFrm = $Frm->new;
          $tempFrm->file( $out );

# Need to propagate the raw frame as ORAC-DR pattern matches for files
# ending in a number to set the $Frm->number, which is needed for the
# template method.
          $tempFrm->raw( $Frm->raw );

# Transfer the headers to the differenced frame, being sure to transfer
# from the primary frame.
          if ( $Frm->uhdr( "PAIR_ORDER" ) ) {
             %{$tempFrm->hdr} = ( %{$previousFrm->hdr} );
             %{$tempFrm->uhdr} = ( %{$previousFrm->uhdr} );
          } else {

# The primary frame is the current one, so transfer its headers to
# the differenced frame.
             %{$tempFrm->hdr} = ( %{$Frm->hdr} );
             %{$tempFrm->uhdr} = ( %{$Frm->uhdr} );
          }


# Revise the offsets stored in the internal header.
          if ( $displace ) {
             $tempFrm->uhdr( $raname, $raoff );
             $tempFrm->uhdr( $decname, $decoff );

# Store the displacements in the differenced frame.
             $tempFrm->uhdr( "RA_OFFSET_DIFFERENCE", $radisp );
             $tempFrm->uhdr( "DEC_OFFSET_DIFFERENCE", $decdisp );
          }

# Store the differenced frame in the difference group.
          $diffGrp->push( $tempFrm );

# Display the image using the temporary frame.
          $Display->display_data( $tempFrm ) if ( defined $Display );

       }
       orac_print "\n";
    }

# Podule
# ======

=head1 NAME

_DIFFERENCE_PAIR_ -- Subtracts pairs of NOD_CHOP polarimetry frames at the same waveplate angle, and stores them in a new group.

=head1 DESCRIPTION

This primitive subtracts pairs of consecutive frames in a group.
The group is a subset, selected by the current frame's polarimetric
waveplate angle and recipe cycle number.

The sense of the subtraction is defined by the steering header
PAIR_ORDER.  When PAIR_ORDER is true, the current frame is
subtracted from the previous frame, and vice versa.  In both cases,
the frame being subtracted from is designated the primary frame.

The resultant difference frame becomes part of a group $diffGrp.
$diffGrp is created if it does not exist, and a reference to this
new group is recorded in the internal group header DIFFERENCE_GROUP.
Access to this group for further invocations is via DIFFERENCE_GROUP.

When argument DISPLACE is true, as needed for NOD recipes the
following additional steps are made.  The primitive evaluates
displacements in equatorial co-ordinates (arcsec) between the two
frames and reports them; it records the displacements in the
difference frame as RA_OFFSET_DIFFERENCE and DEC_OFFSET_DIFFERENCE
internal headers.  The mean offsets of the pair replace those of the
primary header.

=head1 ARGUMENTS

=over 4

=item DISPLACE = LOGICAL (Given)

When true (1), the equatorial displacements in arcsec between pairs
are recorded as RA_OFFSET_DIFFERENCE and DEC_ OFFSET_DIFFERENCE
user headers in the difference frame, and reported.  The mean
offsets of the pair replace those of the primary header.  This
assumes symmetric jittering.  [1]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for Michelle in imaging mode.

=item *

The steering header CYCLE_NUMBER specifies the cycle number.
The waveplate angle comes from user header ORAC_WAVEPLATE_ANGLE.

=item *

The difference image can be displayed.

=item *

Processing only occurs for object and sky frames when the steering
header DIFFERENCE_PAIR is true.

=item *

The offsets in each differenced-pair frame are the average
of the two frames, i.e. symmetric jittering is assumed.

=item *

The start airmass is propagated from the first frame and the
end airmass from the second frame.

=item *

The primary frame title is propagated to the differenced frame.

=back

=head1 OUTPUT DATA

=over 4

=item *

Differenced pairs inheriting the primary frame's name but with
the _dp suffix.

=item *

Group of differenced frames via the DIFFERENCE_GROUP internal group
header.

=back

=head1 TASKS

KAPPA: FITSMOD, MATHS, SUB.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
