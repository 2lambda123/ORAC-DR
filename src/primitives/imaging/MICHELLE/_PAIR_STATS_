# -*-perl-*-

=head1 NAME

_PAIR_STATS_ -- Calculate the standard deviation for a differenced pair.

=head1 DESCRIPTION

This primitive calculates the standard deviation of a central section
of a differenced pair, along with standard deviations for the four channels
of the array. It finds the standard deviation, then divides
that result by sqrt(2) and multiplies by 500 to get the readnoise in
electrons, then displays that result to the user. It then
places this value in the E<lt>NE<gt>_STDDEV Group header, where
E<lt>NE<gt> is the number of the pair in the group (so the first
pair's standard deviation is stored in the 1_STDDEV Group header).
Channel standard deviations are stored in E<lt>NE<gt>_STDDEV_E<lt>channelE<gt>,
where E<lt>channelE<gt> is A, B, C, or D.

=head1 PARAMETERS

=over 4

=item CENT_PIXELS = INTEGER (Given)

The dimensions of a box centered on the central pixel for which stats
will be calculated. [200]

=item CLIP = INTEGER (Given)

Clipping level for statistics. [0]

=back

=head1 NOTES

=over 4

=item *

This primitive will only calculate stats when the DIFFERENCE_PAIR
Frame header is true.

=back

=head1 AUTHORS

Brad Cavanagh (JAC) <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

if( $Frm->uhdr( "DIFFERENCE_PAIR" ) ) {

  my %x_centre = ( A => 40,
                   B => 120,
                   C => 200,
                   D => 280 );
  my %y_centre = ( A => 120,
                   B => 120,
                   C => 120,
                   D => 120 );

  my $cent_pixels = $_PAIR_STATS_{CENT_PIXELS} || 200;

  my $clip = $_PAIR_STATS_{CLIP};
  if( ! defined( $clip ) ) {
    $clip = 0;
  }

  my $in = $Frm->file;

  my $param = "ndf=$in(~$cent_pixels,~$cent_pixels)";
  if( $clip > 1e-10 ) {
    $param .= " clip=$clip";
  }

  $Mon{'kappa_mon'}->obeyw("stats", "$param");
  ( my $ORAC_STATUS, my $sigma ) = $Mon{'kappa_mon'}->get("stats", "sigma");

  $sigma /= sqrt( 2 );
  $sigma *= 500;

  my $sigma_print = sprintf("%.3f", $sigma);

  orac_print "Standard deviation for $in is $sigma_print electrons.\n";

  # What pair number are we?
  my $pair = int( ( $Grp->num + 1 ) / 2 );

  $Grp->uhdr("${pair}_STDDEV", $sigma);

  for( 'A'..'D' ) {

    my $channel = $_;

    my $x_centre = $x_centre{$channel};
    my $y_centre = $y_centre{$channel};
    my $param = "ndf=$in($x_centre~60,$y_centre~200)";
    if( $clip > 1e-10 ) {
      $param .= " clip=$clip";
    }

    $Mon{'kappa_mon'}->obeyw("stats", "$param");
    ( $ORAC_STATUS, $sigma ) = $Mon{'kappa_mon'}->get("stats", "sigma");

    $sigma /= sqrt( 2 );
    $sigma *= 500;

    $sigma_print = sprintf("%.3f", $sigma);

    orac_print "Standard deviation for channel $channel is $sigma_print electrons.\n";

    # What pair number are we?
    $pair = int( ( $Grp->num + 1 ) / 2 );

    $Grp->uhdr("${pair}_STDDEV_${channel}", $sigma);

  }

  orac_print "\n";

}
