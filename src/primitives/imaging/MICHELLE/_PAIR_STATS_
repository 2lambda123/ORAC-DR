# -*-perl-*-

=head1 NAME

_PAIR_STATS_ -- Calculate the standard deviation for a differenced pair.

=head1 DESCRIPTION

This primitive calculates the standard deviation of a central section
of a differenced pair. It finds the standard deviation, then divides
that result by sqrt(2) and displays that result to the user. It then
places this value in the E<lt>NE<gt>_STDDEV Group header, where
E<lt>NE<gt> is the number of the pair in the group (so the first
pair's standard deviation is stored in the 1_STDDEV Group header).

=head1 PARAMETERS

=over 4

=item CENT_PIXELS = INTEGER (Given)

The dimensions of a box centered on the central pixel for which stats
will be calculated. [100]

=item CLIP = INTEGER (Given)

Clipping level for statistics. [0]

=back

=head1 NOTES

=over 4

=item *

This primitive will only calculate stats when the DIFFERENCE_PAIR
Frame header is true.

=back

=head1 AUTHORS

Brad Cavanagh (JAC) <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

if( $Frm->uhdr( "DIFFERENCE_PAIR" ) ) {

  my $cent_pixels = $_PAIR_STATS_{CENT_PIXELS} || 100;

  my $clip = $_PAIR_STATS_{CLIP};
  if( ! defined( $clip ) ) {
    $clip = 0;
  }

  my $in = $Frm->file;

  my $param = "ndf=$in(~$cent_pixels,~$cent_pixels)";
  if( $clip > 1e-10 ) {
    $param .= " clip=$clip";
  }

  $Mon{'kappa_mon'}->obeyw("stats", "$param");
  ( my $ORAC_STATUS, my $sigma ) = $Mon{'kappa_mon'}->get("stats", "sigma");

  $sigma /= sqrt( 2 );

  my $sigma_print = sprintf("%.3f", $sigma);

  orac_print "Standard deviation for $in is $sigma_print.\n";

  # What pair number are we?
  my $pair = int( ( $Grp->num + 1 ) / 2 );

  $Grp->uhdr("${pair}_STDDEV", $sigma);

  orac_print "\n";

}
