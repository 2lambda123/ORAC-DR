# -*-perl-*-

=head1 NAME

_INTERLEAVE_MICROSTEPS_ -- Interleave images taken in a microstep
pattern.

=head1 DESCRIPTION

This primitive takes images in a group taken in a microstep pattern
and interleaves them to form a higher-resolution image. These microsteps
are fractional pixel jitters that are done to compensate for large
pixel sizes.

=head1 NOTES

=over 4

=item *

This primitive is suitable for WFCAM.

=item *

Processing only occurs for object and sky frames.

=back

=head1 AUTHORS

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

use Starlink::HDSPACK qw/ copy_hdsobj /;

# This should only be performed on OBJECT frames.
if( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) =~ /OBJECT|SKY/ ) {

# Check to see if it's time to do the interleaving yet.
  if( $Frm->uhdr("INTERLEAVE_MICROSTEPS") == 1 ) {

# Set the output filename. Note that it's a group file.
    ( my $in, my $out ) = $Frm->inout("_int");

# Retrieve the number of microsteps.
    my $n_usteps = $Frm->uhdr("NUMBER_OF_MICROSTEPS");

    if( ! defined( $n_usteps ) ) {
      orac_throw "Number of microsteps undefined.\n";
    }

# Grab the last N frames in the group.
    my @interleave_frames = ($Grp->members)[(-$n_usteps)..-1];

    open my $fh, "> drizzle$$.lis" or die "could not open drizzle$$.lis: $!";

    for(0..$#interleave_frames) {
      my $i = $_;
      my $Frame = $interleave_frames[$i];

      my $in = $Frame->file;

# Add a new coordinate frame with the domain "MICRO" which reflects
# the correct alignment of the images. This also has the effect
# of setting MICRO as their new current coordinate frame.
      my $new_x_origin = $Frame->uhdr("NEW_X_ORIGIN");
      my $new_y_origin = $Frame->uhdr("NEW_Y_ORIGIN");
      orac_print "Setting origin of $in to $new_x_origin,$new_y_origin in preparation for interleaving.\n";
      my $params = "ndf=$in frame=pixel domain=micro maptype=shift shift=[$new_x_origin,$new_y_origin] accept";
      $Mon{'ndfpack_mon'}->obeyw( "wcsadd", "$params" );

      print $fh "$in\n";

    }

    close $fh;

# Run DRIZZLE.
    orac_print "Interleaving frames...";
    my $multi = int( sqrt( $Frm->uhdr( "NUMBER_OF_MICROSTEPS" ) ) );
    my $pixfrac = 1.0 / $multi;
    my $param = "in='^drizzle$$.lis' out=$out multi=$multi pixfrac=$pixfrac usevar=false";
    $Mon{'ccdpack_reg'}->obeyw( "drizzle", "$param" );
    orac_print "done.\n";

    # Erase the spuriously-created VARIANCE component.
    $Mon{'ndfpack_mon'}->obeyw( "erase", "object=$out.VARIANCE ok=true" );

    # Copy the header from the first interleave frame.
    my $ORAC_STATUS = ( copy_hdsobj( $interleave_frames[0]->file . ".MORE.FITS", "$out.MORE.FITS" ) ? ORAC__OK : ORAC__ERROR );

    orac_print "$out: Interleaved microsteps.\n";

    # Update the Frame object.
    $Frm->file( $out );

    # Set the end airmass to reflect the last frame included in the interleave.
    my $amendname = "ORAC_AIRMASS_END";
    my %keywords = $Frm->translate_hdr( $amendname );
    my @amendkey = keys( %keywords );
    my $amend = $interleave_frames[$#interleave_frames]->uhdr( $amendname );
    $Frm->uhdr( $amendname, $amend );
    my $value = $keywords{ $amendkey[0] };
    $param = "ndf=$out keyword=$amendkey[0] edit=update value=$value position=!";
    $Mon{'ndfpack_mon'}->obeyw( "fitsmod", "$param comment=\\\$C" );

    # Set the end UT time to reflect the last frame included in the interleave.
    my $utendname = "ORAC_UTEND";
    %keywords = $Frm->translate_hdr( $utendname );
    my @utendkey = keys( %keywords );
    my $utend = $interleave_frames[$#interleave_frames]->uhdr( $utendname );
    $Frm->uhdr( $utendname, $utend );
    $value = $keywords{ $utendkey[0] };
    $param = "ndf=$out keyword=$utendkey[0] edit=update value=$value position=!";
    $Mon{'ndfpack_mon'}->obeyw( "fitsmod", "$param comment=\\\$C" );

    # Display it.
    $Display->display_data( $Frm ) if ( defined( $Display ) );

    # Set the uhdr saying that this one is the result of interleaving.
    $Frm->uhdr( "INTERLEAVED", 1 );

    unlink "drizzle$$.lis";

  }

}

# Tidy output.
orac_print "\n";
