#+
# Name:
#    _DATA_UNITS_TO_ADU_
#
# Purpose:
#    Scales the SPEX values to ADU (DN) per frame for the current Frame.
#
# Language:
#    Perl5
#
# Description:
#    The SPEX data values are integrated ADU (DN in SPEX terminology)
#    scaled by the number of non-destructive reads and number of coadds.
#    This is contrary to UKIRT convention, where data are scaled per
#    integration, that recipes expect. 
#
#    This primitive divides the current SPEX Frame by this number of
#    reads scaling factor to get them into ADU per integration.
#
# Notes:
#    -  This primitive is only suitable for SPEX.
#    -  Details are taken from the instrument's Web page, viz.
#    http://irtfweb.ifa.hawaii.edu/Facility/spex/work/array_params/array_params.html.
#    The required factor should be in the DIVISOR frame header, but if
#    this is absent, a default of two is used.
#
# Output Data:
#    -  Scaled frame inheriting the current frame's name but with the
#    _adu suffix.    
#
# Tasks:
#    KAPPA: CDIV.
#
# Authors:
#    MJC: Malcolm J. Currie (Starlink)
#
# Copyright:
#    Copyright (C) 2001-2005 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Obtain the factor by which the values are scaled compared with UKIRT
# convention.  The data are in ADU times the number of non-destructive
# reads times the number of coadds
    my $nreads = ( defined ( $Frm->hdr( "DIVISOR" ) ) ? $Frm->hdr( "DIVISOR" ) : 2 );
    $nreads = 2 if $nreads < 1;

# Get the input and output file names.
    my ( $in, $out ) = $Frm->inout( "_adu" );

# Divide by the number of reads.
    $Mon{ "kappa_mon" }->obeyw( "cdiv", "in=$in scalar=$nreads out=$out" );

# Report the processing status.
    orac_print "$in to $out: Divided by the product of the numbers " .
               "of\n     reads and coadds ($nreads) to make the units " .
               "ADUs per exposure.\n";

# And update the Frm object.
    $Frm->file( $out );

# Keep the output tidy.
    orac_print "\n";

# Podule
# ======

=head1 NAME 

_DATA_UNITS_TO_ADU_ -- Scales the SPEX values to ADU (DN) per frame for the current Frame.

=head1 DESCRIPTION

The SPEX data values are integrated ADU (DN in SPEX terminology)
scaled by the number of non-destructive reads and number of coadds.
This is contrary to UKIRT convention, where data are scaled per
integration, that recipes expect. 

This primitive divides the current SPEX Frame by this number of
reads scaling factor to get them into ADU per integration.

=head1 NOTES

=over 4

=item *

This primitive is only suitable for SPEX.

=item *

Details are taken from the instrument's Web page, viz.
L<http://irtfweb.ifa.hawaii.edu/Facility/spex/work/array_params/array_params.html|http://irtfweb.ifa.hawaii.edu/Facility/spex/work/array_params/array_params.html>.
The required factor should be in the DIVISOR frame header, but if
this is absent, a default of two is used.

=back

=head1 OUTPUT DATA

=over 4

=item *

Scaled frame inheriting the current frame's name but with the _adu
suffix.

=back

=head1 TASKS

KAPPA: CDIV.

=head1 AUTHORS

Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 2003-2005 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
