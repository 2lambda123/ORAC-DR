#+
# Name:
#    _REMOVE_ELECTRONIC_GHOSTING_
#
# Purpose:
#    Corrects ISAAC SW data for electronic ghosts.
#
# Language:
#    Perl5
#
# Description:
#    This primitive corrects for electronic ghosts in the current
#    frame.  The ghosts consist "of an additional signal, which, on
#    one row, is proportional to the sum of the intensity along this
#    row and the the row 512 rows away."  This primitive allows the
#    ghosting to be along rows or columns (see argument GHOSTAXIS).
#
#    The primitive performs the following steps using temporary
#    intermediate files.
#       - forms a one-dimensional profile by collapsing along either
#       axis (depending on argument GHOSTAXIS).
#       - subtracts a clipped mean of the profile to form a new
#       profile of the bias variations, thereby allowing for the sharp
#       peaks in the profile corresponding to the image bottom and
#       centre;
#       - grows the bias variation profile to the dimensions of the
#       original frame and sets its origin to that of the original
#       frame; and
#       - subtracts bias variation image from the original frame.
#
# Arguments:
#    GHOSTAXIS = INTEGER (Given)
#       The axis along which to collapse the array.  Thus if the
#       ghosting varies along columns, this should be 1.  Likewise to
#       correct electronic ghosting variations along rows, set this to
#       2.  [1]
#
# Notes:
#    -  Processes all SW frames.  The wavelength regime is determined
#    from header HIERARCH.ESO.INS.MODE.  The LW ghosts are displaced
#    at multiples of 8, and are affected by redout speed, but the
#    data-reduction manual is vague, so LW cannot be corrected at
#    present.
#    -  The ghost-corrected image can be displayed.
#    -  The frame title is propagated.
#
# Output Data:
#    -  Frame corrected for electronic ghosting inheriting the input
#    frame's name but with the _eg suffix.

# Tasks:
#    KAPPA: COLLAPSE, NDFCOPY, NDFTRACE, MATHS, PASTE, PIXDUPE, RESHAPE,
#    SETORIGIN, SUB.

#  References: 
#    -  P. Amico et al., 2002, ISAAC Data Reduction Guide 1.5.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Selection
# =========
   my $mode = $Frm->hdr( "HIERARCH.ESO.INS.MODE" );
   if ( $mode =~ /SW/ ) {

# Arguments
# =========

# Obtain and validate ghosting axis.  It's not clear if this argument
# will be needed but it might be, perhaps for another instrument.
       my $ghostaxis = ( $_REMOVE_ELECTRONIC_GHOSTING_{GHOSTAXIS} || 1 );
       $ghostaxis = 1 unless ( $ghostaxis == 1 || $ghostaxis == 2 );

# Obtain the dimensions of the supplied frame.
       my $ndf = $Frm->file;
       $Mon{ "ndfpack_mon" }->obeyw( "ndftrace", "ndf=$ndf" );
       my ( $ORAC_STATUS, @dims ) = $Mon{ "ndfpack_mon" }->get( "ndftrace", "dims" );
       my $xdim = $dims[ 0 ];
       my $ydim = $dims[ 1 ];
              
# Create temporary files.
# =======================

# For the full profile.
       my $tmpprofile = new ORAC::TempFile;
       my $profile = $tmpprofile->file;

# For the lower profile.
       my $tmpprofile_l = new ORAC::TempFile;
       my $profile_l = $tmpprofile_l->file;

# For the upper profile.
       my $tmpprofile_u = new ORAC::TempFile;
       my $profile_u = $tmpprofile_u->file;

# For the ghost profile.
       my $tmpghost = new ORAC::TempFile;
       my $ghostprofile = $tmpghost->file;

# For the ghost profile with swapped halves.
       my $tmpswap = new ORAC::TempFile;
       my $swapprofile = $tmpswap->file;

# For the bias profile, reshaped to two dimensions.
       my $tmpprofile2d = new ORAC::TempFile;
       my $profile2d = $tmpprofile2d->file;

# For the ghosting profile expanded to an image.
       my $tmpimage = new ORAC::TempFile;
       my $ghostimage = $tmpimage->file;

# Form row/column profile
# ========================
       my ( $in, $out, $param );

# Should do this unless GHOSTAXIS=2 was requested, as at the time of
# writing only ghosting in the vertical direction are seen.
       $param = "in=$ndf out=$profile estimator=mean ";
       if ( $ghostaxis != 2 ) {

# Collapse the frame along rows using the mean.  This forms a map
# of the row structure, including the ghosting.
          $param .= "axis=1";

# Collapse the frame along columns using the mean.  This forms a map
# of the column structure.
       } elsif ( $ghostaxis == 2 ) {
          $param .= "axis=2";
       }

# Collapse the frame.
       $Mon{ "kappa_mon" }->obeyw( "collapse", "$param" );

# Form correlated profiles
# ========================

# The ghosting is the sum of the nth and 512+nth pixels in the profile.

# Make two copies of the profile.
       $Mon{ "ndfpack_mon" }->obeyw( "ndfcopy", "in=$profile out=$profile_l" );
       $Mon{ "ndfpack_mon" }->obeyw( "ndfcopy", "in=$profile out=$profile_u" );

# Set the pixel origins to ensure we match appropriate pixels to sum.
       $Mon{ "ndfpack_mon" }->obeyw( "setorigin", "ndf=$profile origin=1" );
       $Mon{ "ndfpack_mon" }->obeyw( "setorigin", "ndf=$profile_u origin=513" );
       $Mon{ "ndfpack_mon" }->obeyw( "setorigin", "ndf=$profile_l origin=-511" );

# Paste the two halves over the original profile confined to the
# bounds of the original profile.
       $param = "in=$profile p1=$profile_l p2=$profile_u out=$swapprofile";
       $Mon{ "kappa_mon" }->obeyw( "paste", "$param confine" );

# Add the swapped halves to the original profile, retaining the
# original bounds, and scale by the ghosting factor.
       $param = "ia=$profile ib=$swapprofile out=$ghostprofile";
       $Mon{ "kappa_mon" }->obeyw( "maths", "exp='1.35E-5*(IA+IB)' $param" );

# Subtract ghost profile from the original image.
# ==============================================

# Convert the ghost profile to two dimensions.
       if ( $ghostaxis != 2 ) {
          $param = "in=$ghostprofile out=$profile2d shape=[1,$ydim]";
       } elsif ( $ghostaxis == 2 ) {
          $param = "in=$ghostprofile out=$profile2d shape=[$xdim,1]";
       }
       $Mon{ "ndfpack_mon" }->obeyw( "reshape", "$param" );

# Duplicate along the rows restoring an image the size of the frame on
# input.
       $param = "in=$profile2d out=$ghostimage expand=[$xdim,1]";
       $Mon{ "kappa_mon" }->obeyw( "pixdupe", "$param" );

# Set the origin to match that of the original frame.
       $param = "ndf=$ghostimage like=$ndf";
       $Mon{ "ndfpack_mon" }->obeyw( "setorigin", "$param" );

# Subtract the two-dimensional row or column pattern from the original
# frame.
       ( $in, $out ) = $Frm->inout( "_eg" );
       $param = "in1=$ndf in2=$ghostimage out=$out";
       $Mon{ "kappa_mon" }->obeyw( "sub", "$param" );

# Report progress.
       orac_print "Removed electronic ghosting in $ndf to form $out\n";

# Now update the output filename in the Frame object.
       $Frm->file( $out );

# Display the image.
       _DISPLAY_FRAME_IMAGE_

       orac_print "\n";
    }

# Podule
# ======

=head1 NAME

_REMOVE_ELECTRONIC_GHOSTING_ -- Corrects ISAAC SW data for electronic ghosts.

=head1 DESCRIPTION

This primitive corrects for electronic ghosts in the current
frame.  The ghosts consist "of an additional signal, which, on
one row, is proportional to the sum of the intensity along this
row and the the row 512 rows away."  This primitive allows the
ghosting to be along rows or columns (see argument GHOSTAXIS).

The primitive performs the following steps using temporary
intermediate files.  It:

=over 4

=item *

forms a one-dimensional profile by collapsing along either
axis (depending on argument GHOSTAXIS).

=item *

subtracts a clipped mean of the profile to form a new
profile of the bias variations, thereby allowing for the sharp
peaks in the profile corresponding to the image bottom and
centre;

=item *

grows the bias variation profile to the dimensions of the
original frame and sets its origin to that of the original
frame; and

=item *

subtracts bias variation image from the original frame.

=back

=head1 ARGUMENTS

=over 4

=item GHOSTAXIS = INTEGER (Given)

The axis along which to collapse the array.  Thus if the
ghosting varies along columns, this should be 1.  Likewise to
correct electronic ghosting variations along rows, set this to
2.  [1]

=back

=head1 NOTES

=over 4

=item *

Processes all SW frames.  The wavelength regime is determined from
header HIERARCH.ESO.INS.MODE.  The LW ghosts are displaced at
multiples of 8, and are affected by redout speed, but the
data-reduction manual is vague, so LW cannot be corrected at present.

=item *

The ghost-corrected image can be displayed.

=item *

The frame title is propagated.

=back

=head1 OUTPUT DATA

=over 4

=item *

Frame corrected for electronic ghosting inheriting the input
frame's name but with the _eg suffix.

=back

=head1 TASKS

KAPPA: COLLAPSE, NDFCOPY, NDFTRACE, MATHS, PASTE, PIXDUPE, RESHAPE, SETORIGIN, SUB.

=head1 REFERENCES

=over 4

=item *

P. Amico et al., 2002, ISAAC Data Reduction Guide 1.5.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
