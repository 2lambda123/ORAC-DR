#+
# Name:
#    _THRESHOLD_FRAME_
#
# Purpose:
#    Thresholds data so that pixels above saturation get bad staus.
#
# Language:
#    Perl5
#
# Description:
#    Thresholds data so that pixels above saturation get bad staus.
#
# Notes:
#    -  Low threshold of -1000 should never be reached.
#    -  High threshold of 40000 for IRIS2.
#
# Output Data:
#    -  Frame inheriting the current frame's name but with the _cl suffix.
#
# Tasks:
#    KAPPA: THRESH.
#
# Authors:
#    CGT: Chris Tinney (AAO) 
#
# Copyright:
#    Copyright (C) 2004 Anglo-Australian Telescope Board
#    Council.  All Rights Reserved.
#
#-
my $thrlo = -1000;
my $thrhi = 40000;

my $mode = $Frm->hdr( "METHOD" );
if ( $mode =~ /IRIS_DRM/ ) {

# Generate list of input and output filenames.
    my ( $in, $out ) = $Frm->inout( "_cl" );

# Threshold the frame so that bad data (ie data outside the range that
# can be linearised), gets flagged as blank.
    $Mon{ "kappa_mon" }->obeyw( "thresh", "out=$out in=$in newlo='Bad' newhi='Bad' thrhi=$thrhi thrlo=$thrlo title=!" );

# Report the processing status.
    orac_print "Frame $in thresholded ($thrlo -> $thrhi) to form $out.\n";

# Now update the output filename in the Frame object.
    $Frm->file( $out );

} else {
#
# Issue a warning if this is MRM data, but proceed on.
#
   orac_print "WARNING: METHOD=$mode which is unusual for IRIS2 imaging data\n";
   orac_print "WARNING: No thresholding of $mode data performed.\n";
   
}
#orac_print "\n";

# Podule
# ======

=head1 NAME

_CORRECT_NONLINEARITY_PRE_POST_ -- Corrects the post-pre differenced raw data for detector non-linearity.

=head1 DESCRIPTION

This primitive corrects the raw data frame for non-linearity
applying a low-order polynomial fit for IRIS2. The correction 
is applied to the raw data.

 
=head1 NOTES

=over 4

=item *

This primitive is suitable for IRIS2.

=back

=head1 OUTPUT DATA

=over 4

=item *

Linearity-corrected frame inheriting the current frame's name
but with the _nl suffix.

=item *

Linear counts (L) are given by the expression
L = M * (1.0 - 1.15334e-11*M*M + 4.126468e-16*M*M*M), 
where M are the measured ADU counts (valid for M=0-50000)

=back

=head1 TASKS

KAPPA: MATHS.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC, Starlink)
CGT: Chris Tinney (AAO) - modified to use IRIS2 coefficients

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
