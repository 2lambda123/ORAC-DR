#+
# Name:
#    _GET_PLATE_SCALE_
#
# Purpose:
#    Finds the pixel scales measured in arcseconds per pixel for the
#    current Frame.
#
# Language:
#    Perl5
#
# Description:
#    This primitive obtains the pixel increments from the headers of the
#    current frame, and if necessary, converts them to arcseconds per
#    pixel.  This allows ORAC_RA_SCALE and ORAC_DEC_SCALE internal
#    headers to be used either in a World Co-ordinate System or be
#    combined to derive the pixel scale.  The scales are returned
#    in three arguments.
#
# Arguments:
#    DECSCALE = REAL (Returned)
#       The increment along the declination axis of the current 
#       frame measured in arcseconds per pixel.  This may be negative.
#    PLATESCALE = REAL (Returned)
#       The geometric-mean plate scale, i.e. the average of the absolute
#       values of DECSCALE and RASCALE.
#    RASCALE = REAL (Returned)
#       The increment along the right-ascension axis of the current 
#       frame measured in arcseconds per pixel.  This is negative.
#
# Notes:
#    -  This primitive is suitable only for IRCAM.
#    -  Processing only occurs for object and sky frames.
#    -  The platescale internal headers are ORAC_RA_SCALE and
#    ORAC_DEC_SCALE.  Should a header be undefined first the PIXELSIZ
#    header is tried instead, and failing that a default value is
#    substituted; along right ascension and declination respectively
#    these are -0.286, 0.286 for IRCAM3, and -0.08144, 0.08144 for
#    IRCAM/TUFTI.  The primitive ensures that RASCALE is always
#    negative, and updates ORAC_RA_SCALE if the sign is flipped.
#    -  Header CTYPE1 set to 'RA---TAN' indicates the presence
#    of the AIPS-convention WCS, and the values are scaled from
#    degree/pixel.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2002 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# This should only be performed on OBJECT frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "OBJECT" ||
         $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "SKY" ) {

# Obtain the plate scales for the instrument from the headers.
       my $ra_pixelscale = $Frm->uhdr( "ORAC_RA_SCALE" );
       my $dec_pixelscale = $Frm->uhdr( "ORAC_DEC_SCALE" );
 
# If not defined (older data), use the PIXELSIZ header.  It's acceptable
# to do this because this primitive is IRCAM specific.
       $ra_pixelscale = defined( $ra_pixelscale ) ? $ra_pixelscale : $Frm->hdr( "PIXELSIZ" );
       $dec_pixelscale = defined( $dec_pixelscale ) ? $dec_pixelscale : $Frm->hdr( "PIXELSIZ" );

# Find the observation date, defaulting to the TUFTI scale.
# If the date is missing assume that it's new data, because
# new data is more likely, not that missing headers have been
# more prevalent since the switch to TUFTI.
       my $utdate = $Frm->uhdr( "ORAC_UTDATE" );
       if ( defined( $utdate ) ) {
          $utdate =~ s/-//;
       } else {
          $utdate = 20010101;
       }

# Validate the right ascension scale in case the reserve header is
# also absent.
       if ( defined( $ra_pixelscale ) ) {

# Allow for D notation, which is not recognised by Perl, so that
# supplied strings are valid numbers.
          $ra_pixelscale =~ s/D/E/;

# Correct the RA scale.  The RA scale originates from the erroneous
# positive CDELT1 or PIXELSIZ for pixel co-ordinates measured in
# arcseconds in the historic data.  Reverse the sign to give the correct
# increment per pixel.
          if ( $ra_pixelscale > 0.0 ) {
             $ra_pixelscale *= -1.0;
             $Frm->uhdr( "ORAC_RA_SCALE", $ra_pixelscale );
          }

# Supply a default value.  Note the change of sign as r.a. decreases
# with pixel index.
       } elsif ( $utdate > 19990901 ) {
          $ra_pixelscale = -0.08144;
       } else {
          $ra_pixelscale = -0.286;
       }

# Validate the declination scale.
       if ( defined( $dec_pixelscale ) ) {

# Allow for D notation, which is not recognised by Perl, so that
# supplied strings are valid numbers.
          $dec_pixelscale =~ s/D/E/;

# Correct the declination scale.  Somewhere something can reverse the
# sign.  So ensure that value is positive.  The scale originates from
# the positive CDELT2 or PIXELSIZ for pixel co-ordinates measured in
# arcseconds in the historic data, but bizarrely it can become negative.
          if ( $dec_pixelscale < 0.0 ) {
             $dec_pixelscale *= -1.0;
             $Frm->uhdr( "ORAC_DEC_SCALE", $dec_pixelscale );
          }

# Supply a default value.
       } elsif ( $utdate > 19990901 ) {
          $dec_pixelscale = 0.08144;
       } else {
          $dec_pixelscale = 0.286;
       }

# The CDELTn headers are either part of a WCS in expressed in the
# AIPS-convention, or the values we require.  Angles for the former
# are measured in degrees.  The sign of the scale may be negative,
# but the platescale must be positive.  For IRCAM if keywords CDELTn
# are set they're not used unless the pixelscale keyword is absent.
       if ( defined( $Frm->hdr( "CTYPE1" ) ) ) {
          if ( $Frm->hdr( "CTYPE1" ) eq "RA---TAN" &&
               abs( $ra_pixelscale ) < 1.0E-3 ) {
             $ra_pixelscale = $ra_pixelscale * 3600.0;
             $dec_pixelscale = $dec_pixelscale * 3600.0;
          }
       }

# Derive the geometric-mean platescale.
       my $platescale = sqrt( abs( $ra_pixelscale * $dec_pixelscale ) );
                            
# Set the returned arguments.
       $_GET_PLATE_SCALE_{RASCALE} = $ra_pixelscale;
       $_GET_PLATE_SCALE_{DECSCALE} = $dec_pixelscale;
       $_GET_PLATE_SCALE_{PLATESCALE} = $platescale;
    }

# Podule
# ======

=head1 NAME

_GET_PLATE_SCALE_ -- Finds the pixel scales measured in arcseconds per pixel for the current Frame.

=head1 DESCRIPTION

This primitive obtains the pixel increments from the headers of the
current frame, and if necessary, converts them to arcseconds per
pixel.  This allows ORAC_RA_SCALE and ORAC_DEC_SCALE internal
headers to be used either in a World Co-ordinate System or be
combined to derive the pixel scale.  The scales are returned
in three arguments.

=head1 ARGUMENTS

=over 4

=item DECSCALE = REAL (Returned)

The increment along the declination axis of the current 
frame measured in arcseconds per pixel.  This may be negative.

=item PLATESCALE = REAL (Returned)

The geometric-mean plate scale, i.e. the average of the absolute values
of DECSCALE and RASCALE.

=item RASCALE = REAL (Returned)

The increment along the right-ascension axis of the current 
frame measured in arcseconds per pixel.  This is negative.
=back

=head1 NOTES

=over 4

=item *

This primitive is suitable only for IRCAM.

=item 4

Processing only occurs for object and sky frames.

=item *

The platescale internal headers are ORAC_RA_SCALE and
ORAC_DEC_SCALE.  Should a header be undefined first the PIXELSIZ
header is tried instead, and failing that a default value is
substituted; along right ascension and declination respectively
these are -0.286, 0.286 for IRCAM3, and -0.08144, 0.08144 for
IRCAM/TUFTI.  The primitive ensures that RASCALE is always
negative. and updates ORAC_RA_SCALE if the sign is flipped.

=item *

Header CTYPE1 set to 'RA---TAN' indicates the presence
of the AIPS-convention WCS, and the values are scaled from
degree/pixel.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2002 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
