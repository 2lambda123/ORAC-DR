#+
# Name:
#    _MASK_QUADRANT_
#
# Purpose:
#    Masks a quadrant of a frame.
#
# Language:
#    Perl5
#
# Description:
#    This primitive masks a quadrant of the current frame.  The
#    chosen quadrant depends on the sense of the telescope offsets.
#    It reports a successful operation, the quadrant masked, and the
#    frames concerned.
#
# Notes:
#    -  This primitive is suitable for UFTI, IRCAM, and Michelle
#    in imaging mode.
#    -  Processing only occurs for object frames.
#    -  The masked image can be displayed.
#    -  The frame title is "X is quadrant masked", where X specifies
#    the quadrant.
#    -  It uses the four ARD files produced by primitive
#    _DEFINE_QUADRANT_MASKS.
#
# Output Data:
#    -  Quadrant-masked frame inheriting the frame's name but with the
#    _qm suffix.
#
# Tasks:
#    KAPPA: ARDMASK.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2001 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Test whether or not this is an object frame.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "OBJECT" ) {

# Determine the telescope offsets.  Here positive offset corresponds
# to the west and south (right and bottom) quadrant.
       my ( $maskfile, $quad );
       my $right = $Frm->uhdr( "ORAC_RA_TELESCOPE_OFFSET" );
       my $bottom = $Frm->uhdr( "ORAC_DEC_TELESCOPE_OFFSET" );

# Determine which mask to use from the telescope offsets.  The masks
# are stored in ARD files.
       if ( $right >= 0 && $bottom >= 0 ) {
          $maskfile = "ard_quad_br.dat";
          $quad = "Bottom-right";

       } elsif ( $right >= 0 && $bottom < 0 ) {
          $maskfile = "ard_quad_tr.dat";
          $quad = "Top-right";

       } elsif ( $right < 0 && $bottom < 0 ) {
          $maskfile = "ard_quad_tl.dat";
          $quad = "Top-left";

       } elsif ( $right < 0 && $bottom >= 0 ) {
          $maskfile = "ard_quad_bl.dat";
          $quad = "Bottom-left";
       }

# Generate the input and output filenames.
       ( my $in, my $out ) = $Frm->inout( "_qm" );

# Specify the parameters.
       my $param1 = "in=$in out=$out title=\'$quad quadrant masked\'";
       my $param2 = "ardfile=$maskfile";

# Mask the quadrant.  Sets the masked quadrant to bad values.
       $Mon{ "kappa_mon" }->obeyw( "ardmask", "$param1 $param2" );

# Report the processing.
       orac_print "$in to $out: $quad quadrant masked\n\n";

# Record the new file name in the frame object.
       $Frm->file( $out );                     # obligatory update step

# Display the image.
       _DISPLAY_FRAME_IMAGE_

    }

# Podule
# ======

=head1 NAME

_MASK_QUADRANT_ -- Masks a quadrant of a frame.

=head1 DESCRIPTION

This primitive masks a quadrant of the current frame.  The
chosen quadrant depends on the sense of the telescope offsets.
It reports a successful operation, the quadrant masked, and the
frames concerned.

=head1 NOTES

=over 4

=item *

This primitive is suitable for UFTI, IRCAM, and Michelle in imaging mode.

=item *

Processing only occurs for object frames.

=item *

The masked image can be displayed.

=item *

The frame title is "X is quadrant masked", where X specifies the quadrant.

=item *

It uses the four ARD files produced by primitive
L<_DEFINE_QUADRANT_MASKS_|_DEFINE_QUADRANT_MASKS_>.

=back

=head1 OUTPUT DATA

=over 4

=item *

Quadrant-masked frame inheriting the frame's name but with the _qm suffix.

=back

=head1 TASKS

KAPPA: ARDMASK.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
