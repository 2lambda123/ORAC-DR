#+
# Name:
#    _CREATE_RAW_FRAME_
#
# Purpose:
#    Creates a raw frame in ORAC_DATA_OUT.
#
# Language:
#    Perl5
#
# Description:
#    This primitive is null.  It's needed for the generic
#    _IMAGING_HELLO_.
#
#  Notes:
#    -  This primitive is suitable for UFTI.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2002 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

my $nfiles = $Frm->nfiles;
# If possible, make a single NDF
if ( $nfiles == 1 ) {

  # A single integration file. Convert to an NDF file
  my ($in, $out) = $Frm->inout("_mraw");
  $Mon{"ndfpack_mon"}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );

  # Modify the frame object, to reflect that we now have a single NDF,
  # using the files (plural) method
  $Frm->files($out);
  $Frm->mergehdr;

  orac_print "$in to $out: Single NDF created for 1x1 sampled, single integration data\n";

  # We only attempt to display _raw frames if they're single NDFs.
  # Need to think about whether this is desirable (PH)
  $Display->display_data( $Frm ) if ( defined $Display );

} else {

  # A multiple integration file. Copy all the components
  foreach my $i (1 .. $nfiles) {

    (my $in, my $out) = $Frm->inout("_mraw", $i);
    $Mon{"ndfpack_mon"}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );
    orac_print "$in to $out: Copied NDF component\n";

    # Update the frame object
    $Frm->file($i, $out);
  }
}


# Podule
# ======

=head1 NAME

_CREATE_RAW_FRAME_ -- Creates a raw frame in ORAC_DATA_OUT.

=head1 DESCRIPTION

This primitive is null.  It's needed for the generic
L<_IMAGING_HELLO_|_IMAGING_HELLO_>.

=head1 NOTES

=over 4

=item *

This primitive is suitable for UFTI.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2002 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
