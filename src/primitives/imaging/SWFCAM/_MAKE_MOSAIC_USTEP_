# -*-perl-*-

# Obtain the interpolation method.
my $intmethod = ( $_MAKE_MOSAIC_USTEP_{INT_METHOD} || "linint" );

# Determine whether or not to fill bad pixels.
my $fillbad = $_MAKE_MOSAIC_USTEP_{FILLBAD};
$fillbad = defined( $fillbad ) ? $fillbad : 1;

# Obtain the combination method.
my $method = ( $_MAKE_MOSAIC_USTEP_{METHOD} || "mean" );

# Determine whether or not to resample.
my $resample = $_MAKE_MOSAIC_USTEP_{RESAMPLE};
$resample = defined( $resample ) ? $resample : 0;

# Determine whether or not to trim the output mosaic.
my $trim = $_MAKE_MOSAIC_USTEP_{TRIM};
$trim = defined( $trim ) ? $trim : 0;

# Only proceed forth if you have the Sacred Chalice of Mosaick.
if( $Frm->uhdr( "MAKE_MOSAIC" ) ) {

  my $subGrp;
# Get a list of the group members so far, and only
# use those that have the 'INTERLEAVED' uhdr set to 1, but only
# if the ORAC_NUMBER_OF_MICROSTEP_POSITIONS uhdr is not 1.
  if( $Frm->uhdr( "ORAC_NUMBER_OF_MICROSTEP_POSITIONS" ) == 1 ) {
    $subGrp = $Grp;
  } else {
    $subGrp = $Grp->subgrp(INTERLEAVED => 1);
  }
  $subGrp->file( $Grp->file );

# We need to fake out ORAC-DR by creating a new $Grp, but we don't
# want to trounce the proper one, so wrap this in a block and create
# a new one.
  {
    my $Grp = $subGrp;

# Make the mosaic.
    _MAKE_MOSAIC_ INT_METHOD=$intmethod FILLBAD=$fillbad RESAMPLE=$resample TRIM=$trim METHOD=$method OPTOV=3 ZERO=0

# Create a point-source catalogue.
#    _CREATE_IMAGE_CATALOGUE_

# Propagate the modified headers back to the original filter group.
    %{ $subGrp->hdr } = %{ $Grp->hdr };
    %{ $subGrp->uhdr } = %{ $Grp->uhdr };
  }

}

