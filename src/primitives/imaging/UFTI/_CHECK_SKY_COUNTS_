# -*-perl-*-

=head1 NAME

_CHECK_SKY_COUNTS_ - Examine the sky counts and throw a warning if they're
too low.

=head1 DESCRIPTION

This primitive takes statistics on the current frame and throws a warning
if the clipped median is below a certain threshhold that depends on the
filter.

For the J98 filter, the threshold is 0.4 * 7 * exposure time. For the H98
filter, the threshhold is 0.4 * 40 * exposure time. For the K98 filter,
the threshhold is 0.6 * 30 * exposure time. Other filters are not
checked.

=head1 ARGUMENT

=over 4

=item CLIP = STRING (Given)

The clip levels used to determine the median. This parameter
should be of the form N,N, where clip levels are integers separated
by commas. [2,2,3]

=back

=head1 NOTES

=over 4

=item *

This primitive is only suitable for UFTI.

=item *

Processing only occurs for object frames.

=back

=head1 AUTHORS

Brad Cavanagh (JAC) <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Get clipping levels and set a default.
my $cliplevels = $_CHECK_SKY_COUNTS_{CLIP} || "2,2,3";
if( $cliplevels !~ /[\d,]/ ) {
  $cliplevels = "2,2,3";
}

# Set up the thresholds.
my %threshold = ( 'J98' => 2.8,  # 0.4 * 7
                  'H98' => 16,   # 0.4 * 40
                  'K98' => 18,   # 0.6 * 30
                );

# Obtain filter and exposure time.
my $filter = $Frm->uhdr("ORAC_FILTER");
my $exp_t = $Frm->uhdr("ORAC_EXPOSURE_TIME");

( my $in, my $out ) = $Frm->inout("_junk");

# Only do this for OBJECT or SKY frames.
if( $Frm->uhdr("ORAC_OBSERVATION_TYPE") eq "OBJECT" ||
    $Frm->uhdr("ORAC_OBSERVATION_TYPE") eq "SKY" ) {

# Run the clipped stats.
  $Mon{'kappa_mon'}->obeyw("stats", "ndf=$in clip=[$cliplevels]" );
  ( my $ORAC_STATUS, my $mean ) = $Mon{'kappa_mon'}->get("stats", "mean");

  my $p_mean = sprintf("%0.2f", $mean);

  if( exists( $threshold{$filter} ) ) {

    if( $mean < ( $threshold{$filter} * $exp_t ) ) {

      orac_warn "Mean sky counts in $in are $p_mean, which is below the threshold of " . ( $threshold{$filter} * $exp_t ) . ". Possible cause is closed shutter.\n";
    }
  }
}
