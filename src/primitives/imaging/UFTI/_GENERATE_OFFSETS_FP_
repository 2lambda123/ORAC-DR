#+
# Name:
#    _GENERATE_OFFSETS_FP_
#
# Purpose:
#    Finds the offsets between the wavelength mosaics in an FP_JITTER recipe.
#
# Description:
#    This primitive finds the pixel offsets between the spatially
#    jittered wavelength mosaics for an FP_JITTER recipe.  The primitive
#    itself forms new groups to be registered by other primitives.  For
#    the first cycle of the recipe, the primitive forms a group of the
#    current recipe cycle's wavelength mosaics, accessed by the internal
#    group header SPATIAL_GROUP.  On subsequent cycles a new group is
#    formed, comprising the integrated mosaic followed by the difference
#    pairs in the current cycle, so that there is a common registration
#    and that spatial mosaics can be co-added.
#
#    When argument TELEOFF is true, _TELE_OFFSETS_ is invoked and
#    the derived offsets are used to register with a shift of origin;
#    otherwise _GENERATE_OFFSETS_ is the work horse.
#
# Language:
#    Perl5
#
# Arguments:
#    COMPLETE = REAL (Given)
#       Completeness of matched features for registration between two
#       frames to be accepted.  It must be in the range 0.2 to 1.0. [0.4]
#    MINPIX = INTEGER (Given)
#       Minimum number of contiguous pixels above the PERCENTILE level
#       to be considered a registration feature.  It must be at least 6.
#       [9]
#    PERCENTILE = REAL (Given)
#       Percentile threshold for locating objects to register frames.
#       It must be in the range 75 to 99.9.  [98]
#    TELEOFF = LOGICAL (Given)
#       If true (1), it will just use the telescope offsets to register.
#       If false (0), it will attempt automatic registration.  [0]
#
# Notes:
#    -  This primitive is suitable for UFTI, IRCAM, and Michelle
#    in imaging mode.
#    -  Processing only occurs for object and sky frames, and when
#    steering header MAKE_MOSAIC is true.
#    -  The steering header CYCLE_NUMBER specifies the cycle number.
#    -  The _GENERATE_OFFSETS_ argument CENTRAL_SOURCE is TRUE.
#    Thus matching the centroids of a central source is attempted if
#    automatic registration fails.
#    -  The frames registered using telescope offsets are reported.
#
# Tasks:
#    CCDPACK: REGISTER; KAPPA: WCSFRAME.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2001 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Arguments
# =========

# Determine whether or not telescope offsets should only be used.
    my $usetele = $_GENERATE_OFFSETS_FP_{TELEOFF};
    $usetele = defined( $usetele ) ? $usetele : 0;

# Obtain the parameters for the detection.
    my ( $complete, $minpix, $percentile );
    if ( ! $usetele ) {
       $percentile = ( $_GENERATE_OFFSETS_FP_{PERCENTILE} || 98 );
       $minpix = ( $_GENERATE_OFFSETS_FP_{MINPIX} || 9 );
       $complete = ( $_GENERATE_OFFSETS_FP_{COMPLETE} || 0.4 );
    }

# Selection
# =========

# This should only be performed on OBJECT frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "OBJECT" ||
         $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "SKY" ) {

# Test whether or not it is time to make a spatial mosaic.
       my $makemos = $Frm->uhdr( "MAKE_SPATIAL_MOSAIC" );
       if ( $makemos ) {

# Make a local $Grp containing just the wavelength mosaics.
          {
             my $Grp = $Grp->uhdr( "SPATIAL_GROUP" );

# Obtain the cycle number.  Default to zero if undefined, so that recipes
# which do not support this feature will continue to work.
             my $cycleno = $Frm->uhdr( "SPATIAL_CYCLE_NUMBER" );
             $cycleno = defined( $cycleno ) ? $cycleno : 0;

# Select those members in the current cycle.
             my $cycleGrp = $Grp->subgrp( SPATIAL_CYCLE_NUMBER => $cycleno );

# Form the group to process.
# ==========================

# For the first cycle of a single cycle mosaic, make a local $Grp
# containing just the current cycle.  Note the { to start a new context.
             my $tempGrp;
             if ( $cycleno == 0 ) {
                $tempGrp = $cycleGrp;

# On later cycles a mosaic file should exist, and we shall to register
# with that as the reference frame.  So place the file into a temporary
# frame pushed onto a temporary $Grp-like group.  Then append the members
# of the subgroup.
             } else {
                my $tempFrm = new $Frm( $Grp->file );
                $tempGrp = new $Grp;
                $tempGrp->push( $tempFrm );
                $tempGrp->push( $cycleGrp->members );
             }

# Telescope offsets
# =================
             if ( $usetele ) {

# Make a local $Grp.
                my $Grp = $tempGrp;

# Use telescope offsets from the headers to register the frames.
                _GENERATE_TELE_OFFSETS_ MOVING_TARGET=0

             } else {

# Generate the offsets
# ====================

# Make a local $Grp.
                my $Grp = $tempGrp;

# Call the generic primitive which does most of the work.  Use central
# source as a backup.
                _GENERATE_OFFSETS_ PERCENTILE=$percentile MINPIX=$minpix COMPLETE=$complete CENTRAL_SOURCE=TRUE
             }

# End of scope of local $Grp aka $diffGrp.
          }
       }
    }

# Podule
# ======

=head1 NAME

_GENERATE_OFFSETS_FP_ -- Finds the offsets between the wavelength mosaics in an FP_JITTER recipe.

=head1 DESCRIPTION

This primitive finds the pixel offsets between the spatially
jittered wavelength mosaics for an FP_JITTER recipe.  The primitive
itself forms new groups to be registered by other primitives.  For
the first cycle of the recipe, the primitive forms a group of the
current recipe cycle's wavelength mosaics, accessed by the internal
group header SPATIAL_GROUP.  On subsequent cycles a new group is
formed, comprising the integrated mosaic followed by the difference
pairs in the current cycle, so that there is a common registration
and that spatial mosaics can be co-added.

When argument TELEOFF is true, L<_TELE_OFFSETS_|_TELE_OFFSETS_> is
invoked and the derived offsets are used to register with a shift of
origin; otherwise L<_GENERATE_OFFSETS_|_GENERATE_OFFSETS_> is the work
horse.

=head1 ARGUMENTS

=over 4

=item COMPLETE = REAL (Given)

Completeness of matched features for registration between two
frames to be accepted.  It must be in the range 0.2 to 1.0. [0.4]

=item MINPIX = INTEGER (Given)

Minimum number of contiguous pixels above the PERCENTILE level
to be considered a registration feature.  It must be at least 6.
[9]

=item PERCENTILE = REAL (Given)

Percentile threshold for locating objects to register frames.
It must be in the range 75 to 99.9.  [98]

=item TELEOFF = LOGICAL (Given)

If true (1), it will just use the telescope offsets to register.
If false (0), it will attempt automatic registration.  [0]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for UFTI, IRCAM, and Michelle in imaging mode.

=item *

Processing only occurs for object and sky frames, and when
steering header MAKE_MOSAIC is true.

=item *

The steering header CYCLE_NUMBER specifies the cycle number.

=item *

The _GENERATE_OFFSETS_ argument CENTRAL_SOURCE is TRUE.
Thus matching the centroids of a central source is attempted if
automatic registration fails.

=item *

The frames registered using telescope offsets are reported.

=back

=head1 TASKS

CCDPACK: REGISTER; KAPPA: WCSFRAME.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
