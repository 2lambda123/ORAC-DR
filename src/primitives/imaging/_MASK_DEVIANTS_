#+
# Name:
#    _MASK_DEVIANTS_
#
# Purpose:
#    Masks pixels which are deviant from the neighbourhood.
#
# Language:
#    Perl5
#
# Description:
#    This primitive applies a filter to the current frame, which masks
#    deviant pixels to create a masked frame.  The supplied frame is
#    block smoothed with a 15x15-pixel kernel.  A pixel which deviates
#    fmean rom its local mean by more +/-3 standard deviations about the
#    is replaced by a bad pixel in the output array.  A new standard
#    deviation is derived and the process is repeated twice.  The bad
#    pixels are assigned the Starlink bad (`magic') value.  The
#    primitive reports a successful masking and the frames concerned.
#
# Arguments:
#    CLIP = STRING (Given)
#       Set the clipping levels and number of clipping iterations to
#       perform. This must be in the format [level,level2,...], where
#       multiple clipping levels are contained in square brackets.
#       ["[3,3,3]"]
#
# Notes:
#    -  This primitive is suitable for UFTI, IRCAM, and Michelle
#    in imaging mode.
#    -  The masked image can be displayed.
#    -  The frame title is "Deviant pixels masked".
#
# Output Data:
#    -  Deviant-masked frame inheriting the current frame's name
#    but with the _md suffix.
#
# Tasks:
#    KAPPA: FFCLEAN.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2001 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

   my $clip = ( defined( $_MASK_DEVIANTS_{CLIP} ) ? $_MASK_DEVIANTS_{CLIP} : '[3,3,3]' );

#  Specify the parameters.
    my $param2 = "clip=$clip title=\'Deviant pixels masked\'";
    my $boxsize = ( $_MASK_DEVIANTS_{BOXSIZE} || 15 );
    my $user = "box=$boxsize";

# Generate the input and output filenames.
    ( my $in, my $out ) = $Frm->inout( "_md" );

# Debias the frame using a 0 bias contribution.  There is no bad-pixel
# masking.  Do not create a variance array.
    $Mon{ "kappa_mon" }->obeyw( "ffclean", "in=$in out=$out $param2 $user" );

# Report the processing.
    orac_print "$in to $out: Deviant pixels masked\n\n";

# Record the new file name in the frame object.
    $Frm->file( $out );                      # obligatory update step

# Display the image.
    _DISPLAY_FRAME_IMAGE_

# Podule
# ======

=head1 NAME

_MASK_DEVIANTS_ -- Masks pixels which are deviant from the neighbourhood.

=head1 DESCRIPTION

This primitive applies a filter to the current frame, which masks
deviant pixels to create a masked frame.  The supplied frame is
block smoothed with a 15x15-pixel kernel.  A pixel which deviates
fmean rom its local mean by more +/-3 standard deviations about the
is replaced by a bad pixel in the output array.  A new standard
deviation is derived and the process is repeated twice.  The bad
pixels are assigned the Starlink bad (`magic') value.  The
primitive reports a successful masking and the frames concerned.

=head1 ARGUMENTS

=over 4

=item CLIP = STRING (Given)

Set the clipping levels and number of clipping iterations to
perform. This must be in the format [level,level2,...], where multiple
clipping levels are contained in square brackets. ["[3,3,3]"]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for UFTI, IRCAM, and Michelle in imaging mode.

=item *

The masked image can be displayed.

=item *

The frame title is "Deviant pixels masked".

=back

=head1 OUTPUT DATA

=over 4

=item *

Deviant-masked frame inheriting the current frame's name
but with the _md suffix.

=back

=head1 TASKS

KAPPA: FFCLEAN.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
