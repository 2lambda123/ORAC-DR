#+
# Name:
#    _MAKE_DOME_FLAT_
#
# Purpose:
#    Makes calibration dome flats from the current group of frames.
#
# Language:
#    Perl5
#
# Description:
#    This primitive makes dome flats from the current group, one
#    for each combination of filter.  This routine selects the group
#    for the current recipe cycle, and excludes any preliminary test
#    frames used to set the intensity.   It effectively finds the
#    normalised the lamp-on minus the lamp-off frames.
#
# Notes:
#    -  This primitive is suitable for the SOFI ESO infrared cameras in
#    imaging mode using the SOFI_img_cal_Dome_Flats template.
#    -  Processing only occurs for dome-type frames, and when the
#    steering header MAKE_FLAT is true.
#    -  The main processing steps as as follows.
#    -  The four flat frames are averaged in pairs of like
#    attributes.  The attributes being the lamp on or off.
#    -  The average off lamp frame is subtracted from its lamp-on
#    counterpart, and the result normalised to a mean of 1 to create
#    the flat.
#    -  The flat is filed with the calibration system and displayed.
#
# Tasks:
#    KAPPA: CDIV, MATHS, STATS, SUB.
#
# Output Data:
#    The flat fields.  Each is called is "flat_<filter>_<groupnumber>" for
#    the first cycle, and "flat_<filter>_<groupnumber>_c<cyclenumber>"
#    for subsequent cycles, where <groupnumber> is the frame number of
#    the group, <filter> is the filter name, and <cyclenumber> is the
#    cycle number derived from steering header CYCLE_NUMBER.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC, Starlink)
#
# Copyright:
#    Copyright (C) 1998-2004 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Selection
# =========
#
# This should only be performed on OBJECT frames, when it's time to
# make a flat.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "LAMP" &&
         $Frm->uhdr( "MAKE_FLAT" ) ) {

# Create temporary files.
# =======================

# Average of the illumination-off frames.
       my $tmp_off = new ORAC::TempFile;
       my $off = $tmp_off->file;

# Average of the illumination-on frames.
       my $tmp_on = new ORAC::TempFile;
       my $on = $tmp_on->file;

# Form group of non-test observations.
# ====================================

# Select the non-test frame members in the current cycle.  The test
# frames used to set an approriate flux level have observation type
# "TEST".
       my $cycleno = $Frm->uhdr( "CYCLE_NUMBER" );
       $cycleno = defined( $cycleno ) ? $cycleno : 0;
       my $calibGrp = $Grp->subgrp( CYCLE_NUMBER => $cycleno,
                                    ORAC_OBSERVATION_TYPE => "LAMP" );

# Make this the main group for this context.
       {
          my $Grp = $calibGrp;

# Average the images.
# ===================
          my @frames = $Grp->membernames;

          my $in1 = $frames[ 0 ];
          my $in2 = $frames[ 3 ];
          my $param = "exp=0.5*(ia+ib) ia=$in1 ib=$in2";
          $Mon{ "kappa_mon" }->obeyw( "maths", "$param out=$off" );

          $in1 = $frames[ 1 ];
          $in2 = $frames[ 2 ];
          $param = "exp=0.5*(ia+ib) ia=$in1 ib=$in2";
          $Mon{ "kappa_mon" }->obeyw( "maths", "$param out=$on" );

          orac_print "Averaged the repeated calibration frames.\n";

# Create the flat.
# ================

# Create the unnormalized flat.
# -----------------------------
          my $uflat = "uflat_" . $Grp->groupid;
          $param = "in1=$on in2=$off out=$uflat";
          $Mon{ "kappa_mon" }->obeyw( "sub", "$param" );
          orac_print "Formed unnormalised flat.\n";

# Generate the flat's name.
# -------------------------

# Obtain the filter name.  Remove []() or replace characters which would
# confuse HDS.
          my $filter = $Frm->uhdr( "ORAC_FILTER" );
          $filter =~ s/\./p/g;
          $filter =~ tr/\(\)\[\]/d/;

# Get the cycle number.  Supply a default for recipes not supporting
# this yet.  Can't use ( || ) syntax because 0 is the default.
          my $cycleno = $Frm->uhdr( "CYCLE_NUMBER" );
          $cycleno = defined( $cycleno ) ? $cycleno : 0;

# Obtain the flat number.  This may have an _subgrp suffix.  Since we take care
# of different cycles in the naming, we remove the ugly _subgrp
# strings.  Note that polarimetry is not applicable.
          my $flatno = $Grp->groupid;
          $flatno =~ s/_subgrp//g;

# Specify the file cycle suffix.
          my $cyclesuffix = "";
          if ( $cycleno > 0 ) {
             $cyclesuffix = "_c" . $cycleno;
          }

# Generate the flat's name.
          my $out = "flat_${filter}_" . $flatno . $cyclesuffix;

# Normalise the flat.
# -------------------

# Obtain the mean of the combined frame.
          $Mon{ "kappa_mon" }->obeyw( "stats", "ndf=$uflat" );

# Extract the mean of the frame.
          ( my $ORAC_STATUS, my $mean ) = $Mon{ "kappa_mon" }->get( "stats", "mean" );

# Normalise the flat field to have a mean of one.
          $param = "in=$uflat out=$out scalar=$mean title=\'Flat field\'";
          $Mon{ "kappa_mon" }->obeyw( "cdiv", "$param" );

# Delete the non-normalised flat.
          _DELETE_A_FRAME_ FRAME=$uflat

# Record and display the flat
# ===========================

# Set the current flat in the calibration object.
          _FILE_FLAT_ NAME=$out

# Form a list of input file names.  Set up the object list assuming
# that everything in the Group members list contains the file pointer
# to pre-flatfielded data.
          my @objects = $Grp->membernames;
          my $objlist = join( ",", @objects );

# Report the status of the processing.
          orac_print "Frames $objlist used for flat\n";

# Display the new flat.
          _DISPLAY_FLAT_IMAGE_

# End of the calibration-frame selection.
       }
    }

# Podule
# ======

=head1 NAME

_MAKE_DOME_FLAT_ -- Makes calibration dome flats from the current group of frames.

=head1 DESCRIPTION

This primitive makes dome flats from the current group, one
for each combination of filter.  This routine selects the group
for the current recipe cycle, and excludes any preliminary test
frames used to set the intensity.   It effectively finds the
normalised the lamp-on minus the lamp-off frames.

=head1 NOTES

=over 4

=item *

This primitive is suitable for the SOFI ESO infrared cameras in
imaging mode using the SOFI_img_cal_Dome_Flats template.

=item *

Processing only occurs for dome-type frames, and when the
steering header MAKE_FLAT is true.

=item *

The four flat frames are averaged in pairs of like
attributes.  The attributes being the lamp on or off.

=item *

The average off lamp frame is subtracted from its lamp-on
counterpart, and the result normalised to a mean of 1 to create
the flat.

=item *

The flat is filed with the calibration system and displayed.

=back

=head1 TASKS

KAPPA: CDIV, MATHS, STATS, SUB.

=head1 OUTPUT DATA

The flat field.  It is called is
"flat_E<lt>filterE<gt>_E<lt>groupnumberE<gt>" for the first cycle, and
"flat_E<lt>filterE<gt>_E<lt>groupnumberE<gt>_cE<lt>cyclenumberE<gt>"
for subsequent cycles, where E<lt>groupnumberE<gt> is the frame number
of the group, E<lt>filterE<gt> is the filter name, and
E<lt>cyclenumberE<gt> is the cycle number derived from steering header
CYCLE_NUMBER.

=head1 AUTHORS

Malcolm J. Currie (Starlink) <mjc@star.rl.ac.uk>

=head1 COPYRIGHT

Copyright (C) 1998-2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
