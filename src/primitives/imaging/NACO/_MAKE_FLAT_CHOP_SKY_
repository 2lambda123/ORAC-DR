#+
# Name:
#    _MAKE_FLAT_CHOP_SKY_
#
# Purpose:
#    Makes a flat from the sky frames for a CHOP_SKY_JITTER recipe.
#
# Language:
#    Perl5
#
# Description:
#    This primitive processes sky frames in the current $Grp of a
#    CHOP_SKY_JITTER recipe, to make a flat field.  It masks deviant
#    pixels, normalises the sky frames to each other, and combines the 
#    frames using the median at each pixel.  The resultant frame is
#    normalised (to 1) to make the flat.  The flat is indexed.
#
# Notes:
#    -  This primitive is suitable for near infra-red imagers.
#    -  Processing only occurs when the steering header TARGET_OR_SKY
#    is "sky".
#    -  The work is done by _MASK_DEVIANTS_, _NORMALISE_TO_MODE_EXTENDED_,
#    and _MAKE_FLAT_FROM_NORMALISED_CHOP_SKY_ primitives.
#    -  Stores the template name before normalisation, so that it can
#    be reset at the end, for determining sky levels.
#
# Output Data:
#    None.  However, the invoked primitives do create new frames.  The
#    bottom line is that a flat field frame is filed and indexed.
#    Various intermediate frames are normally removed by a tidy primitive.

# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Test whether or not this is an object frame or a sky frame. 
    my $class = $Frm->uhdr( "TARGET_OR_SKY" );

# Only perform this on sky frames.  This is an added check for all but
# _MASK_DEVIANTS_.  The other primitives called ought to do this for
# themselves.
    my ( $skyGrp, $template );
    if ( $class eq "sky" ) {

# Mask deviant pixels, such as cosmic rays, from the sky frame.
       _MASK_DEVIANTS_

# Select the sky frame members in the current cycle.
       my $cycleno = $Frm->uhdr( "CYCLE_NUMBER" );
       $cycleno = defined( $cycleno ) ? $cycleno : 0;
       $skyGrp = $Grp->subgrp( CYCLE_NUMBER => $cycleno,
                               TARGET_OR_SKY => "sky" );

# Store the template name here.  This is because the intermediate
# sky frames after normalisation lose their relative signals.
       $template = $Frm->file;

# Normalise the sky frames to each other.
       _NORMALISE_TO_MODE_EXTENDED_
    }

# Make the flat field.  Any faint sources present will bias
# the flat field.
    _MAKE_FLAT_FROM_NORMALISED_CHOP_SKY_

# Restore the sky filenames as they were prior to normalisation.
    if ( $class eq "sky" ) {
       $skyGrp->template( $template );
    }

# Podule
# ======

=head1 NAME

_MAKE_FLAT_CHOP_SKY_ -- Makes a flat from the sky frames for a CHOP_SKY_JITTER recipe.

=head1 DESCRIPTION

This primitive processes sky frames in the current $Grp of a
CHOP_SKY_JITTER recipe, to make a flat field.  It masks deviant
pixels, normalises the sky frames to each other, and combines the
frames using the median at each pixel.  The resultant frame is
normalised (to 1) to make the flat.  The flat is indexed.

=head1 NOTES

=over 4

=item *

This primitive is suitable for near infra-red imagers.

=item *

Processing only occurs when the steering header TARGET_OR_SKY is "sky".

=item *

The work is done by L<_MASK_DEVIANTS_|_MASK_DEVIANTS_>,
L<_NORMALISE_TO_MODE_EXTENDED_|_NORMALISE_TO_MODE_EXTENDED_>, and
L<_MAKE_FLAT_FROM_NORMALISED_CHOP_SKY_|_MAKE_FLAT_FROM_NORMALISED_CHOP_SKY_>
primitives.

=item *

Stores the template name before normalisation, so that it can
be reset at the end, for determining sky levels.

=back

=head1 OUTPUT DATA

None.  However, the invoked primitives do create new frames.  The
bottom line is that a flat field frame is filed and indexed.
Various intermediate frames are normally removed by a tidy primitive.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
