# -*-perl-*-

=head1 NAME

_CHECK_DATA_INTEGRITY_ -- Check headers and data values to ensure
arrays are enabled, DHS is working properly, etc.

=head1 DESCRIPTION

This primitive examines the raw data to ensure that upstream software is working correctly. It currently checks that:

=over 4

=item * the array was enabled when data were taken. If an array was
disabled, then all pixels will be zero.

=back

=head1 ARGUMENTS

=over 4

None.

=back

=head1 NOTES

=over 4

=item * This primitive is suitable for WFCAM.

=back

=head1 OUTPUT DATA

=over 4

None.

=back

=head1 TASKS

KAPPA: STATS.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2006 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Get the filename.
my $ndf = $Frm->file;

# Perform stats on this frame.
$Mon{'kappa_mon'}->obeyw( "stats", "ndf=$ndf clip=[3]" );

# Retrieve the mean. If it is less than 0.5, then throw an error.
( my $ORAC_STATUS, my $mean ) = $Mon{'kappa_mon'}->get( "stats", "mean" );
if( $mean == 0 ) {

  # Set this frame to bad so that it won't show up in Group membership.
  $Frm->isgood(0);

  # And throw the error.
  orac_throw "Problem with raw data: mean value of $ndf is zero.\nProbable cause is a disabled array.\n\n";
}
if( $mean < 0 && ( ! ( $Frm->uhdr('ORAC_OBSERVATION_TYPE') eq 'BIAS' ) &&
                   ! ( $Frm->uhdr('ORAC_OBSERVATION_TYPE') eq 'SKYFLAT' ) &&
                   ! ( $Frm->uhdr('ORAC_OBSERVATION_TYPE') eq 'DARK' ) ) ) {

  orac_throw "Problem with raw data: mean value of $ndf is less than zero.\n\n";
}

# Check for the enhanced channel edge problem.
_DETECT_CHANNEL_EDGES_
if( $_DETECT_CHANNEL_EDGES_{ENHANCED} ) {
  orac_warn "$ndf has enhanced channel edges. Will not add to group.\n";
  $Frm->isgood( 0 );
}
