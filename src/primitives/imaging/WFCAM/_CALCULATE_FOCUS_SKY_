=head1 NAME

_CALCULATE_FOCUS_SKY_ - Calculate focus adjustment numbers for WFCAM,
incorporating sky-subtraction.

=head1 DESCRIPTION

This primitive takes a WFCAM focus observation consisting of four
observations taken at two different focus positions, subtracts a
pre-determined sky frame from them, examines th FWHM of objects in
each of the four sky-subtracted observations, and calculates a
suggested change in focus.

=head1 ARGUMENTS

=over 4

None.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for WFCAM.

=item *

This primitive runs when the current Frame objects's CALCULATE_FOCUS
internal uhdr is set to true.

=item *

This primitive uses a sky field stored in the current Group object's
FOCUS_SKY internal uhdr. If this is undefined, and error will be
thrown.

=back

=head1 OUTPUT DATA

=over 4

=item *

The sky-subtracted focus observation with _ss suffix.

=back

=head1 TASKS

KAPPA: SUB.

=head1 REQUIRED PERL MODULES

None, but see _CALCULATE_FOCUS_.

=head1 SEE ALSO

_CALCULATE_FOCUS_

=head1 AUTHORS

Brad Cavanagh (JAC) <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2008 Science and Technology Facilities Council.
All Rights Reserved.

=cut

if( $Frm->uhdr( "CALCULATE_FOCUS" ) ) {

  my $sky = $Cal->sky;

  if( ! defined( $sky ) ) {
    orac_throw "Can not run _CALCULATE_FOCUS_SKY_ without a defined sky frame.";
  }

  foreach my $i ( 1 .. $Frm->nfiles ) {

    my ( $in, $out ) = $Frm->inout( "_ss", $i );

    # Create the parameter list for SUB.
    my $param = "in1=$in in2=$sky out=$out";

    # Run SUB.
    $Mon{'kappa_mon'}->obeyw( "sub", "$param" );

    # Update the Frm object.
    $Frm->file( $i, $out );

    # Report to the user.
    orac_print "$in sky-subtracted making $out.\n";
    orac_print " Sky used: $sky\n";

  }

  # Tidy-up output.
  orac_print "\n";

  _CALCULATE_FOCUS_

}
