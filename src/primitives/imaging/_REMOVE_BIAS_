#+
# Name:
#    _REMOVE_BIAS_
#
# Purpose:
#    Subtracts a bias frame.
#
# Language:
#    Perl5
#
# Description:
#    This primitive subtracts a zero bias from the current frame; unless
#    the data have variance information and were taken using a non-ND
#    mode (i.e. where the bias has not already been subtracted), whereupon
#    a bias frame, if available, is subtracted.
#
#    For most instruments there is no bias to subtract so it is
#    something of a placeholder primitive.  Its main purpose is to set
#    up CCDPACK for subsequent processing.  For instance, CCDPACK will
#    complain if debiassing is not performed before say flat-fielding.
#    The primitive reports a successful bias subtraction and the frames
#    concerned.
#
# Notes:
#    -  This primitive is suitable for UFTI, IRCAM, INGRID, and Michelle
#    in imaging mode.
#    -  Processing occurs for all frames, and sub-frames therein.
#    -  Where a bias frame is used, it is the most-recent and matching
#    given by $Cal->bias method.
#    -  The observing mode (read type) comes from user header
#    ORAC_DETECTOR_READ_TYPE.
#    -  The bias-subtracted image can be displayed.
#    -  The frame title is propagated.
#
# Output Data:
#    -  Bias-subtracted frame inheriting the frame's name but with the
#    _db suffix.
#
# Tasks:
#    CCDPACK: DEBIAS.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998--2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Assume for the moment that a zero-bias is subtracted.
    my $sub_bias_frame = 0;
    my ( $bias, $param );

# Is data variance being used?
    my $usevar = $Frm->uhdr( "USE_VARIANCE" );
    $usevar = defined( $usevar ) ? $usevar : 0;

# This should only be performed on OBJECT frames in modes where the bias
# has not already been subtracted.  This would be modes like CHOP and
# STARE, but not ND_STARE, NDCHOP, 10_NDSTARE.
    my $read_type = $Frm->uhdr( "ORAC_DETECTOR_READ_TYPE" );

# Cope with old data where the values were wrong.  More may need adding,
# probably in a separate primitive.
    if ( $read_type eq "flush_read" ) {
       $read_type = "NDSTARE";
    } else {
       $read_type = uc( $read_type );
    }

    if ( substr( $read_type, 0, 2 ) ne "ND" &&
         substr( $read_type, 0, 5 ) ne "10_ND" && $usevar ) {

# Determine whether or not there is a bias frame to subtract.
       $bias = eval { $Cal->bias };
       if ( $@ ) {
          $sub_bias_frame = 0;
          orac_warn "There is no bias frame available.  Data variance " .
                    "will be wrong.\n";
       } else {
          $sub_bias_frame = 1;
       }
    }

# Subtract bias.
# ==============

# Loop through the sub-files.
    foreach my $i ( 1 .. $Frm->nfiles ) {

# Generate the input and output filenames.  The output file has the same
# name as the input except the suffix is changed to indicate it has been
# bias subtracted.
       ( my $in, my $out ) = $Frm->inout( "_db", $i );

# Specify parameters depending on how the bias is going to be subtracted.
       if ( $sub_bias_frame ) {
          $param = "in=$in bias=$bias out=$out title=! offset=false";
       } else {
          $param = "in=$in out=$out title=! usecon=true zero=0";
       }
       $Mon{'ccdpack_red'}->obeyw( "debias", "$param reset accept" );

# Copy the variance over if we subtracted a zero bias and if the input
# file had a variance frame to begin with.
       $Mon{'ndfpack_mon'}->obeyw( "ndftrace", "ndf=$in" );
       ( my $ORAC_STATUS, my $variance ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "variance" );
       if( ! $sub_bias_frame && uc( $variance ) ne 'FALSE' ) {
         $Mon{'ndfpack_mon'}->obeyw( "setvar", "ndf=$out from=$in comp=variance" );
       }

# Report the processing.
       if ( $sub_bias_frame ) {
          orac_print "$in to $out: Bias frame $bias subtracted.\n";
       } else {
          orac_print "$in to $out: Null bias removed.\n";
       }

# Record the new file name in the frame object.
       $Frm->file( $i, $out );                       # obligatory update step

# Display the image.
       _DISPLAY_FRAME_IMAGE_
    }
    orac_print "\n";


# Podule
# ======

=head1 NAME

_REMOVE_BIAS_ -- Subtracts a bias frame.

=head1 DESCRIPTION

This primitive subtracts a zero bias from the current frame; unless
the data have variance information and were taken using a non-ND
mode (i.e. where the bias has not already been subtracted), whereupon
a bias frame, if available, is subtracted.

For most instruments there is no bias to subtract so it is something
of a placeholder primitive.  Its main purpose is to set up CCDPACK for
subsequent processing.  For instance, CCDPACK will complain if
debiassing is not performed before say flat-fielding.  The primitive
reports a successful bias subtraction and the frames concerned.

=head1 NOTES

=over 4

=item *

This primitive is suitable for UFTI, IRCAM, INGRID, and Michelle
in imaging mode.

=item *

Processing occurs for all frames, and sub-frames therein.

=item *

Where a bias frame is used, it is the most-recent and matching
given by $Cal->bias method.

=item *

The observing mode (read type) comes from user header
ORAC_DETECTOR_READ_TYPE.

=item *

The bias-subtracted image can be displayed.

=item *

The frame title is propagated.

=back

=head1 OUTPUT DATA

=over 4

=item *

Bias-subtracted frame inheriting the frame's name but with the _db suffix.

=back

=head1 TASKS

CCDPACK: DEBIAS.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998--2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
