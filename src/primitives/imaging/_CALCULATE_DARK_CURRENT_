# -*-perl-*-

=head1 NAME

_CALCULATE_DARK_CURRENT_ - Calculate the dark current in electrons per
second for a frame.

=head1 DESCRIPTION

This primitive calculates the dark current for a given dark frame. It
does so by determining the 3-sigma clipped mean, then divides that by
the exposure time and multiplies by the gain. The result is displayed
to the user.

=head1 ARGUMENTS

=over 4

None.

=back

=head1 NOTES

=over 4

=item *

Operates on the current Frame object.

=back

=head1 OUTPUT DATA

=over 4

None.

=back

=head1 TASKS

KAPPA: STATS.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2005 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Only do this on DARK frames.
if( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq 'DARK' ) {

  # Obtain the exposure time of the current frame.
  my $exptime = $Frm->uhdr( "ORAC_EXPOSURE_TIME" );
  $exptime = defined( $exptime ) ? $exptime : 10.0;

  # Obtain the gain.
  _GET_GAIN_
  my $adu = $_GET_GAIN_{GAIN};

  # Get the input filename.
  my $in = $Frm->file;

  # Find the clipped mean of the current frame.
  $Mon{'kappa_mon'}->obeyw( "stats", "ndf=$in clip=3" );
  ( my $ORAC_STATUS, my $mean ) = $Mon{'kappa_mon'}->get( "stats", "mean" );

  # Calculate the dark, and format it for printing.
  my $dark = $mean / $exptime * $adu;
  my $f_dark = sprintf( "%.3f", $dark );

  # Display the results to the user.
  orac_print "Dark current in $in is $f_dark e-/sec.\n";
  orac_print "\n";

}
