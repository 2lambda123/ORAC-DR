# -*-perl-*-

=head1 NAME

_ADD_AUTO_ASTROMETRY_ -- Performs automated astrometric corrections.

=head1 DESCRIPTION

This primitive automatically corrects astrometry for a given observation.
It does so by downloading a catalogue from a source (typically 2MASS),
detects objects in the observation, correlates between the two catalogues,
and calculates an astrometric solution.

=head1 ARGUMENTS

=head1 NOTES

=over 4

=item *

This primitive is suitable for infrared imaging instruments.

=item *

Processing only occurs when the steering header ADD_ASTROMETRY is true.

=item *

Processing occurs on the current Group object.

=item *

Astrometric correction will probably fail if fewer than five objects
are detected in the frame. Should this occur, the original WCS will
be retained.

=item *

Should an astrometric solution be found, the WCS in the current
Group will be overwritten with the solution.

=back

=head1 REQUIRED PERL MODULES

Starlink::Autoastrom.

=head1 AUTHORS

Brad Cavanagh (JAC) <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2005 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Only do this if we're told.
if( $Frm->uhdr( "ADD_ASTROMETRY" ) ) {

# Fix the astrometry in the current Group.
  my $in = $Grp->file;
  orac_print "Adding accurate astrometry to $in.\n";

# We need the Starlink::Autoastrom module. Display a warning
# to the user if it cannot be loaded.
  require Starlink::Autoastrom;
  if( $@ ) {
    orac_warn "Could not load the Starlink::Autoastrom Perl module: $@\n";
    orac_warn "Continuing with data reduction.\n";
  } else {

# Create a new Starlink::Autoastrom object.
    my $auto = new Starlink::Autoastrom( ndf => $in );

# Find the solution, wrapping in an eval to trap any errors.
    eval($auto->solve);
    if( $@ ) {
      orac_warn "Error adding accurate astrometry to $in: $@\n";
      orac_warn "Continuing with data reduction.\n";
    } else {
      orac_print "Accurate astrometry added to $in.\n";
    }

  }

# Tidy up output.
  orac_print "\n";

}
