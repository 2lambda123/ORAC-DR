#+
# Name:
#    _CREATE_WCS_

# Purpose:
#    Corrects the headers of UIST imaging data to create an
#    AIPS-convention World Co-ordinate System.

# Language:
#    Perl5

# Description:
#    This primitive converts astrometric information in an UIST frame 
#    into an AIPS-convention World Co-ordinate System.  This is achieved
#    by editing the headers in the FITS airlock.
#
#    Note that this is a temporary fix until the headers have the FITS
#    WCS headers, although we made need a temporary correction from PC
#    to CD-style headers.  It's just adapted from UFTI, so the exact
#    reference pixel and offsets for polarimetry are merely inherited.
#
#    The changes are listed below.
#
#    a) Remove the PC matrix headers.
#
#    b) Add a CROTA2 header using the rotation angle derived from the
#    PC matrix.
#
# Notes:
#    -  Editing only occurs for OBJECT and SKY frames.
#    -  Following a successful introduction of a WCS, the current
#    AST Frame is SKY.  Any existing WCS Frames besides the default
#    three---PIXEL, GRID, AXIS---are lost. 

# Output Data:
#    The modified NDF.

# Tasks:
#    KAPPA: ERASE, FITSMOD, NDFTRACE, WCSFRAME.

# Authors:
#    MJC: Malcolm J. Currie (JAC)
#    {enter_new_authors_here}

# Copyright:
#    Copyright (C) 1998-2002 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.

#-

# Bring in Math::Trig::asind for the header translation tables.
   use Math::Trig qw/ asin /;

# Do headers need editing?
# ========================

# Do not want to redo a frame already converted, otherwise the scale
# will erroneously be reduced each pass through this primitive.
    my $needs_editing = ! defined( $Frm->hdr( "CROTA2" ) );

# Modify the headers should only be performed on OBJECT or SKY
# frames, which have not already been converted.  
    my $correct_obstype = $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "OBJECT" ||
                          $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "SKY";
    if ( $correct_obstype && $needs_editing ) {
       my $ndf = $Frm->file;

# Determine the rotation.
# =======================

# Obtain the PC2_1, cutting a corner for now as we know the angle is
# near 0.  Strictly one should obtain a cosine to derive the quadrant.
       my $pc21 = $Frm->hdr( "PC2_1" );
       $pc21 = defined( $pc21 ) ? $pc21 : 0.0;

# The axes are rotated for UIST, i.e. x axis is along declination.
       my $pi = atan2( 1, 1 ) * 4;
       my $rotangle = asin( $pc21 ) * 180.0 / $pi;

# Create the FITSMOD steering file.
# =================================
       my $table = "fitsmod$$.lis";
       unlink( $table );

# Indicate where to insert the FITS cards.  For UIST, the WCS-related
# headers already exist so no new location is necessary.
       my $insert_card = " ";

# Open the steering file of editing instructions.  Set the command to
# update as the headers exist.
       open ( STEERING, ">$table" ) ||
         orac_throw "Unable to open $table of WCS editing instructions.  Error: $!.\n";
       my $cmd = "U";

# We add a rotation angle, and remove the PC matrix.
       print STEERING "W CROTA2(CUNIT2) $rotangle [deg] Angle of Dec axis wrt axis 2 measured ccw\n";
       print STEERING "D PC1_1\n";
       print STEERING "D PC2_1\n";
       print STEERING "D PC1_2\n";
       print STEERING "D PC2_2\n";
       close( STEERING );

# Edit the headers.
       $Mon{ "ndfpack_mon" }->obeyw( "fitsmod", "ndf=$ndf mode=file table=$table" );
       unlink( $table );

       orac_print "AIPS-convention world co-ordinate system replaces PC matrix " .
                  "to headers\n    of $ndf.\n";

# Remove an existing WCS component, so that later when a new WCS is made,
# it will include a SKY co-ordinate frame.  As there may not already be a
# WCS component, make one with wcsframe.
       $Mon{ "ndfpack_mon" }->obeyw( "wcsframe", "ndf=$ndf frame=pixel" );
       $Mon{ "ndfpack_mon" }->obeyw( "erase", "object=${ndf}.WCS ok" );

# Create the SKY frame in the WCS component.
       $Mon{ "ndfpack_mon" }->obeyw( "wcsframe", "ndf=$ndf frame=sky" );
       orac_print "Astrometry SKY co-ordinate frame created in $ndf.\n";
       orac_print "\n";

# Update the ORAC internal header.
       $Frm->uhdr( "ORAC_ROTATION", $rotangle );
    }

# Podule
# ======

=head1 NAME

_CREATE_WCS_  -- Corrects the headers of UIST imaging data to create an AIPS-convention World Co-ordinate System.

=head1 DESCRIPTION

This primitive converts astrometric information in an UIST frame into
an AIPS-convention World Co-ordinate System.  This is achieved by
editing the headers in the FITS airlock.

Note that this is a temporary fix until the headers have the FITS
WCS headers, although we made need a temporary correction from PC
to CD-style headers.  It's just adapted from UFTI, so the exact
reference pixel and offsets for polarimetry are merely inherited.

The changes are listed below.

a) Remove the PC matrix headers.

b) Add a CROTA2 header using the rotation angle derived from the
PC matrix.

=head1 NOTES

=over 4

=item *

Editing only occurs for OBJECT and SKY frames, for which
there is no WCS.  This includes all editing steps.

=item *

Following a successful introduction of a WCS, the current
AST Frame is SKY.  Any existing WCS Frames besides the default
three---PIXEL, GRID, AXIS---are lost. 

=back

=head1 OUTPUT DATA

=over 4

=item *

The modified NDF.

=back

=head1 TASKS

KAPPA: ERASE, FITSMOD, WCSFRAME.

=head1 AUTHORS

Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2002 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
