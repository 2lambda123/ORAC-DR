# -*-perl-*-

=head1 NAME

_MEASURE_READNOISE_STEER_ - sets up steering parameters for readnoise
calculations for UIST.

=head1 DESCRIPTION

This primitive sets up an internal user header to tell subsequent primitives
when readnoise calculations should be performed.

For data taken before 20040719, there should be six total frames
in the readnoise calculation sequence. For data taken on and after
20040719 there should be 11 total frames. For both cases the final
five frames will be used to determine the readnoise, with the initial
frame(s) being ignored.

=head1 NOTES

=over 4

=item For information on the specific readnoise calculations performed,
see the _MEASURE_READNOISE_ primitive.

=back

=head1 PARAMETERS

=over 4

=item DARK_FRAMES = INTEGER (Given)

The number of dark frames used to perform the readnoise calculations.
Cannot be greater than 9. [5]

=item TOTAL_FRAMES = INTEGER (Given)

The total number of frames in the sequence. Default is either 6
or 11, depending on dates as described above. [6 or 11]

=back

=head1 AUTHORS

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2002-2004 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# The current number of frames in the group, minus 1.
my $num = $Grp->num;

# Obtain parameters.
my $dark_frames = $_MEASURE_READNOISE_STEER_{DARK_FRAMES};
my $total_frames = $_MEASURE_READNOISE_STEER_{TOTAL_FRAMES};

# Dark frames default to five.
if( !defined( $dark_frames ) ) {
  $dark_frames = 5;
}

# Get the date-specific total frames default.
if( !defined( $total_frames ) ) {
  my $ut = $Frm->uhdr('ORAC_UTDATE');
  if( defined( $ut ) ) {
    $ut =~ s/-//g;
  } else {
    orac_warn "UT date not set in header. Readnoise calculations may be incorrect.\n";
    $ut = 0;
  }
  if( $ut < 20040719 ) {
    $total_frames = 6;
  } else {
    $total_frames = 11;
  }
}

# Number of dark frames can't be greater than 9.
if( $dark_frames > 9 ) {
  orac_warn "DARK_FRAMES argument cannot be greater than 9.\n";
  orac_warn "Defaulting to 5.\n\n";
  $dark_frames = 5;
}

# And set the headers.
$Frm->uhdr("DARK_FRAMES", $dark_frames);

if( $num == ( $total_frames - 1 ) ) {
  $Frm->uhdr("MEASURE_READNOISE", 1);
} else {
  $Frm->uhdr("MEASURE_READNOISE", 0);
}

