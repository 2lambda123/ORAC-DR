=head1 NAME

_CLIPPED_STATS_MEDIAN_ -- Finds the clipped mean, median and standard deviation of a
frame.

=head1 DESCRIPTION

Use progressive sigma-clipping to find a representative mean, median and
standard deviation of a frame.  The default clipping thresholds give a
reasonable approximation to the mode.

=head1 ARGUMENTS

=over 4

=item CLIP = CHARACTER (Read)

The clipping limits as a comma-separated list. ["2,3,3"]

=item MEAN = REAL (Write)

The calculated clipped mean.

=item MEDIAN = REAL (Write)

The calculated clipped median.

=item SIGMA = REAL (Write)

The calculated clipped standard deviation.

=item NUMBER = INTEGER (Write)

The number of good pixels used to derive the statistics.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for all instruments.

=back

=head1 TASKS

KAPPA: STATS.

=head1 AUTHORS

TAL: Tim Lister (LCOGT)
MJC: Malcolm J. Currie (JAC, Starlink)

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Specify the parameters for the statistics task.
my $clip = ( $_CLIPPED_STATS_{CLIP} || "2,3,3" );
my $param1 = "ndf=".$Frm->file;
my $param2 = "clip=[" . $clip . "] order=true";

# Calculate the clipped mean of the frame.
$Mon{ "kappa_mon" }->obeyw( "stats", "$param1 $param2" );

# Extract the clipped mean, median and standard deviation of the frames.
( my $ORAC_STATUS, my $clipmean ) = $Mon{ "kappa_mon" }->get( "stats", "mean" );
( $ORAC_STATUS, my $clipmedian ) = $Mon{ "kappa_mon" }->get( "stats", "median" );
( $ORAC_STATUS, my $clipsigma ) = $Mon{ "kappa_mon" }->get( "stats", "sigma" );
( $ORAC_STATUS, my $numgood ) = $Mon{ "kappa_mon" }->get( "stats", "numgood" );

# Export the values.
$_CLIPPED_STATS_MEDIAN_{MEAN} = $clipmean;
$_CLIPPED_STATS_MEDIAN_{MEDIAN} = $clipmedian;
$_CLIPPED_STATS_MEDIAN_{SIGMA} = $clipsigma;
$_CLIPPED_STATS_MEDIAN_{NUMBER} = $numgood;

