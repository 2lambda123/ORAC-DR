#+
# Name:
#    _REDUCE_DARK_STEER_
#
# Purpose:
#    Steers processing for REDUCE_DARK recipe.
#
# Language:
#    Perl5
#
# Description:
#    This primitive control processing for REDUCE_DARK recipe through
#    steering headers listed below.
#
# Steering Headers:
#    USE_VARIANCE = LOGICAL
#       Whether or not variance processing is to occur.  This equates to
#       argument USEVAR.
#
# Arguments:
#    USEVAR = LOGICAL (Given)
#       Whether or not to create and propagate variance arrays.  [1]
#
# Notes:
#    -  This primitive is suitable for imaging optical cameras.
#    -  Processing only occurs for dark frames.
#
# Authors:
#    TAL: Tim Lister (LCOGT)
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 2011-2012 Las Cumbres Observatory Global Telescope Inc.
#    All Rights Reserved.
#
#-

# This should only be performed on DARK frames.
    if ( $Frm->uhdr( "ORAC_OBSERVATION_TYPE" ) eq "DARK" ) {

# Obtain the number of frames in the jitter pattern.
# ==================================================

# First see if a hardwired value has been supplied in the recipe.  This
# deals with old recipes with fixed numbers and cases where a frame or
# more is missing.
       my $number = $_REDUCE_DARK_STEER_{NUMBER};
#      print "number=$number\n";

# Otherwise use the ORAC_NUMBER_OF_OFFSETS user header.  In full ORAC,
# this stores the total number of offsets used, but ignores repeat
# iterators.  By convention there is always an offset to the origin at
# the end, hence the recipe requires ORAC_NUMBER_OF_OFFSETS-1.
       if ( ! defined ( $number ) ) {
          $number = $Frm->uhdr( "ORAC_NUMBER_OF_OFFSETS" );
          if ( defined( $number ) ) {
             $number--;
	     if ($number < 3 ) {
	      orac_warn "Setting dark frame to bad as part of too short sequence\n";
	      $Frm->isgood(0);
	     }

# Finally default to the original 3.
          } else {
	     $number = 3;
	     print "Hardwiring number to " . $number . "\n";
          }
       }

# Report invalid number of frames.
       if ( $number < 3 ) {
          orac_warn "The number of raw frames ($number) is fewer " .
                     "than 3.\n";
       }

# Set steering headers.
# =====================

# Obtain the USEVAR argument.  Default to false.
       my $usevar = $_REDUCE_DARK_STEER_{USEVAR};
       $usevar = defined( $usevar ) ? $usevar : 0;
       $Frm->uhdr( "USE_VARIANCE", $usevar );

# Specify during processing of which frames should the dark be created.
       my $grpmod = ($Grp->num + 1) % $number;
       my $grpnum = ($Grp->num);
#       print "SVN DBG Grp: $grpmod $grpnum $number\n";
       if ( ($Grp->num + 1) % $number == 0 && $Grp->num > 0 ) {
          $Frm->uhdr( "MAKE_DARK", 1 );
#          my @objects = $Grp->membernames;
#          my $objlist = join( "\n", @objects );
#      	  print "Group members: \n" . $objlist . "\n";
       } else {
          $Frm->uhdr( "MAKE_DARK", 0 );
       }

# Insert the number of frames in the jitter.
       $Frm->uhdr( "JITTER_NUMBER", $number );
    }

# Podule
# ======

=head1 NAME

_REDUCE_DARK_STEER_ -- Steers processing for REDUCE_DARK recipe.

=head1 DESCRIPTION

This primitive control processing for REDUCE_DARK recipe through
steering headers listed below.

=head1 STEERING HEADERS

=over 4

=item USE_VARIANCE = LOGICAL

Whether or not variance processing is to occur.  This equates to
argument USEVAR.

=back

=head1 ARGUMENTS

=over 4

=item USEVAR = LOGICAL (Given)

Whether or not to create and propagate variance arrays.  [1]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for imaging optical cameras.

=item *

Processing only occurs for dark frames.

=back

=head1 AUTHORS

TAL: Tim Lister (LCOGT)
MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 2011-2012 Las Cumbres Observatory Global Telescope Inc.
All Rights Reserved.

=cut
