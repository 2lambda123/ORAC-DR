#+
# Name:
#    _DATA_QC_TEST_
#
# Purpose:
#    Evaluates the image data quality control flag and sets the relevant bitmask
#    keywords in the data catalogue product.
#
# Language:
#    Perl5
#
# Description:
#
# Steering Headers:
#
# Arguments:
#
# Notes:
#    -  This primitive is suitable for imaging cameras.
#    -  Processing only occurs for object frames.
#
# Authors:
#    RAS: Rachel Street (LCOGT)
#
# Copyright:
#    Copyright (C) 2012-2012 Las Cumbres Observatory Global Telescope Inc.
#    All Rights Reserved.
#
#-

    my $ParName = get_prim_arg( $_PRIM_ARGS_, "PARNAME", undef );
    my $ReqConstraintKey = get_prim_arg( $_PRIM_ARGS_, "REQCONSTRAINTKEY", undef );
    my $MeasValueKey = get_prim_arg( $_PRIM_ARGS_, "MEASVALUEKEY", undef );
    my $TestType = get_prim_arg( $_PRIM_ARGS_, "TESTTYPE", undef );

# Initialise returned value of parameter to 'U':
    my $qcparam = 'U';

    print "_DATA_QC_TEST_ input parameters:\n";
    print "Parameter name $ParName\n";
    print "Req constraint key $ReqConstraintKey\n";
    print "Measured value key $MeasValueKey\n";
    print "Type of test to perform: $TestType\n";


# Comparing the requested constraint for a given parameter with the value measured from the frame.
# Data quality control parameters have decimal values or N/A.
    if (defined $Frm->hdr( $ReqConstraintKey ) and defined $Frm->hdr( $MeasValueKey )) {
      my $constraint = uc($Frm->hdr( $ReqConstraintKey ));
      my $value = uc($Frm->hdr( $MeasValueKey ));
      print "$ParName requested=$constraint .vs. actual=$value\n";
      if ( $constraint ne 'UNKNOWN' and  $constraint ne 'N/A' and $value ne 'UNKNOWN' and  $value ne 'N/A') {
        print "Comparing actual with requested $ParName\n";

	# Test if the measured value should equal or exceed the constraint:
	if ($TestType eq 'GTE') {
	  if ( $value >= $constraint ) {
	    $qcparam = 'T';
	  } else {
	    $qcparam = 'F';
	  }

	# Otherwise, the measured value should be less than or equal to the constraint:
	} else {
	  if ( $value <= $constraint ) {
	    $qcparam = 'T';
	  } else {
	    $qcparam = 'F';
	  }
	}
      }
    } else {
      print "ERROR: $ReqConstraintKey or $MeasValueKey undefined in Frm header object, cannot apply test\n";
    }

# Return the determined QC parameter:
    $_DATA_QC_TEST_{QCPARAM} = $qcparam;

