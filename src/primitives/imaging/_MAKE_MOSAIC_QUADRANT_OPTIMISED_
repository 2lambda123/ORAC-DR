#+
# Name:
#    _MAKE_MOSAIC_QUADRANT_OPTIMISED_
#
# Purpose:
#    Forms a mosaic for a QUADRANT_JITTER recipe.
#
# Language:
#    Perl5
#
# Description:
#    This primitive makes an untrimmed mosaic from the object frames in
#    the current cycle of the current $Grp of a QUADRANT_JITTER recipe.
#    It merely calls the standard _MAKE_MOSAIC_ primitive using
#    the supplied arguments and appropriate parameter settings.
#
# Arguments:
#    FILLBAD = LOGICAL (Given)
#       If true (1), replace the bad pixels in the current cycle's
#       mosaic with a smooth function derived from its neighbours.
#       Otherwise, leave the bad pixels unaltered.  [1]
#    INT_METHOD = CHARACTER (Given)
#       The interpolation method.  This is either "linint" for bi-linear
#       interpolation, or "nearest" for nearest neighbour.  The latter
#       takes about half the time.  ["linint"]
#    RESAMPLE = LOGICAL (Given)
#       If true (1), resample the current cycle's frames to the same
#       Cartesian co-ordinate system using the method given by argument
#       INT_METHOD.  If false (0), use integer offsets and changes of
#       origin to register the frames.  The latter is many times
#       faster and is recommended for pipeline operation.  [1]
#
# Notes:
#    -  This primitive is suitable for UFTI, IRCAM, and Michelle
#    in imaging mode.
#    -  Processing only occurs when the steering header MAKE_MOSAIC is
#    true.
#    -  The resampling does not limit the frame bounds to their original
#    limits, so the mosaic includes all contributing pixels.
#    -  The arguments and a computed optimum number of overlaps (three
#    plus the number of the cycles) are merely passed to _MAKE_MOSAIC_.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2001 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Selection
# =========
# Test whether or not it is time to make a mosaic.
    my $makemos = $Frm->uhdr( "MAKE_MOSAIC" );
    if ( $makemos ) {

# Arguments
# =========

# Obtain the value for the interpolation.
       my $intmethod = ( $_MAKE_MOSAIC_QUADRANT_OPTIMISED_{INT_METHOD} || "linint" );

# Determine whether or not to fill bad pixels.
       my $fillbad = $_MAKE_MOSAIC_QUADRANT_OPTIMISED_{FILLBAD};
       $fillbad = defined( $fillbad ) ? $fillbad : 1;

# Determine whether or not to resample.
       my $resample = $_MAKE_MOSAIC_QUADRANT_OPTIMISED_{RESAMPLE};
       $resample = defined( $resample ) ? $resample : 1;

# Make the mosaic.
# ================

# Obtain the cycle number.  Default to zero if undefined, assuming there
# is no multi-cycle processing.
       my $cycleno = $Frm->uhdr( "CYCLE_NUMBER" );
       $cycleno = defined( $cycleno ) ? $cycleno : 0;

# Derive a reasonable number of overlaps to generate a mosaic with
# small steps between former quadrants, yet not make all the possible
# comparisons for efficiency.
       my $optov = 3 + $cycleno;

# Make an untrimmed mosaic using the supplied parameters and derived optimum
# number of overlaps.
       _MAKE_MOSAIC_ INT_METHOD=$intmethod FILLBAD=$fillbad RESAMPLE=$resample TRIM=0 OPTOV=$optov

    }

# Podule
# ======

=head1 NAME

_MAKE_MOSAIC_QUADRANT_OPTIMISED_ -- Forms a mosaic for a QUADRANT_JITTER recipe.

=head1 DESCRIPTION

This primitive makes an untrimmed mosaic from the object frames in
the current cycle of the current $Grp of a QUADRANT_JITTER recipe.
It merely calls the standard _MAKE_MOSAIC_ primitive using
the supplied arguments and appropriate parameter settings.

=head1 ARGUMENTS

=over 4

=item FILLBAD = LOGICAL (Given)

If true (1), replace the bad pixels in the current cycle's
mosaic with a smooth function derived from its neighbours.
Otherwise, leave the bad pixels unaltered.  [1]

=item INT_METHOD = CHARACTER (Given)

The interpolation method.  This is either "linint" for bi-linear
interpolation, or "nearest" for nearest neighbour.  The latter
takes about half the time.  ["linint"]

=item RESAMPLE = LOGICAL (Given)

If true (1), resample the current cycle's frames to the same
Cartesian co-ordinate system using the method given by argument
INT_METHOD.  If false (0), use integer offsets and changes of
origin to register the frames.  The latter is many times
faster and is recommended for pipeline operation.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for UFTI, IRCAM, and Michelle in imaging mode.

=item *

Processing only occurs when the steering header MAKE_MOSAIC is
true.

=item *

The resampling does not limit the frame bounds to their original
limits, so the mosaic includes all contributing pixels.

=item *

The arguments and a computed optimum number of overlaps (three plus
the number of the cycles) are merely passed to _MAKE_MOSAIC_.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2001 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
