# -*-cperl-*-

=head1 NAME

_SCUBA2_MATCHED_FILTER_ - apply a matched filter to SCUBA-2 images

=head1 SYNOPSIS

_SCUBA2_MATCHED_FILTER_

=head1 DESCRIPTION

This PICARD primitive will apply a matched filter to the given
input file.

Requires access to the SCUBA-2 calibration class.

=head1 ARGUMENTS

This primitive has the following argument:

=over 2

=item B<GROUP>

A flag to denote whether or not to process the current Frame or Group
file. Default is 0 (use Frame). If true, the primitive is a no-op if
the Group file does not exist.

=back

=head1 EXTERNAL TASKS

The following external task is used:

=over 2

=item ORAC-DR primitives:

SCUBA2: _APPLY_MATCHED_FILTER_

=back

=head1 OUTPUT DATA

The matched-filter file is stored in the current Frame or Group object.

=head1 OUTPUT FILES

Writes output files with the suffix C<_mf>.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2010,2012 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

my $group = get_prim_arg($_PRIM_ARGS_, "GROUP", 0);

my $Obj = ($group) ? $Grp : $Frm;

# Always proceed for Frame processing
my $proceed = ($group) ? ($Grp->file_exists ? 1 : 0) : 1;

if ($proceed) {
  orac_print ("\nCalling _SCUBA2_MATCHED_FILTER_: apply a matched-filter to reduced SCUBA-2 maps\n", "yellow");

  my $in = $Obj->file;
  # Define output file name - use recipe parameter if given, otherwise
  # use a suffix of "_mf"
  my $out = (defined $Frm->uhdr("RECPAR_OUTPUT_NAME") && $Grp->num == 0)
    ? $Frm->uhdr("RECPAR_OUTPUT_NAME") : $Obj->inout("_mf");

  # Allow primitive to create its own PSF images based on each input
  # file
  _APPLY_MATCHED_FILTER_ IN=$in OUT=$out GROUP=$group

} else {
  orac_print "Delaying application of matched filter until Group file has been created\n" if ($group);
}
