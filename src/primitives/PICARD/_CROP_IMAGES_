# -*-cperl-*-

=head1 NAME

_CROP_IMAGES_ - trim images to specified map size

=head1 SYNOPSIS

_CROP_IMAGES__

=head1 DESCRIPTION

This PICARD primitive is designed to trim input images to the size
given by the map parameters in the header or to a user-specified size.

Note that if the user specifies the image size, then all images will be
trimmed to that size.

=head1 ARGUMENTS

This primitive has no arguments.

=head1 EXTERNAL TASKS

The following external task is used:

=over 4

=item ORAC-DR primitives:

SCUBA2: _CROP_IMAGE_

=back

=head1 OUTPUT DATA

None.

=head1 OUTPUT FILES

Creates output files with the suffix C<_crop>

=head1 NOTES

If recipe parameters are used then all images are cropped to the same
size.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2010 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

orac_print ("\nCalling _CROP_IMAGES_: trim images to specified map size\n", "yellow");

# Check for recipe parameters
my $extraparams = "";
$extraparams .= " WIDTH=".$Frm->uhdr("RECPAR_MAP_WIDTH")
  if (defined $Frm->uhdr("RECPAR_MAP_WIDTH"));
$extraparams .= " HEIGHT=".$Frm->uhdr("RECPAR_MAP_HEIGHT")
  if (defined $Frm->uhdr("RECPAR_MAP_HEIGHT"));

my $verbose = ( defined $Frm->uhdr("RECPAR_VERBOSE") ) ?
  $Frm->uhdr("RECPAR_VERBOSE") : 0;

if ( $extraparams ne "" ) {
  orac_print "Output images will have".$extraparams." arcsec\n" if $verbose;
}

# Trim each image to the specified size
foreach my $i ( 1 .. $Frm->nfiles ) {
  my ($in, $out) = $Frm->inout("_crop", $i);
  _CROP_IMAGE_ IMAGE=$in OUT=$out $extraparams
}
