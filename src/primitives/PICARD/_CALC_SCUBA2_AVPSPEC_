# -*-cperl-*-

=head1 NAME

_CALC_SCUBA2_AVPSPEC_ - calcualate average bolometer power spectra

=head1 SYNOPSIS

_CALC_SCUBA2_AVPSPEC_

=head1 DESCRIPTION

This PICARD primitive is designed to calculate the average bolometer
power spectrum for each file.

The input files should be raw uncalibrated SCUBA-2 timeseries data.

=head1 ARGUMENTS

This primitive has no arguments.

=head1 EXTERNAL TASKS

The following external task is used:

=over 4

=item ORAC-DR primitives:

SCUBA2: _CALCULATE_AVERAGE_POWERSPECTRUM_

=back

=head1 NOTES

Power spectra are only displayed if the C<CALC_SCUBA2_AVPSPEC> recipe
parameter C<DISPLAY> is true.

This primitive checks for raw data units, but it is the user's
responsibility to ensure all the files have the same units because the
units are only stored for the first file in the input list.

=head1 OUTPUT DATA

None.

=head1 OUTPUT FILES

New output files are created with the suffix C<_avpspec> which contain
the power spectrum for each input file.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2010 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Tell the user what's going on
orac_print ("\n_CALC_SCUBA2_AVPSPEC_: calculate average bolometer power spectra for raw data\n", "yellow");

# Are the power spectra to be displayed? Default to yes.
my $display_data = ( defined $Frm->uhdr("RECPAR_DISPLAY") )
  ? $Frm->uhdr("RECPAR_DISPLAY") : 1;

# Check that the input data look like raw data. Test for units of
# "DAC units"
my $units = $Frm->uhdr("DATA_UNITS");
if ( defined $units && $units =~ /^DAC/ ) {
  # Calculate the power spectra, keeping the files on disk
  _CALCULATE_AVERAGE_POWERSPECTRUM_ KEEP=1 DISPLAY=$display_data
} else {
  orac_err "_CALC_SCUBA2_AVPSPEC_ must be given raw data only\n";
}
