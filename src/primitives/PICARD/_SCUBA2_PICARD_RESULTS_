# -*-cperl-*-

=head1 NAME

_SCUBA2_PICARD_RESULTS_ - store basic observation info in header

=head1 SYNOPSIS

_SCUBA2_PICARD_RESULTS_

=head1 DESCRIPTION

This PICARD primitive stores a hash reference containing details of
the current file, such as name, source and wavelength.

The stored hash is used and re-stored in subsequent primitives, and
the values are available for writing to a log file once processing is
complete.

However, the hash is only created if the recipe parameter C<LOGFILE>
is true.

=head1 ARGUMENTS

This primitive has no arguments.

=head1 EXTERNAL TASKS

No external tasks are used.

=head1 OUTPUT DATA

The uhdr entry C<PICARD_RESULTS> contains a hash reference. The hash
contains the following keys:

=over 4

=item * airmass

Mean airmass for current file.

=item * file

Name of input file.

=item * obsnum

Observation number.

=item * source

Source name.

=item * tau

Mean optical depth at 225 GHz for current file.

=item * wavelen

Wavelength in um (either 850 or 450).

=item * wvm

Mean WVM tau for current file.

=back

=head1 OUTPUT FILES

None

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2010 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# If LOGFILE has been specified store various properties of the
# observation for writing to the log file
if ($Frm->uhdr("RECPAR_LOGFILE")) {
  my %picard_results;
  $picard_results{file} = $Frm->file;

  # Object, observation number and wavelength
  $picard_results{source} = $Frm->hdr("OBJECT");
  $picard_results{obsnum} = $Frm->hdr("OBSNUM");
  $picard_results{wavelen} = ( $Frm->hdr("FILTER") =~ /^850/ ) ? "850" : "450";

  # Optical depth
  use JCMT::Tau;
  my $tau = 0.5 * ($Frm->hdr("WVMTAUST") + $Frm->hdr("WVMTAUEN"));
  $picard_results{wvm} = $tau;
  ($picard_results{tau}, my $status) = get_tau( $Frm->hdr("FILTER"),
						"CSO", $tau);

  # Airmass
  $picard_results{airmass} = 0.5 * ( $Frm->hdr("AMSTART") +
				     $Frm->hdr("AMEND"));

  $Frm->uhdr("PICARD_RESULTS", \%picard_results);
}
