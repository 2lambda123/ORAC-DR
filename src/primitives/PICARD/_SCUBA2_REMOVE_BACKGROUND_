# -*-cperl-*-

=head1 NAME

_SCUBA2_REMOVE_BACKGROUND_ - remove a background from processed images

=head1 SYNOPSIS

_SCUBA2_REMOVE_BACKGROUND_

=head1 DESCRIPTION

Establishes the type of background removal to carry out by reading
recipe parameters stored in the Frame user header before calling the
SCUBA-2 background-removal primitive. All the processing control is
done with recipe parameters.

=head1 ARGUMENTS

This primitive has no arguments.

=head1 EXTERNAL TASKS

The following external task is used:

=over 4

=item ORAC-DR PRIMITIVES

_REMOVE_BACKGROUND_FROM_IMAGE_

=back

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2010 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Mask the source before removing a background? Default to no.
my $mask = (defined $Frm->uhdr("RECPAR_MASK_SOURCE") ) ?
  $Frm->uhdr("RECPAR_MASK_SOURCE") : 0;

# Establish a default radius - about twice the beamsize if not supplied
my $radius = (defined $Frm->uhdr("RECPAR_APERTURE_RADIUS")) ?
  $Frm->uhdr("RECPAR_APERTURE_RADIUS") :
  (($Frm->hdr("FILTER") =~ /850/) ? 30 : 15);

my $fitmethod = (defined $Frm->uhdr("RECPAR_BACKGROUND_FITMETHOD"))
  ? lc($Frm->uhdr("RECPAR_BACKGROUND_FITMETHOD")) : "fitsurface";

# Flag to keep the fitted surface on disk - default to no
my $keepsurface = (defined $Frm->uhdr("RECPAR_FITSURFACE_KEEPSURFACE"))
  ? $Frm->uhdr("RECPAR_FITSURFACE_KEEPSURFACE") : 0;

# Type of fit for fitsurface/makesurface
my $fittype = ( defined $Frm->uhdr("RECPAR_FITSURFACE_FITTYPE") ) ?
  $Frm->uhdr("RECPAR_FITSURFACE_FITTYPE") : "polynomial";

# Fit parameters - should be a reference to an array with 2 values
my $fitpar = $Frm->uhdr("RECPAR_FITSURFACE_FITPAR")
  if ( defined $Frm->uhdr("RECPAR_FITSURFACE_FITPAR") );

# Findback box size
my $findback_box = ( defined $Frm->uhdr("RECPAR_FINDBACK_BOX") ) ?
  $Frm->uhdr("RECPAR_FINDBACK_BOX") : 11;

# Now remove the background
_REMOVE_BACKGROUND_FROM_IMAGE_ MASK=$mask FORCE=1 METHOD=$fitmethod FITTYPE=$fittype FITPAR=$fitpar RADIUS=$radius BOX=$findback_box
