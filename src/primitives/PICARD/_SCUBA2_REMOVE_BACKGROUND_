# -*-cperl-*-

=head1 NAME

_SCUBA2_REMOVE_BACKGROUND_ - remove a background from processed images

=head1 SYNOPSIS

_SCUBA2_REMOVE_BACKGROUND_

=head1 DESCRIPTION

Establishes the type of background removal to carry out by reading
recipe parameters stored in the Frame user header before calling the
SCUBA-2 background-removal primitive. All the processing control is
done with recipe parameters.

=head1 ARGUMENTS

This primitive has the following arguments:

=over 4

=item B<MASK>

Flag to denote whether or not to mask out a circular region centred on
the source. Default is 0 (do not mask).

=item B<USEPAR>

A flag to denote whether or not the C<REMOVE_BACKGROUND> recipe
parameter is to be used to decide whether the background should be
removed. Default is 0 (ignore recipe parameter).

=back

=head1 EXTERNAL TASKS

The following external task is used:

=over 4

=item ORAC-DR PRIMITIVES

_REMOVE_BACKGROUND_FROM_IMAGE_

=back

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2010,2013 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# This primitive mostly just sets up parameters for calling the
# SCUBA-2 primitive which removes the background. Note that if
# FITMETHOD is FINDBACK then most of the other parameters are ignored.

# Method for fitting background - default to fitsurface. The only
# other likely choice here is findback.
my $fitmethod = (defined $Frm->uhdr("RECPAR_BACKGROUND_FITMETHOD"))
  ? lc($Frm->uhdr("RECPAR_BACKGROUND_FITMETHOD")) : "fitsurface";

# Override fitmethod if the
my $usepar = get_prim_arg($_PRIM_ARGS_, "USEPAR", 0);
if ($usepar) {
  $fitmethod = "none" unless ($Frm->uhdr("RECPAR_REMOVE_BACKGROUND"));
}

unless ( $fitmethod eq "none" ) {
  ### Parameters relevant to using FITSUTRFACE ###

  # Mask the source before removing a background? Default is
  # no. Override with recipe parameter.
  my $mask = get_prim_arg($_PRIM_ARGS_, "MASK", 0);
  $mask = $Frm->uhdr("RECPAR_MASK_SOURCE")
    if (defined $Frm->uhdr("RECPAR_MASK_SOURCE"));

  # Issue warning if fitmethod is findback and mask = 1
  orac_warn "Source will not be masked when BACKGROUND_FITMETHOD = FINDBACK\n"
    if ($mask && $fitmethod eq "findback");

  # Establish a default radius - about twice the beamsize if not supplied
  my $radius = (defined $Frm->uhdr("RECPAR_APERTURE_RADIUS")) ?
    $Frm->uhdr("RECPAR_APERTURE_RADIUS") :
      (($Frm->hdr("FILTER") =~ /850/) ? 30 : 15);

  # Type of fit for fitsurface/makesurface
  my $fittype = ( defined $Frm->uhdr("RECPAR_FITSURFACE_FITTYPE") ) ?
    $Frm->uhdr("RECPAR_FITSURFACE_FITTYPE") : "polynomial";

  # Fit parameters - should be a reference to an array with 2 values
  my $fitpar = $Frm->uhdr("RECPAR_FITSURFACE_FITPAR")
    if ( defined $Frm->uhdr("RECPAR_FITSURFACE_FITPAR") );

  # Flag to keep the fitted surface on disk - default to no
  my $keepsurface = (defined $Frm->uhdr("RECPAR_FITSURFACE_KEEPSURFACE"))
    ? $Frm->uhdr("RECPAR_FITSURFACE_KEEPSURFACE") : 0;

  ### Parameter relevant to using FINDBACK ###

  # Findback box size
  my $findback_box = ( defined $Frm->uhdr("RECPAR_FINDBACK_BOX") ) ?
    $Frm->uhdr("RECPAR_FINDBACK_BOX") : 11;

  ### Call SCUBA-2 primitive ###

  # Now remove the background
  _REMOVE_BACKGROUND_FROM_IMAGE_ MASK=$mask FORCE=1 METHOD=$fitmethod FITTYPE=$fittype FITPAR=$fitpar RADIUS=$radius BOX=$findback_box
}
