# -*-perl-*-

=head1 NAME

_SET_FRAME_FITS_ITEM_

=head1 SYNOPSIS

  _SET_FRAME_FITS_ITEM_  KEY=OBJECT VALUE=TEST

=head1 DESCRIPTION

Adds or modifies a FITS header for the Frame.  The header is changed
both in the physical file and in the Frame's header object.

=head1 PARAMETERS

=over 4

=item B<KEY>

The FITS keyword.

=item B<VALUE>

The new value for the KEY keyword.

=item B<COMMENT>

The comment string for the KEY keyword.  If it is not defined, the
current comment will be retained.

=item B<STRING>

Boolean.  If true, the header item will be forced to a string, if
false (but defined) the item will be forced to a numeric value.  If
not defined, the new item will be a string if the item already exist
and is currently a string, else the default FITSMOD behaviour will be
used.

=back

=head1 AUTHORS

Malcolm Currie E<lt>mjc@star.rl.ac.ukE<gt>,
Tim Jenness E<lt>t.jenness@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2001-2005 Particle Physics and Astronomy Research Council.
All Rights Reserved.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful,but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place,Suite 330, Boston, MA  02111-1307, USA

=cut

# Get argument values.
my $key = ( $_SET_FRAME_FITS_ITEM_{'KEY'} || undef );
my $value = ( $_SET_FRAME_FITS_ITEM_{'VALUE'} || undef );
my $comment = ( $_SET_FRAME_FITS_ITEM_{'COMMENT'} || undef );
my $isstring = ( $_SET_FRAME_FITS_ITEM_{'STRING'} || undef );

if ( (!defined( $key )) || (!defined( $value )) ) {
   orac_warn "Must specify key/value pair for FITS header.\n";

} else {

# Obtain the file name of the current Frame.
   my $file = $Frm->file;

# Form argument strings for optional arguments.
   my $commentarg = " ";
   if ( defined( $comment ) ) { $commentarg = "COMMENT=$comment"; }
   my $stringarg = " ";
   if ( defined( $isstring ) ) { $stringarg = "STRING=$isstring"; }

# Let the generic primitive do the work.
   _SET_FILE_FITS_ITEM_ KEY=$key VALUE=$value FILE=$file $commentarg $stringarg

# Update the header in the $Frm object.
   $Frm->hdr( $key => $value );
}
