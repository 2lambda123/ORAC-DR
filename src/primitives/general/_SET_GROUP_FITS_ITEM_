# _SET_GROUP_FITS_ITEM_   -*-perl-*-
#
# adds or modifies a fits header for the Frm object

my $key = ($_SET_GROUP_FITS_ITEM_{'KEY'} || undef);
my $value = ($_SET_GROUP_FITS_ITEM_{'VALUE'} || undef);
my $comment = ($_SET_GROUP_FITS_ITEM_{'COMMENT'} || undef);

if((!defined($key)) || (!defined($value))) {
  orac_warn "Must specify key/value pair for FITS header.\n";
} else {

  my $group = $Grp->file;

  # check if the group file exists

  my $fullname = $group . $Grp->filesuffix;
  if(-e $fullname) {
  
    # get the fits header
    
    my ($hashref, $status) = NDF::fits_read_header($group);
    
    # modify the comment (set to $C [so as to keep the previous comment] if undefined, 
    # replace | with a space, put single quotes around it)
    
    if(!defined($comment)) { $comment = '\$C'; }
    $comment =~ s/\|/ /g;
    $comment = "\'" . $comment . "\'";

    if(exists($$hashref{$key})) {
      
      # the key exists, so update with the new value (and comment if necessary)
      
      my $pars = "edit=update position=! string=false";
      $Mon{'ndfpack_mon'}->obeyw("fitsmod","ndf=$group keyword=$key value=$value comment=$comment $pars");
      
    } else {
      
      # the key doesn't exist, so add the new value (and comment if necessary)
      
      my $pars = "edit=write position=! string=false";
      $Mon{'ndfpack_mon'}->obeyw("fitsmod","ndf=$group keyword=$key value=$value comment=$comment $pars");
      
    }
    
    # update the $Grp object header
    
    $Grp->hdr($key => $value);
    
  }
}
