# -*-cperl-*-

=head1 NAME

_WRITE_AST_REGION_

=head1 DESCRIPTION

This primitive writes an AST Region to a file.

=head1 ARGUMENTS

=over 4

=item FILE = STRING (Given)

The filename to which the AST Region will be written.

=item GROUP = INTEGER (Given)

This parameter defines which AST Region to use. If true, then the
Group AST Region is used. If false, then the Frame AST Region is
used. [0]

=back

=head1 NOTES

=over 4

=item *

The AST Region is obtained from the MAP_ASTREGION uhdr of either the
current Frame or Group object (see the C<GROUP> argument).

=back

=head1 OUTPUT DATA

=over 4

The AST Region in a textfile.

=back

=head1 TASKS

None.

=head1 REQUIRED PERL MODULES

Starlink::AST.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

# Handle arguments.
my $file = get_prim_arg( $_PRIM_ARGS_, "FILE", undef );
if( ! defined( $file ) ) {
  orac_throw "FILE parameter to _WRITE_AST_REGION_ must be defined. Programming error";
}
my $group = get_prim_arg( $_PRIM_ARGS_, "GROUP", 0 );

# Retrieve the AST Region.
my $region = ( $group ? $Grp->uhdr( "MAP_ASTREGION" ) : $Frm->uhdr( "MAP_ASTREGION" ) );
if( ! defined( $region ) ) {
  orac_throw "Cannot write an AST Region if there isn't one to write! Programming error";
}

# Create an AST Channel and write the Region.
my @lines;
my $channel = new Starlink::AST::Channel( sink => sub { push( @lines, $_[0] ) } );
$channel->Write( $region );

# Strip leading whitespace from the lines.
foreach ( @lines ) {
  s/^\s*//;
}

# Write the lines to the requested file.
open my $fh, ">", $file or orac_throw "Cannot open file $file: $!\n";
map { print $fh "$_\n" } @lines;
close $fh;
