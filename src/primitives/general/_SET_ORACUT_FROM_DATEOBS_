# -*-cperl-*-

=head1 NAME

_SET_ORACUT_FROM_DATEOBS_ - determine a suitable ORACUT from DATE-OBS

=head1 SYNOPSIS

 _SET_ORACUT_FROM_DATEOBS_

 _SET_ORACUT_FROM_DATEOBS_ GROUP=1

=head1 DESCRIPTION

Determine a suitable value for the ORACUT FITS header from the current
DATE-OBS entry. ORACUT is normally derived from UTDATE; however, that
FITS header is removed when files from different UT dates are combined
and some primitives (such as those for SCUBA-2 calibration) rely on
ORACUT. Therefore if ORACUT is not present, a suitable value is
obtained from the DATE-OBS hdr entry, which should always be present.

=head1 ARGUMENTS

This primitive supports the following argument:

=over 4

=item B<GROUP>

If true, set ORACUT for the current Group hdr. Otherwise, use the
current Frame. Default is 0 (false).

=back

=head1 EXTERNAL TASKS

No external tasks are used.

=head1 NOTES

None.

=head1 OUTPUT DATA

The current object hdr has C<ORACUT> added if not present.

=head1 OUTPUT FILES

None.

=head1 AUTHOR

Andy Gibb E<lt>agg@astro.ubc.caE<gt>

=head1 COPYRIGHT

Copyright (C) 2014 University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

my $group = get_prim_arg($_PRIM_ARGS_, "GROUP", 0);
my $Obj = ($group) ? $Grp : $Frm;

unless (defined $Obj->hdr("ORACUT")) {
  if (defined $Obj->hdr("DATE-OBS")) {
    use DateTime::Format::ISO8601;
    my $dt = DateTime::Format::ISO8601->parse_datetime($Obj->hdr("DATE-OBS"));
    my $utdate = $dt->ymd("");
    orac_err "ORACUT not defined in header: setting UT date from DATE-OBS: $utdate\n";
    $Obj->hdr(ORACUT => $utdate);
  } else {
    orac_err "Unable to determine a suitable UT date: DATE-OBS is not defined\n";
  }
}
