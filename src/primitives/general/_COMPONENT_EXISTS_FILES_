# -*-cperl-*-

=head1 NAME

_COMPONENT_EXISTS_FILES_ - Check whether or not a given NDF component exists in a list of files

=head1 DESCRIPTION

Checks to see if the given NDF component exists in a list of
files. Returns a list of those files with that component.

Prints a warning if some of the files do not contain the component.

Prints an error if none of the files have the component.

=head1 ARGUMENTS

=over 4

=item B<COMPONENT>

Full path to the NDF component.

=item B<FILES>

Array reference with list of files to test.

=back

=head1 NOTES

=over 4

=back

=head1 OUTPUT DATA

The primitive hash contains the following key on exit, provided at
least one file contained the component:

=over 4

=item COMPFILES

An array reference containing the list of files with the given NDF component.

=back

=head1 TASKS

=over 4

=item ORAC-DR PRIMITIVES

_COMPONENT_EXISTS_

=back

=head1 REQUIRED PERL MODULES

=head1 AUTHORS

Andy Gibb E<lt>agg@astro.ubc.ca<gt>

=head1 COPYRIGHT

Copyright (C) 2013 the University of British Columbia. All Rights
Reserved.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or (at
your option) any later version.

This program is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
USA.

=cut

# Retrieve parameters.
my $component = get_prim_arg($_PRIM_ARGS_, "COMPONENT", undef);
my $files = get_prim_arg($_PRIM_ARGS_, "FILES", undef);

if( ! defined( $component ) ) {
  orac_throw "Programming error: COMPONENT parameter to _COMPONENT_EXISTS_ must be given";
}

if( ! defined( $files ) ) {
  orac_throw "Programming error: FILE parameter to _COMPONENT_EXISTS_ must be given";
}

if (ref($files) eq "ARRAY") {
  my @compfiles;
  my @infiles = @{$files};
  foreach my $file (@infiles) {
    _COMPONENT_EXISTS_ COMPONENT=$component FILE=$file
    push (@compfiles, $file) if ($_COMPONENT_EXISTS_{EXISTS});
  }

  if (@compfiles) {
    $_COMPONENT_EXISTS_FILES_{COMPFILES} = \@compfiles;

    if (scalar(@compfiles) != scalar(@infiles)) {
      orac_warn "Only ".scalar(@compfiles)." of ".scalar(@infiles)." files have a $component component\n";
    }

  } else {
    orac_err "None of the input files contain a $component component\n";
  }
}
