=head1 NAME

_FILTER_QUOTED_STRING_

=head1 DESCRIPTION

This primitive prepares a string for use in Starlink command lines,
such that the string may be passed to a character parameter without
losing any quotation marks within the string.  This will typically be
passed to an NDF character component.

The primitive performs this by doubling any quotation marks present
within the string, and escaping these too, if necessary.  This should
be used where the string is a priori unknown and may contain quotes
such as those to represent arcseconds and arcminutes, or a possessive
like "Barnard's Loop".  A common example is a user-defined object
name.

=head1 ARGUMENTS

=over 4

=item SINGLE = BOOLEAN (Given)

If this is true (1), the title has been wrapped in single quotes.
For example,

=over 4

my $title = '$object offset by 10"';

=back

If it is false (0), it has been enclosed in double quotes.
For example,

=over 4

my $title = "Halley's Comet";

=back

[1]

=item QUOTED = STRING (Returned)

The filtered string in which the quotation marks have been doubled
and escaped.

=item STRING = STRING (Given)

The string that may have quotation mark in its value, perhaps
derived from a user-supplied object name.  The primitive aborts with
an error if this argument is undefined.  [undef]

=back

=head1 AUTHORS

Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 2017 Science & Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut


# Handle arguments.
# =================

my $single = get_prim_arg( $_PRIM_ARGS_, 'SINGLE', 1 );
my $string = get_prim_arg( $_PRIM_ARGS_, 'STRING', undef );
if ( ! defined $string ) {
   orac_err "Programming error: STRING argument has not been " .
            "supplied to _FILTER_QUOTED_STRING_";
}

# Replace quotes to preserve the string when passing it to a Starlink
# application.  Double the quotation marks but also escape when the
# quote is also that being used to delimit the string in the calling
# primitive.
if ( $single ) {
   $string =~ s/"/""/g;
   $string =~ s/'/\'\'/g;
} else {
   $string =~ s/'/''/g;
   $string =~ s/"/\"\"/g;
}

$_FILTER_QUOTED_STRING_{QUOTED} = $string;
