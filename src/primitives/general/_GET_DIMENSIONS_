=head1 NAME

_GET_DIMENSIONS_ - Retrieve a frame's dimensions.

=head1 DESCRIPTION

This primitive returns the upper and lower bounds for a given frame.

=head1 PARAMETERS

=over 4

=item DIMS = ARRAY REFERENCE (Returned)

A reference to an array of the lengths of the dimensions of the
object.

=item GROUP = LOGICAL (Given)

If true, then the dimensions of the current Group object will be
returned. Otherwise, the dimensions of the current Frame object will
be returned. [0]

=item LBOUND = ARRAY REFERENCE (Returned)

A reference to an array of the lower bounds of the object.

=item UBOUND = ARRAY REFERENCE (Returned)

A reference to an array of the upper bounds of the object.

=back

=head1 NOTES

=over 4

=item *

The arrays returned by reference in the DIMS, LBOUND, and UBOUND
parameters will have as many members as there are dimensions in the
input object.

=back

=head1 OUTPUT DATA

None.

=head1 TASKS

KAPPA: NDFTRACE.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh <b.cavanagh@jach.hawaii.edu> (JAC)

=head1 COPYRIGHT

Copyright (C) 2006 Particle Physics and Astronomy Research Council.
All Rights Reserved.

=cut

# Find out if we're doing the Group or the Frame.
my $Obj = ( defined( $_GET_DIMENSIONS_{GROUP} ) && $_GET_DIMENSIONS_{GROUP}
            ? $Grp
            : $Frm
          );

my $file = $Obj->file;

# Run NDFTRACE.
$Mon{'ndfpack_mon'}->obeyw( "ndftrace", "ndf=$file" );

# Retrieve the lower and upper bounds.
( my $ORAC_STATUS, my @lbound ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "lbound" );
( $ORAC_STATUS, my @ubound ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "ubound" );
( $ORAC_STATUS, my @dims ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "dims" );

# And return.
$_GET_DIMENSIONS_{DIMS} = \@dims;
$_GET_DIMENSIONS_{LBOUND} = \@lbound;
$_GET_DIMENSIONS_{UBOUND} = \@ubound;
