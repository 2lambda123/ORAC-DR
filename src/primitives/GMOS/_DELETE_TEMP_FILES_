#+
# Name:
#    DELETE_TEMP_FILES
#
# Purpose:
#    Removes a recipe's intermediate GMOS frames.
#
# Language:
#    Perl5
#
# Description:
#    Generic primitive to handle end of recipe tidy up of intermediate
#    GMOS files.
#
# Notes:
#    In some cases the GROUP primitives require certain intermediate
#    files to be available in order for the recipe to proceed (eg 
#    recipes involving the recalculation of flatfields will want to 
#    retain the pre-flatfielded data on disk so that the flatfielded
#    images can be regenerated).  This means that some care must be 
#    taken when selecting files for removal.  If a recipe fails when
#    too many files have been marked for removal, simply add extensions
#    to the KEEP list until the recipe works or contact the person
#    responsible for the recipe for more clarification.
#
#    If the environment variable ORAC_KEEP is set, no files will be
#    deleted.
#
# Arguments:
#    KEEP = CHARACTER (Read)
#       Comma-separated list of suffices for files that are not to be
#       deleted.
#
#       If KEEP is not supplied, *NO* files are removed.  Whilst the 
#       logical behaviour for an undefined KEEP would be to remove all
#       files, in general this behaviour is probably not desirable (and
#       may indicate an error in the recipe---presumably the user requires
#       at least one file to be left over after the pipeline runs...).  For
#       this reason files are only deleted if some extensions are
#       explicitly requested.
#
# Examples:
#    _DELETE_TEMP_FILES_ KEEP=_trn,_flat
#       This would erase all files associated with the current frame
#       (group files do not count) except for those ending in _trn and
#       _flat.
#
# Authors:
#    TJ: Tim Jenness (JAC)
#    MJC: Malcolm J. Currie (JAC)
#    BC: Brad Cavanagh (JAC)
#
# Copyright:
#    Copyright (C) 1998-2003 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Check the environment variable ORAC_KEEP.
    if ( ! exists( $ENV{ORAC_KEEP} ) ) {

# Obtain the argument.
       my $keep = $_DELETE_TEMP_FILES_{KEEP};

# Generate array of extensions
       my @extensions = split(/,/,$keep);

# If the extensions array contains something proceed.
       if ( $#extensions > -1 ) {
          orac_print "Removing temporary files...\n";

# Get the list of intermediate files from the frame.
          my @intermediates = $Frm->intermediates;

# Create temporary frame object to handle the deletion.
          my $tempFrm = new $Frm;

# Loop over intermediate files and compare with the list of
# extensions to be kept.
          foreach my $file ( @intermediates ) {

# Loop round if the filename ends in number or number.I1 or number.I2,
# since we will treat these as special e.g. raw data files.
             next if $file =~ /\d+_\d+$/ ||
                     $file =~ /\d+_\d+\.I[1-3]$/ ;

# May want to also check for special case of files having
# no extension at all (e.g. o65).

# Compare with the extensions.
             unless ( grep {$file =~ /$_/} @extensions ) {

# This means the file can be removed.  The easiest thing is to
# ask the Frame to remove the file.
                $tempFrm->file( $file );

                $tempFrm->erase;

             }
          }

# Undefine the tempFrm object.
          undef $tempFrm;

# Frossie wants to save memory by clearing the intermediates
# array.  We don't need it anyway...
          @{$Frm->intermediates} = ();

        } else {
           orac_warn "Primitive called without specifying any files to be kept\nNot deleting any temporary files....\n";
        }

    }

# Podule
# ======

=head1 NAME

_DELETE_TEMP_FILES_ -- Removes a recipe's intermediate GMOS frames

=head1 DESCRIPTION

Generic primitive to handle end of recipe tidy up of intermediate
GMOS files.

=head1 NOTES

In some cases the GROUP primitives require certain intermediate
files to be available in order for the recipe to proceed (eg 
recipes involving the recalculation of flatfields will want to 
retain the pre-flatfielded data on disk so that the flatfielded
images can be regenerated).  This means that some care must be 
taken when selecting files for removal.  If a recipe fails when
too many files have been marked for removal, simply add extensions
to the KEEP list until the recipe works or contact the person
responsible for the recipe for more clarification.

If the environment variable ORAC_KEEP is set, no files will be
deleted.

=head1 ARGUMENTS

=over 4

=item KEEP = CHARACTER (Read)

Comma-separated list of suffices for files that are I<not> to be deleted.

If KEEP is not supplied, B<NO> files are removed.  Whilst the logical
behaviour for an undefined KEEP would be to remove all files,
in general this behaviour is probably not desirable (and may indicate
an error in the recipe---presumably the user requires at least
one file to be left over after the pipeline runs...).  For this reason
files are only deleted if some extensions are explicitly requested.

=back

=head1 EXAMPLES

=over 4

=item _DELETE_TEMP_FILES_ KEEP=_trn,_flat

This would erase all files associated with the current frame (group files
do not count) except for those ending in _trn and _flat.

=back

=head1 AUTHORS

TJ: Tim Jenness (JAC)
MJC: Malcolm J. Currie (JAC)
BC: Brad Cavanagh (JAC) <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 1998-2003 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

