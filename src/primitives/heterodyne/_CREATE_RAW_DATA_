=head1 NAME                                     -*-cperl-*-

_CREATE_RAW_DATA_ - Creates a copy of the raw data.

=head1 DESCRIPTION

This primitive makes copies of the raw data files of an observation in
$ORAC_DATA_OUT.

=head1 ARGUMENTS

None.

=head1 NOTES

None.

=head1 OUTPUT DATA

Copies of the raw data with the suffix _raw.

=head1 TASKS

KAPPA: NDFCOPY.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Jamie Leech E<lt>j.leech@jach.hawaii.eduE<gt>

Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 1998-2002 Particle Physics and Astronomy Research Council.

Copyright (C) 2018 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

if ( $Frm->nfiles == 1 ) {

  my ( $in, $out ) = $Frm->inout( "_raw" );
  $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );
  orac_print "$in to $out: Copied NDF.\n";
  $Frm->files( $out );

} else {

  foreach my $i ( 1..$Frm->nfiles ) {
    my ( $in, $out ) = $Frm->inout( "_raw", $i );
    $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );
    orac_print "$in to $out: Copied NDF.\n";
    $Frm->file( $i, $out );
  }
}

# Tidy up output.
orac_print "\n";
