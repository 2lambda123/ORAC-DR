# -*-cperl-*-

=head1 NAME

_MERGE_HYBRID_MODE_ - Merge hybrid mode observations in the frequency
domain.

=head1 DESCRIPTION

This primitive operates on hybrid-mode observations.  It first
determines a DC-level offset between corresponding subband
observations, using the median of entire spectra.  The DC offset is
added to or removed from the subband spectra, and the corresponding
subband spectra are mosaicked together to form time-series cubes with
a greater frequency extent.

=head1 ARGUMENTS

=over 4

None.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for ACSIS data taken in hybrid mode.

=item *

This primitive only operates if the ISHYBRID user header is set for
the current Frame object.

=back

=head1 OUTPUT DATA

=over 4

=item *

The DC-corrected time-series cubes with suffix _dc.

=item *

The merged time-series cube with suffix _merge.

=back

=head1 TASKS

KAPPA: COLLAPSE, MANIC, MATHS, NDFTRACE, WCSMOSAIC.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Malcolm J. Currie E<lt>mjc@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2008, 2013 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

if( $Frm->uhdr( "ISHYBRID" ) ) {

  orac_print "Hybrid mode observations. Merging spectra.\n";

  my %newFrms;
  my @newfrmout;

  # Split up the files into pairs, paired by NSUBSCAN header.
  foreach my $file ( $Frm->files ) {
    my $tmpFrm = new $Frm;
    $tmpFrm->files( $file );
    push @{$newFrms{$tmpFrm->hdr( "NSUBSCAN" )}}, $file;
  }

  foreach my $nsubscan ( sort keys %newFrms ) {

    my $files = $newFrms{$nsubscan};

    my @outfiles;

    orac_say " Calculating overlap for subscan $nsubscan.";

    # Get the overlap range.
    _CALCULATE_HYBRID_OVERLAP_ FILE1=$files->[0] FILE2=$files->[1]
    my $low = $_CALCULATE_HYBRID_OVERLAP_{LBOUND};
    my $high = $_CALCULATE_HYBRID_OVERLAP_{UBOUND};

    # Retrieve bounds for each file.
    _GET_DIMENSIONS_ FILE=$files->[0]
    my $lbounds1 = $_GET_DIMENSIONS_{LBOUND};
    my $ubounds1 = $_GET_DIMENSIONS_{UBOUND};

    _GET_DIMENSIONS_ FILE=$files->[1]
    my $lbounds2 = $_GET_DIMENSIONS_{LBOUND};
    my $ubounds2 = $_GET_DIMENSIONS_{UBOUND};

    orac_print sprintf( " Overlap range: [%d:%d]\n", $low, $high );

    my $range = "";
    if ( $low > $high ) {
      orac_warn "No overlap between the input cubes.  Only using median over whole spectrum to determine DC offset";
    }

    # Retrieve the units so we can set them back to whatever they are
    # now.  MATHS trounces units.
    $Mon{'ndfpack_mon'}->obeyw( "ndftrace", "ndf=" . $files->[0] );
    my ( $ORAC_STATUS, $units ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "units" );

    # Use COLLAPSE to find the median for each spectrum.
    my $temp1file = new ORAC::TempFile( 0 );
    my $temp2file = new ORAC::TempFile( 0 );

    my $params = "in=" . $files->[0] . "($range,,) out=$temp1file";
    $params .= " estimator=median axis=spec variance wlim=0.0";
    $Mon{'kappa_mon'}->obeyw( "collapse", "$params" );

    $params = "in=" . $files->[1] . "($range,,) out=$temp2file";
    $params .= " estimator=median axis=spec variance=true wlim=0.0";
    $Mon{'kappa_mon'}->obeyw( "collapse", "$params" );

    # DC level adjustment is half the difference.
    my $temp3file = new ORAC::TempFile( 0 );
    $params = "exp=((ib-ia)/2) ia=$temp1file ib=$temp2file out=$temp3file";
    $Mon{'kappa_mon'}->obeyw( "maths", "$params" );

    # Grow this DC adjustment into a cube and add it to the first file.
    my $temp4file = new ORAC::TempFile( 0 );
    $params = "in=$temp3file out=$temp4file axes=[0,1,2]";
    $params .= "lbound=" . $lbounds1->[0] . " ubound=" . $ubounds1->[0];
    $Mon{'kappa_mon'}->obeyw( "manic", "$params" );

    ( undef, my $out ) = $Frm->inout( "_dc", $nsubscan );
    $params = "in1=" . $files->[0] . " in2=$temp4file out=$out";
    $Mon{'kappa_mon'}->obeyw( "add", "$params" );
    $Mon{'ndfpack_mon'}->obeyw( "setunits", "ndf=$out units=$units" );
    orac_print $files->[0] . " to $out:\n";
    orac_print " Removed DC-level offset.\n";

    push @outfiles, $out;

    # Grow the DC adjustment into another cube and subtract it from
    # the second file.
    my $temp5file = new ORAC::TempFile( 0 );
    $params = "in=$temp3file out=$temp5file axes=[0,1,2]";
    $params .= "lbound=" . $lbounds2->[0] . " ubound=" . $ubounds2->[0];
    $Mon{'kappa_mon'}->obeyw( "manic", "$params" );

    $out = $files->[1];
    $out =~ s/_[a-z]+/_dc/;
    $params = "in1=" . $files->[1] . " in2=$temp5file out=$out";
    $Mon{'kappa_mon'}->obeyw( "sub", "$params" );
    $Mon{'ndfpack_mon'}->obeyw( "setunits", "ndf=$out units=$units" );
    orac_print $files->[1] . " to $out:\n";
    orac_print " Removed DC-level offset.\n";

    push @outfiles, $out;

    # We have two DC-corrected files, now WCSMOSAIC them.
    ( undef, $out ) = $Frm->inout( "_merge", $nsubscan );
    $params = "in='" . ( join ',',@outfiles ) . "' out=$out method=nearest";
    $params .= " lbnd=! ubnd=! ref=! variance genvar=false wlim=0";
    $Mon{'kappa_mon'}->obeyw( "wcsmosaic", "$params" );

    orac_print join ',', @outfiles;
    orac_print " to $out:\n";
    orac_print " Merged hybrid-mode files.\n";

    push @newfrmout, $out;
  }

  $Frm->product( "merge" );
  $Frm->files( @newfrmout );

  # Tidy-up output.
  orac_print "\n";
}
