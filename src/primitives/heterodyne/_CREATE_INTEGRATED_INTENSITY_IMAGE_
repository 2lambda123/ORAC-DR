# -*-perl-*-

=head1 NAME

_CREATE_INTEGRATED_INTENSITY_IMAGE_

=head1 DESCRIPTION

=head1 ARGUMENTS

=over 4

=item AXIS = INTEGER (Given)

The axis to collapse over.[3]

=item ESTIMATOR = STRING (Given)

The collapse estimator used to create the image. This can be any of
those listed for the ESTIMATOR parameter for the KAPPA/COLLAPSE
command. ['INTEG']

=item GROUP = LOGICAL (Given)

Whether or not to use the Group object to collapse over. [0]

=back

=head1 NOTES

=over 4

This primitive is suitable for ACSIS observations.

=item *

The collapsed WCS axis is not removed from the output WCS. For
example, if the cube is collapsed over the frequency axis, the WCS in
the resulting image will reflect the full frequency bounds over which
the cube was collapsed.

=item *

This primitive is suitable  for true 3-D data. This primitive will not
create a channel map from data that are functionally 3-D but only have
one pixel in any of the three dimensions.

=back

=head1 OUTPUT DATA

=over 4

=item *

The integrated intensity image with _integ suffix.

=back

=head1 TASKS

KAPPA: COLLAPSE.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Handle parameters.
my $axis = ( defined( $_CREATE_INTEGRATED_INTENSITY_IMAGE_{AXIS} ) ?
             $_CREATE_INTEGRATED_INTENSITY_IMAGE_{AXIS} :
             3 );
my $estimator = ( defined( $_CREATE_INTEGRATED_INTENSITY_IMAGE_{ESTIMATOR} ) ?
                  $_CREATE_INTEGRATED_INTENSITY_IMAGE_{ESTIMATOR} :
                  'INTEG' );
my $group = ( defined( $_CREATE_INTEGRATED_INTENSITY_IMAGE_{GROUP} ) ?
              $_CREATE_INTEGRATED_INTENSITY_IMAGE_{GROUP} :
              0 );

my $Obj;
my $in;
my $out;
if( $group ) {
  $Obj = $Grp;
  $in = $Grp->file;
  $out = $Grp->file . "_integ";
} else {
  $Obj = $Frm;
  ( $in, $out ) = $Frm->inout( "_integ" );
}

if( $group && $Grp->lastmember( $Frm ) ||
    ! $group ) {

  # Check the dimensionality.
  _GET_DIMENSIONS_
  my $dims = $_GET_DIMENSIONS_{DIMS};

  my $degen = 0;
  foreach ( @$dims ) {
    $degen = ( $_ == 1 );
    last if $degen;
  }

  # Only create an image if we don't have a degenerate cube.
  if( ! $degen ) {

    # Set up the parameters to COLLAPSE.
    my $params = "in=$in out=$out estimator=$estimator axis=$axis trim=false";

    # Run COLLAPSE.
    $Mon{'kappa_mon'}->obeyw( "collapse", "$params" );

    # Report to user.
    orac_print "$in to $out:\n";
    orac_print " Collapsed along axis $axis to form integrated intensity image.\n";

    # Create a temporary Frame object for Display.
    my $tmpFrm = new $Frm;
    $tmpFrm->file( $out );
    $Display->display_data( $tmpFrm ) if defined( $Display );

    # Tidy-up output.
    orac_print "\n";

  }
}
