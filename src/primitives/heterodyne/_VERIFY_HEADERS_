# -*-cperl-*-

=head1 NAME

_VERIFY_HEADERS_ - Verify the existence of some FITS headers.

=head1 DESCRIPTION

This primitive checks to see if FITS headers missing from old data are
in fact missing, and then creates them.

=head1 ARGUMENTS

None.

=head1 NOTES

=over 4

=item *

The OBSIDSS header is formed by joining OBSID and SUBSYSNR with an
underscore, if that header is missing.

=item *

If any of the BASEC1, BASEC2, or TRACKSYS headers are missing, they
will be filled in with values from the JCMTSTATE structure.

=back

=head1 OUTPUT DATA

None.

=head1 TASKS

None.

=head1 REQUIRED PERL MODULES

Astro::SLA.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

use Astro::SLA qw/ :constants /;

if( ! defined( $Frm->hdr( "OBSIDSS" ) ) &&
    defined( $Frm->hdr( "OBSID" ) ) &&
    defined( $Frm->hdr( "SUBSYSNR" ) ) ) {

  $Frm->hdr( "OBSIDSS", join( "_",
                              $Frm->hdr( "OBSID" ),
                              $Frm->hdr( "SUBSYSNR" ) ) );
}

if( ! defined( $Frm->hdr( "BASEC1" ) ) ) {
  $Frm->hdr( "BASEC1", $Frm->jcmtstate( "TCS_TR_BC1", 'start' ) * DR2D );
  orac_warn "BASEC1 header not defined in file. Using TCS_TR_BC1 from JCMTSTATE structure. Setting BASEC1 to " . $Frm->hdr( "BASEC1" ) . "\n";
}
if( ! defined( $Frm->hdr( "BASEC2" ) ) ) {
  $Frm->hdr( "BASEC2", $Frm->jcmtstate( "TCS_TR_BC2", 'start' ) * DR2D );
  orac_warn "BASEC2 header not defined in file. Using TCS_TR_BC2 from JCMTSTATE structure. Setting BASEC2 to " . $Frm->hdr( "BASEC2" ) . "\n";
}
if( ! defined( $Frm->hdr( "TRACKSYS" ) ) ) {
  $Frm->hdr( "TRACKSYS", $Frm->jcmtstate( "TCS_TR_SYS", 'start' ) );
  orac_warn "TRACKSYS header not defined in file. Using TCS_TR_SYS from JCMTSTATE structure. Setting TRACKSYS to " . $Frm->hdr( "TRACKSYS" ) . "\n";
}


$Frm->sync_headers;
