# -*-perl-*-

=head1 NAME

_QA_WRITE_REPORT_

=head1 DESCRIPTION

This primitive writes QA report information to a log file.

=head1 ARGUMENTS

=over 4

=item OBJ = ORAC::Frame/ORAC::Group object (Given)

The ORAC::Frame or ORAC::Group object from which the QA report
information will be taken. [current ORAC::Frame object]

=back

=head1 NOTES

=over 4

=item *

The log file will be named log.qa and will be created in
$ORAC_DATA_OUT.

=item *

QA report information will be obtained from the QA_REPORT_INFO uhdr.

=back

=head1 OUTPUT DATA

=over 4

=item *

The log file as log.qa in $ORAC_DATA_OUT.

=back

=head1 TASKS

None.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

# Handle arguments.
my $Obj = get_prim_arg( $_PRIM_ARGS_, "OBJ", undef, 1 );

if( defined( $Obj->uhdr( "QA_REPORT_INFO" ) ) ) {
  my %qa_report_info = %{$Obj->uhdr( "QA_REPORT_INFO" )};

  # Start a log file.
  my $log = new ORAC::LogFile( 'log.qa' );

  foreach my $header ( sort keys %qa_report_info ) {

    $log->addentry( $header );
    $log->addentry( "QA " . ( $qa_report_info{$header}{pass} ?
                              "passed"                       :
                              "failed" ) );
    $log->addentry( @{$qa_report_info{$header}{entries}} );
    $log->addentry( "" );
  }
}

