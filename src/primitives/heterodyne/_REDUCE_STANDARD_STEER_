# -*-cperl-*-

=head1 NAME

_REDUCE_STANDARD_STEER_

=head1 DESCRIPTION

This primitive supplies steering information for the REDUCE_STANDARD
recipe.  It acquires and reports the recipe parameters set by the
user. Using these parameters and internal header ORAC_OBJECT, it sets
recipe-steering metadata in the internal Frame headers.

=head1 ARGUMENTS

=over 4

None.

=back

=head1 STEERING PARAMETERS

=over 4

=item REMOVE_BASELINE = BOOLEAN

Whether or not to remove the baseline from the regridded cube. Set to
false if the observation is of a planet and true otherwise.

=head1 NOTES

=over 4

See the documentation of L<REDUCE_SCIENCE_STANDARD|REDUCE_SCIENCE_STANDARD>
for details of the available recipe parameters.

=back

=head1 OUTPUT DATA

=over 4

None.

=back

=head1 TASKS

None.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Malcolm J. Currie E<lt>mjc@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009, 2013, 2018 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

ORAC::Recipe::Parameters::verify_parameters( \%RECPARS, [ 'TRIM_PERCENTAGE',
                                                          'TRIM_PERCENTAGE_LOWER',
                                                          'TRIM_PERCENTAGE_UPPER' ] ) ;

if ( scalar keys %RECPARS >= 1 ) {
  orac_say( "\nRecipe parameter overrides:", "yellow" );
}


$Frm->uhdr( "REMOVE_BASELINE", 1 );
if ( defined( $Frm->uhdr( "ORAC_OBJECT" ) ) ) {
   if ( $Cal->isplanet( $Frm->uhdr( "ORAC_OBJECT" ) ) ||
        uc( $Frm->uhdr( "ORAC_OBJECT" ) )
         eq "MOON" ) {
      $Frm->uhdr( "REMOVE_BASELINE", 0 );
   }
}

my $lower_trim = 0;
if ( defined( $RECPARS{'TRIM_PERCENTAGE_LOWER'} ) ) {
  $Frm->uhdr( "RECPAR_TRIM_PERCENTAGE_LOWER", uc( $RECPARS{'TRIM_PERCENTAGE_LOWER'} ) );
  orac_say( " Setting lower spectral trimming to $RECPARS{'TRIM_PERCENTAGE_LOWER'} percent.", "yellow" );
  $lower_trim = 1;
}

my $upper_trim = 0;
if ( defined( $RECPARS{'TRIM_PERCENTAGE_UPPER'} ) ) {
  $Frm->uhdr( "RECPAR_TRIM_PERCENTAGE_UPPER", uc( $RECPARS{'TRIM_PERCENTAGE_UPPER'} ) );
  orac_say( " Setting upper spectral trimming to $RECPARS{'TRIM_PERCENTAGE_UPPER'} percent.", "yellow" );
  $upper_trim = 1;
}

if ( !( $lower_trim || $upper_trim ) ) {
  if ( defined( $RECPARS{'TRIM_PERCENTAGE'} ) ) {
    $Frm->uhdr( "RECPAR_TRIM_PERCENTAGE", uc( $RECPARS{'TRIM_PERCENTAGE'} ) );
    orac_say( " Setting spectral trimming to $RECPARS{'TRIM_PERCENTAGE'} percent.", "yellow" );
  }
}
