# -*-cperl-*-

=head1 NAME

_RECREATE_MASKED_OBS_FILES_

=head1 DESCRIPTION

This primtive recreates time-series data with emission masked, along
with cube files with the same emission masked. It does so by
retrieving a baseline mask as created by the
_REMOVE_BASELINE_THROUGH_SMOOTHING_ primitive, running it through
UNMAKECUBE to create time-series masks for each Frame in the current
Group, applying those masks to the raw time-series data, and using
those masks to create a mask cube for each Frame in the current group.

=head1 ARGUMENTS

=over 4

=item INTERP = STRING (Given)

The method to use when resampling the input sky cube pixel values, and
the method to use when spreading each input pixel value out between a
group of neighbouring output pixels when using MAKECUBE to generate
the cube. ['nearest']

=item PARAM1 = REAL (Given)

The first parameter required by the spreading method. This parameter
is required by all methods, and specifies how many arcseconds on
either side of the output position are to receive contributions from
the input pixel. A value of zero indicates that a suitable number
should be calculated automatically. [0]

=item PARAM2 = REAL (Given)

The second parameter required by the spreading method, but only for
SombCos, Gauss, SincSinc, SincCos, and SincGauss schemes. For the
SombCos, SincSinc, and SincCos schemes, it specifies the number of
arcseconds at which the envelope of the function goes to zero. The
minimum value is 1.0 pixels, and the run-time default value is 2.0
pixels.  For the Gauss and SincGauss scheme, it specifies the
full-width at half-maximum (FWHM) of the Gaussian envelope.  The
minimum value is 0.1 pixels, and the run-time default is 1.0
pixels. Note that these numbers are given in pixels and this parameter
takes the number of requested arcseconds. This is done because the
pixel scale could be automatically determined from the data. []

=item PIXSIZE = REAL (Given)

The output pixel scale. If not defined, this value is automatically
determined from the data. []

=item TILE = LOGICAL (Given)

Whether or not to break the spectral cubes into tiles.  [1]

=item TILEBORDER = INTEGER (Given)

The size of the border to be added to tiles. This is used when
smoothing the cube in spatial extent in later processing so as to not
introduce edge effects when merging tiles together. [0]

=back

=head1 NOTES

=over 4

=item *

The GAUSS regridding method cannot be used when re-creating the
timeseries cubes. If this option is supplied, the regridding will be
done using NEAREST.

=back

=head1 OUTPUT DATA

=over 4

None from this primitive, but see _CREATE_TIMESERIES_MASK_,
_CREATE_CUBE_MASK_FROM_GROUP_, and _MASK_TIMESERIES_DATA.

=back

=head1 TASKS

None, but see _CREATE_TIMESERIES_MASK_, _CREATE_CUBE_MASK_FROM_GROUP_,
and _MASK_TIMESERIES_DATA.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

my $interp = get_prim_arg( $_PRIM_ARGS_, "INTERP", "NEAREST" );
my $param1 = get_prim_arg( $_PRIM_ARGS_, "PARAM1", 0 );
my $param2 = get_prim_arg( $_PRIM_ARGS_, "PARAM2", undef );
my $pixsize = get_prim_arg( $_PRIM_ARGS_, "PIXSIZE", undef );
my $tile = get_prim_arg( $_PRIM_ARGS_, "TILE", 1 );
my $tileborder = get_prim_arg( $_PRIM_ARGS_, "TILEBORDER", 0 );

# Write a header to structure the commentary.
orac_say "\n\nRecreate time-series with emission masked";
my $underline = "-" x 59;
orac_say "$underline\n";

_CREATE_TIMESERIES_MASK_ INTERP=$interp PARAM1=$param1 PARAM2=$param2 PIXSIZE=$pixsize

_CREATE_CUBE_MASK_FRAME_FROM_GROUP_ SPREAD=$interp PARAM1=$param1 PARAM2=$param2 TILEBORDER=$tileborder PIXSIZE=$pixsize TILE=$tile

_MASK_TIMESERIES_DATA_

