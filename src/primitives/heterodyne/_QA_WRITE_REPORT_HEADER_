# -*-perl-*-

=head1 NAME

=head1 DESCRIPTION

=head1 ARGUMENTS

=over 4

=back

=head1 NOTES

=over 4

=back

=head1 OUTPUT DATA

=over 4

=back

=head1 TASKS

=head1 REQUIRED PERL MODULES

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

# Handle arguments.
my $Obj = get_prim_arg( $_PRIM_ARGS_, "OBJ", $Frm );
my $survey = get_prim_arg( $_PRIM_ARGS_, "SURVEY", undef, 1 );

my @entries;

_SETUP_QA_OPTIONS_
my %opts = %{$_SETUP_QA_OPTIONS_{'OPTS'}};

my $tune_info;
if( defined( $opts{'molecule'} ) ) {
  my $transition = $Obj->hdr( "TRANSITI" );
  $transition =~ s/\s+//g;
  $tune_info = join ' ', $Obj->hdr( "MOLECULE" ), $transition;
} else {
  $tune_info = $Obj->hdr( "LOFREQS" ) . " GHz";
}


my $header = "QA information for $survey for ";
$header .= $Obj->uhdr( "ORAC_UTDATE" );

# Check to see if we're a group object, and write the list of
# observations from that.
if( UNIVERSAL::isa( $Obj, "ORAC::Group" ) ) {
  $header .= " group from observations ";
  $header .= join ", ", map { $_->uhdr( "ORAC_OBSERVATION_NUMBER" ) } @{$Obj->members};
} else {
  $header .= " " . $Obj->uhdr( "ORAC_OBSERVATION_NUMBER" );
}

$header .= " $tune_info";

push @entries, $header;

$_QA_WRITE_REPORT_HEADER_{ENTRIES} = \@entries;
