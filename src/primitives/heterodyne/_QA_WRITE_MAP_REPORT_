# -*-perl-*-

=head1 NAME

=head1 DESCRIPTION

=head1 ARGUMENTS

=over 4

=back

=head1 NOTES

=over 4

=back

=head1 OUTPUT DATA

=over 4

=back

=head1 TASKS

=head1 REQUIRED PERL MODULES

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

my $group = get_prim_arg( $_PRIM_ARGS_, "GROUP", undef, 0 );

# Handle group.
my @Objs;
if( $group == 0 ) {
  push @Objs, $Frm;
} elsif( $group == 1 ) {
  push @Objs, $Grp;
} elsif( $group == 2 ) {
  @Objs = $Grp->members;
} else {
  orac_throw "Programming error: GROUP parameter to _QA_WRITE_MAP_REPORT_ must be 0, 1, or 2";
}

foreach my $Obj ( @Objs ) {

  my %qa_log_entries = %{$Obj->uhdr( "QA_MAP_LOG_ENTRIES" )};
  foreach my $survey ( sort keys %qa_log_entries ) {

    my $logfile = new ORAC::LogFile( "log.qa" );

    _QA_WRITE_REPORT_HEADER_ SURVEY=$survey OBJ=$Obj
    $logfile->addentry( @{$_QA_WRITE_REPORT_HEADER_{'ENTRIES'}} );
    $logfile->addentry( @{$qa_log_entries{$survey}} );

    $logfile->addentry( "" );

  }

}
