# -*-perl-*-

=head1 NAME

_QA_WRITE_TIMESERIES_REPORT_

=head1 DESCRIPTION

This primitive writes timeseries-based QA information to a log file.

=head1 ARGUMENTS

=over 4

=back

=head1 NOTES

=over 4

=back

=head1 OUTPUT DATA

=over 4

=back

=head1 TASKS

=head1 REQUIRED PERL MODULES

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2009 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

# Handle arguments.
my $timeseries = get_prim_arg( $_PRIM_ARGS_, "TIMESERIES", undef, 1 );
my $write = get_prim_arg( $_PRIM_ARGS_, "WRITE", 1 );

# Loop through the surveys in the timeseries hash.
foreach my $survey ( keys %{$timeseries} ) {

  my @entries;

  if( $write ) {
    _QA_WRITE_REPORT_HEADER_ SURVEY=$survey
    my @header_entries = @{$_QA_WRITE_REPORT_HEADER_{'ENTRIES'}};
    push @entries, @header_entries;
  }

  push @entries, "Timeseries data report:";
  push @entries, " Observation timeseries QA status: " . $timeseries->{$survey}->{status};
  push @entries, sprintf( " %.2f%% of timeseries data more than %.1f%% from Tsys prediction.", $timeseries->{$survey}->{percentage} * 100, $timeseries->{$survey}->{rmstol} * 100 );

  if( defined( $timeseries->{$survey}->{rmsmeantsysnum} ) ) {
    push @entries, sprintf( " %d samples had RMS above %.2f", $timeseries->{$survey}->{rmsmeantsysnum}, $timeseries->{$survey}->{rmsmeantsysval} );
  }

  push @entries, "";

  my %qa_log_entries;
  if( defined( $Frm->uhdr( "QA_LOG_ENTRIES" ) ) ) {
    %qa_log_entries = %{$Frm->uhdr( "QA_LOG_ENTRIES" )};
  }

  if( exists( $qa_log_entries{$survey} ) ) {
    push @{$qa_log_entries{$survey}}, @entries;
  } else {
    $qa_log_entries{$survey} = \@entries;
  }

  $Frm->uhdr( "QA_LOG_ENTRIES", \%qa_log_entries );

  if( $write ) {
    my $logfile = new ORAC::LogFile( "log.qa" );
    $logfile->addentry( @entries );
  }

}
