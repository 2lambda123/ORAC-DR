# -*-cperl-*-

=head1 NAME

_GET_MAKECUBE_PARAMS_SCAN_ - Calculate MAKECUBE parameters for a scan
observation.

=head1 DESCRIPTION

This primitive uses information in FITS headers to calculate MAKECUBE
parameters appropriate for an ACSIS scan observation.

=head1 ARGUMENTS

None.

=head1 NOTES

=over 4

=item *

This primitive is suitable for ACSIS scan observations.

=back

=head1 OUTPUT DATA

None.

=head1 TASKS

None.

=head1 REQUIRED PERL MODULES

None.

=head1 SEE ALSO

_GET_MAKECUBE_PARAMS_

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2008 Science and Technology Facilities Council.  All
Rights Reserved.

=cut

# Set up defaults for parameter string.
my $params = "autogrid=yes usedetpos=no";

# Set up defaults in the return hash.
my %return_hash = ( 'autogrid' => 'yes',
                    'usedetpos' => 'no',
                    'sparse' => 'no',
                  );

# We get the pixel scale by multiplying SCAN_VEL and STEPTIME headers,
# and the position angle comes from the MAP_PA header. Force the
# position angle to be between -45 and 45 degrees. Set the system to
# azel if the LOCL_CRD header is AZEL.
my $pixsize = $Frm->hdr( "SCAN_VEL" ) * $Frm->hdr( "STEPTIME" );
my $crota = 90 - $Frm->hdr( "MAP_PA" );
while ( $crota < -45 || $crota > 45 ) {
  if( $crota < -45 ) {
    $crota += 90;
  } elsif( $crota > 45 ) {
    $crota -= 90;
  }
}

$params .= " pixsize=$pixsize crota=$crota";
$return_hash{'pixsize'} = $pixsize;
$return_hash{'crota'} = $crota;

# If we SCANned in AZEL, then set the system to AZEL.
if( uc( $Frm->uhdr( "LOCL_CRD" ) ) eq 'AZEL' ) {
  $params .= " system=azel";
  $return_hash{'system'} = 'azel';
} else {
  $params .= " system=tracking";
  $return_hash{'system'} = 'tracking';
}

# Force parameters to be wrapped in spaces.
$params = " $params ";

# Return.
$_PRIM_ARGS_->{PARAMS} = $params;
$_PRIM_ARGS_->{HASH} = \%return_hash;
