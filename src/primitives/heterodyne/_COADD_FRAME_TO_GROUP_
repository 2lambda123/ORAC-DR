=head1 NAME                                     -*-perl-*-

_GROUP_MOSIAC_ - Examine files within a group - mosaic together those
that need mosaicking.

=head1 DESCRIPTION

If the frame is the last in the group, and there is
more than one frame in the group, mosaic the frames together.

=head1 ARGUMENTS

=over

None.

=back

=head1 AUTHOR

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

#######################
# Check that we are processing the last frame of the group
# and that there are some frames to coadd.

if( $Grp->firstmember( $Frm ) ) {

  # Delete the group file.
  unlink( $Grp->file );

}

if( $Grp->lastmember( $Frm ) ) {
# Process if we're the last member of the Grp.

  if( $Grp->firstmember( $Frm ) ) {
  # If we're the first member, NDFCOPY the Frm file to the Grp file.

    my $in = $Frm->file;
    my $out = $Grp->file;
    orac_print "Copying $in to $out...";
    $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );
    orac_print "done.\n";

    # Update the Grp object.
    $Grp->file( $out );

  } else {

    # WCSMOSAIC all of the Grp members together.

    my @files;

    # Create a textfile that will hold all of the files to be
    # WCSMOSAIC'ed.
    my $infile = new ORAC::TempFile( OPEN => 1,
                                     SUFFIX => '.lis' );
    my $tmp_fh = $infile->handle;
    foreach my $member ( $Grp->members ) {
      foreach my $file ( $member->files ) {
        print $tmp_fh $file . "\n";
        print "member: $file\n";
        push @files, $file;
      }
    }
    $infile->handle->close;

    my $out = $Grp->file;

    # Set up the arguments to WCSMOSAIC.
    my $params = "in='^" . $infile->file . "' out=$out ref=! ";
    $params   .= "lbnd=! ubnd=! method=nearest genvar=false";

    # Run WCSMOSAIC.
    orac_print "Coadding " . join ( ', ', @files ) . " to form $out...";
    $Mon{'kappa_mon'}->obeyw( "wcsmosaic", "$params" );
    orac_print "done.\n";

    # Update the Grp object.
    $Grp->file( $out );

  }

}

# Tidy up output.
orac_print "\n";
