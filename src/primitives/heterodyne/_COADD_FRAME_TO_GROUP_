=head1 NAME                                     -*-perl-*-

_GROUP_MOSIAC_ - Examine files within a group - mosaic together those than need mosaicking.

=head1 DESCRIPTION

If the frame is the last in the group, and there is
more than one frame in the group, mosaic the frames together.  The
criterion for mosacing will depend on the frequency axes of the
constituent frames, but the mosaicing should cover both sky and
frequency cases.


=head1 ARGUMENTS

=over

=item 4

=item ENCODING

=back

=head1 AUTHOR

Jamie Leech E<lt>j.leech@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 1998-2002 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

#######################
# Check that we are processing the last frame of the group
# and that there are some frames to coadd.

if( $Grp->firstmember( $Frm ) ) {

  # Delete the group file.
  unlink( $Grp->file );

}

if( $Grp->lastmember( $Frm ) ) {
# Process if we're the last member of the Grp.

  if( $Grp->firstmember( $Frm ) ) {
  # If we're the first member, NDFCOPY the Frm file to the Grp file.

    my $in = $Frm->file;
    my $out = $Grp->file;
    orac_print "Copying $in to $out...";
    $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );
    orac_print "done.\n";

    # Update the Grp object.
    $Grp->file( $out );

  } else {

    if( -e $Grp->file . $Grp->filesuffix ) {
    # If the Grp file exists, then WCSMOSAIC it and the current Frm.

      my $in1 = $Frm->file;
      my $in2 = $Grp->file;
      my $out = $Grp->file;

      # Create a temporary file to hold the output from
      # WCSMOSAIC. This file will then be copied into the Grp file
      # name.
      my $tmp = new ORAC::TempFile;
      my $tmpfile = $tmp->file;

      # Set up the arguments to WCSMOSAIC.
      my $params = "in=$in1,$in2 out=$tmpfile ref=$in2 lbnd=! ubnd=! ";
      $params   .= "method=sincsinc";

      # Run WCSMOSAIC.
      orac_print "Coadding $in1 to $in2...\n";
      $Mon{'kappa_mon'}->obeyw( "wcsmosaic", "$params" );

      # Erase the Grp file.
      unlink( $Grp->file );

      # And copy from the temporary file to the Grp file.
      $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$tmpfile out=$out title=$out" );
      orac_print "done.\n";

      # Update the Grp object.
      $Grp->file( $out );

    } else {
    # The Grp file doesn't exist, so WCSMOSAIC all of the Grp members
    # together.

      my @files;

      # Create a textfile that will hold all of the files to be
      # WCSMOSAIC'ed.
      my $infile = new ORAC::TempFile( OPEN => 1,
                                       SUFFIX => '.lis' );
      my $tmp_fh = $infile->handle;
      foreach my $member ( $Grp->members ) {
        foreach my $file ( $member->files ) {
          print $tmp_fh $file . "\n";
          push @files, $file;
        }
      }
      $infile->handle->close;

      my $out = $Grp->file;

      # Set up the arguments to WCSMOSAIC.
      my $params = "in='^" . $infile->file . "' out=$out ref=! ";
      $params   .= "lbnd=! ubnd=! method=nearest";

      # Run WCSMOSAIC.
      orac_print "Coadding " . join ( ', ', @files ) . " to form $out...";
      $Mon{'kappa_mon'}->obeyw( "wcsmosaic", "$params" );
      orac_print "done.\n";

      # Update the Grp object.
      $Grp->file( $out );

    }

  }

}

# Tidy up output.
orac_print "\n";
