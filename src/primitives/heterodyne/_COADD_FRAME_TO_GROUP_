=head1 NAME                                     -*-perl-*-

_GROUP_MOSIAC_ - Examine files within a group - mosaic together those
that need mosaicking.

=head1 DESCRIPTION

If the frame is the last in the group, and there is
more than one frame in the group, mosaic the frames together.

=head1 ARGUMENTS

=over

=item PARAMS = STRING (Given)

An optional array which consists of additional parameters required by
the Sinc, SincSinc, SincCos, SincGauss, Somb, SombCos, and Gauss
spreading methods (see parameter METHOD). See documentation for the
METHOD parameter for WCSMOSAIC. ['']

=item METHOD = STRING (Given)

The interpolation method to use when regridding the cube. This can be
any of those allowed by WCSMOSAIC, listed in the METHOD
parameter. ['nearest']

=back

=head1 AUTHOR

Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research
Council. All Rights Reserved.

=cut

# Handle parameters.
my $method = ( defined( $_COADD_FRAME_TO_GROUP_{'METHOD'} ) ?
               $_COADD_FRAME_TO_GROUP_{'METHOD'}            :
               'nearest' );

my $wcsmosaic_params = ( defined( $_COADD_FRAME_TO_GROUP_{'PARAMS'} ) ?
                         $_COADD_FRAME_TO_GROUP_{'PARAMS'}            :
                         '' );

#######################
# Check that we are processing the last frame of the group
# and that there are some frames to coadd.

if( $Grp->firstmember( $Frm ) ) {

  # Delete the group file.
  unlink( $Grp->file );

}

if( $Grp->lastmember( $Frm ) ) {
# Process if we're the last member of the Grp.

  if( $Grp->firstmember( $Frm ) ) {
  # If we're the first member, NDFCOPY the Frm file to the Grp file.

    my $in = $Frm->file;
    my $out = $Grp->file;
    orac_print "Copying $in to $out...";
    $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out title=$out" );
    orac_print "done.\n";

    # Update the Grp object.
    $Grp->file( $out );

  } else {

    # WCSMOSAIC the current Frame to the current Group. Variance
    # weighting means that simply coadding them will work right.

    my $infrm = $Frm->file;
    my $ingrp = $Grp->file;

    # Create a temporary file to hold the output of WCSMOSAIC.
    my $tmp = new ORAC::TempFile;
    my $tmpfile = $tmp->file;

    # Create a textfile that will hold all of the files to be
    # WCSMOSAIC'ed.
    my $infile = new ORAC::TempFile( OPEN => 1,
                                     SUFFIX => '.lis' );
    my $tmp_fh = $infile->handle;
    print $tmp_fh $ingrp . "\n";
    print $tmp_fh $infrm . "\n";
    $infile->handle->close;

    # Set up the arguments to WCSMOSAIC.
    my $params = "in='^" . $infile->file . "' out=$tmpfile ref=! ";
    $params   .= "lbnd=! ubnd=! method=$method variance=true";

    if( uc( $method ) ne 'NEAREST' ) {
      $params .= " params=$wcsmosaic_params";
    }

    # Run WCSMOSAIC.
    orac_print "Coadding $infrm to $ingrp...";
    $Mon{'kappa_mon'}->obeyw( "wcsmosaic", "$params" );

    # NDFCOPY the output to the group file.
    $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$tmpfile out=$ingrp" );

    orac_print "done.\n";

    # Update the Grp object.
    $Grp->file( $ingrp );

  }

}

# Tidy up output.
orac_print "\n";
