# -*-perl-*-

=head1 NAME

_COLLAPSE_CENTRAL_LINE_ -- Collapse around the central line in a cube.

=head1 DESCRIPTION

=head1 ARGUMENTS

=over 4

=item AXIS = INTEGER (Given)

The axis to collapse over. [3]

=item ESTIMATOR = STRING (Given)

The method to use for estimating the output pixel values. This can be
any of those listed for the KAPPA/COLLAPSE task. [integ]

=back

=head1 NOTES

=over 4

This primitive is suitable for heterodyne observations.

=back

=head1 OUTPUT DATA

=over 4

=item *

The collapsed image with _integ suffix.

=back

=head1 TASKS

KAPPA: COLLAPSE.

=head1 REQUIRED PERL MODULES

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Deal with options.
my $axis = ( defined( $_COLLAPSE_CENTRAL_LINE_{AXIS} ) ?
             $_COLLAPSE_CENTRAL_LINE_{AXIS}            :
             3 );

my $estimator = ( defined( $_COLLAPSE_CENTRAL_LINE_{ESTIMATOR} ) ?
                  $_COLLAPSE_CENTRAL_LINE_{ESTIMATOR}            :
                  'integ' );

# Get the line nearest the centre of the frequency axis.
my $regions = $Frm->uhdr( "BASELINE_REGIONS" );
my @regions = @$regions;
my $low  = $regions[ int( $#regions / 2 ) ];
my $high = $regions[ int( $#regions / 2 ) + 1 ];

# Set up filenames.
my( $in, $out ) = $Frm->inout( "_linteg1" );

# Collapse along this line.
my $params = "in=$in(,,$low:$high) out=$out axis=3 estimator=$estimator title='Central line'";
$Mon{'kappa_mon'}->obeyw( "collapse", "$params" );

# Report to user.
orac_print "$in to $out:\n";
orac_print " Collapsed around central line. Pixel bounds: [$low:$high]\n";

# Update the Frame object.
$Frm->file( $out );

# Display.
$Display->display_data( $Frm ) if defined $Display;

# Tidy-up output.
orac_print "\n";
