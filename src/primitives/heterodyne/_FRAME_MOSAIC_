=head1 NAME                                     -*-cperl-*-

_FRAME_MOSAIC_ - Forms a mosaic from each f-slice within a frame

=head1 DESCRIPTION

This primitive tiles the current Frame's files into a mosaic unless
there is only one file, in which case it is merely copied.

=head1 ARGUMENTS

None.

=head1 NOTES

=over 4

=item *

The mosaic is formed without any correction for offset or scaling
between tiles.

=item *

The mean is used to combine overlaps.

=back

=head1 OUTPUT DATA

The mosaic, which has suffix _cube.

=head1 TASKS

CCDPACK: MAKEMOS;
KAPPA: NDFCOPY.

=head1 AUTHORS

Jamie Leech E<lt>j.leech@jach.hawaii.eduE<gt>

Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 1998-2002 Particle Physics and Astronomy Research Council.

Copyright (C) 2018 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

my $infile;
my $outfile;
my $i=0;
my $no_of_files_in_frame=0;

# Create a list of input and output images.

if( scalar( @{$Frm->files} ) > 1 ) {

  my $inputlist = "inlist.list$$";
  unlink( $inputlist );

  open( my $fh_inlist, ">$inputlist" ) ||
    orac_throw "Unable to open $inputlist to create a list of spectra to mosaic. Error: $!\n";

  my $out;
  my @infiles;
  foreach my $i ( 1..$Frm->nfiles ) {

    my ( $in, $tmp ) = $Frm->inout( "_cube", $i );
    if( $i == 1 ) {
      $out = $tmp;
    }
    print $fh_inlist "$in\n";
    push @infiles, $in;
  }

  close( $fh_inlist );

  orac_print "Forming cube $out from " . join( ", ", @infiles ) . "...";
  my $args = "in=^$inputlist noscale nozero method=mean title='Full ACSIS cube'";
  $Mon{'ccdpack_reg'}->obeyw( "makemos", "$args out=$out" );
  orac_print "done.\n";

  unlink( $inputlist);

  # Now update the frame file list so that it only contains 1 file
  my @frame_array;
  $frame_array[0]=$out;
  $Frm->files(@frame_array);

} else {
  my ( $in, $out ) = $Frm->inout( "_cube" );
  orac_print "Only one spectrum in current observation. Copying to $out...";
  $Mon{'ndfpack_mon'}->obeyw( "ndfcopy", "in=$in out=$out title='Full ACSIS cube'" );
  orac_print "done.\n";
  my @frame_array;
  $frame_array[0] = $out;
  $Frm->files( @frame_array );
}

# Tidy up output.
orac_print "\n";
