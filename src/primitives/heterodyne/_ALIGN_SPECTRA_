# -*-cperl-*-

=head1 NAME

_ALIGN_SPECTRA_

=head1 DESCRIPTION

This primitive aligns spectra for all members of the current Group to
the first member or to the file specified by Argument REF.  Each
output NDF just encompasses the corresponding input NDF.  Otherwise it
uses the current parameter values for WCSALIGN.

=head1 ARGUMENTS

=item INDEX = INTEGER (Given)

The subfile index of the current file that will be the reference
spectrum, defining the pixel-to-velocity mapping.   If INDEX is undefined,
then the first member of the current group becomes the reference
spectrum, and the current group must contain at least two members.  [undef]

=item NULLBOUNDS = BOOLEAN (Given}

If true, WCSALIGH is invoked with the bounds parameters assign to null.
If false, the dynamic bounds are accepted.  [0]

=item REF (Given)

Name of the reference file, i.e. the NDF to which all the input NDFs
are to be aligned.  If it is undefined, the first member of the group
becomes the de facto reference, but also generates an aligned file.
[undef]

=item SUFFIX = STRING (Given)

Generate spectrally aligned NDFs with this file suffix.  ["_align"]

=head1 OUTPUT DATA

=over 4

=item The aligned NDFs.  These have the suffix set by Argument SUFFIX.

=back

=head1 TASKS

KAPPA: WCSALIGN

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>
Malcolm J. Currie E<lt>mjc@star.rl.ac.ukE<gt>

=head1 COPYRIGHT

Copyright (C) 2003 Particle Physics and Astronomy Research Council.
Copyright (C) 2018, 2020 Science and Technology Facilities Council.
All Rights Reserved.

=head1 LICENCE

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either Version 3 of
the License, or (at your option) any later version.

This program is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public
License along with this program; if not, write to the Free
Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
MA 02111-1307, USA.

=cut

my $file_index = get_prim_arg( $_PRIM_ARGS_, "INDEX", undef );
my $nullbounds = get_prim_arg( $_PRIM_ARGS_, "NULLBOUNDS", 0 );
my $ref = get_prim_arg( $_PRIM_ARGS_, "REF", undef );
my $suffix = get_prim_arg( $_PRIM_ARGS_, "SUFFIX", "_align" );

# Get a list of all the files in the Group.
my @members = $Grp->members;

my ( @infiles, @outfiles );

if ( scalar( @members ) > 1 ||
     ( defined $ref && scalar( @members ) >= 1 ) ) {

# Write input and output filenames to arrays.
   foreach my $member ( @members ) {
      my ( $infile, $outfile );
      if ( defined $file_index ) {
         ( $infile, $outfile ) = $member->inout( $suffix, $file_index );
      } else {
         ( $infile, $outfile ) = $member->inout( $suffix );
      }
      push @infiles, $infile;
      push @outfiles, $outfile;

      orac_print "  $infile to $outfile: Aligning spectrum.\n";
   }

   # Write the filenames to text files.
   my $inlist = write_file_list( @infiles );
   my $outlist = write_file_list( @outfiles );

   # Set up the parameters for WCSALIGN.
   my $param = "ref=$ref " if defined $ref;
   $param .= "lbnd=! " if $nullbounds;
   $param .= "in='^$inlist' out='^$outlist' accept";

   # Do the alignment.
   $Mon{'kappa_mon'}->obeyw( "wcsalign", "$param" );

   # Tidy up output.
   orac_print "\n";

} else {

  orac_warn "Programming error: _ALIGN_SPECTRA_ needs at least two spectra: one to " .
            "provide a reference pixel grid and another to align to that reference.\n";
  orac_warn "Both can be in the current Group, or the reference spectrum can be " .
            "specified with Argument REF.\n";
}
