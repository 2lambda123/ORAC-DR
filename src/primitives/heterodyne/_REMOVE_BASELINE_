# -*-perl-*-

=head1 NAME

_REMOVE_BASELINE_

=head1 DESCRIPTION

This primitive removes the baseline from each spectrum in a cube,
using spectral windows that are assumed to be free of spectral lines.

=head1 ARGUMENTS

=over 4

=item ORDER = INTEGER (Given)

The order of the fit to use for the baseline. Zero (the default) is a
constant, one is linear, etc. [0]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for ACSIS observations.

=item *

This primitive is suitable for spectral line observations. Removing
the baseline from continuum observations may not be desirable.

=back

=head1 OUTPUT DATA

=over 4

=back

=head1 TASKS

KAPPA: MFITTREND.

=head1 REQUIRED PERL MODULES

None.

=head1 AUTHORS

Brad Cavanagh E<lt>b.cavanagh@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2007 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut

# Deal with arguments.
my $order = ( defined( $_REMOVE_BASELINE_{ORDER} ) ?
              $_REMOVE_BASELINE_{ORDER}            :
              0 );

foreach my $i ( 1 .. $Frm->nfiles ) {

  my ( $in, $out ) = $Frm->inout( "_bl", $i );

  $Mon{'ndfpack_mon'}->obeyw( "ndftrace", "ndf=$in" );
  ( my $ORAC_STATUS, my @lbnd ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "lbound" );
  ( $ORAC_STATUS, my @ubnd ) = $Mon{'ndfpack_mon'}->get( "ndftrace", "ubound" );
  my $section = "'$lbnd[0]:$ubnd[0],$lbnd[1]:$ubnd[1],'";

  # Set up parameters for MFITTREND; it uses the AUTO mode and a
  # constant baseline.
  my $params = "in=$in out=$out auto=true modifyin=false subtract=true";
  $params   .= " order=$order axis=3 section=$section";

  # Run MFITTREND.
  $Mon{'kappa_mon'}->obeyw( "mfittrend", "$params" );

  # Report to user.
  orac_print "$in to $out:\n";
  orac_print " Removed baseline using $order-order polynomial.\n";

  # Get returned parameters and stick them in the Frame object.
  ( $ORAC_STATUS, my @regions ) = $Mon{'kappa_mon'}->get( "mfittrend", "aranges" );
  $Frm->uhdr( "BASELINE_REGIONS", \@regions );

  # Update the product.
  $Frm->product( "bl" );

  # Update Frame object;
  $Frm->file( $i, $out );

}

# Display.
$Display->display_data( $Frm ) if defined $Display;

# Tidy-up output.
orac_print "\n";
