=head1 NAME

_ESTIMATE_LINEFOREST_BASELINE_OFFSET_

=head1 DESCRIPTION

This primitive attempts to correct the baseline DC level for hybrid
spectra comprising several emission lines extending across more
frequencies than the regions of baseline.  Such data can be
problematic for MFITTREND.

It uses a smoothed histogram of data values and determines the first
peak, which should be the mode, and subtracts it.

=head1 ARGUMENTS

=over 4

=item GROUP = INTEGER (Given)

Defines how group handling is done. 0 means the current Frame object
is used, 1 means the current Group object is used, and 2 means every
Frame member in the current Group is used. [0]

=item SKEWNESS = REAL (Given)

The minimum skewness before a correction to the baseline is made.
It should be positive and generally at least 1.0.  This can be
overridden by the RECPAR_BASELINE_SKEWNESS recipe parameter.  [1.0]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for hybrid heterodyne spectra.

=back

=head1 OUTPUT DATA

=over 4

=item *

The output baseline corrected baseline with suffix _bldc.

=back

=head1 TASKS

CUPID: FINDCLUMPS;
KAPPA: CSUB, GAUSMOOTH, HISTOGRAM, STATS.

=head1 REQUIRED PERL MODULES

POSIX.

=head1 AUTHORS

Malcolm J. Currie E<lt>mjc@jach.hawaii.eduE<gt>

=head1 COPYRIGHT

Copyright (C) 2013 Science and Technology Facilities Council.
All Rights Reserved.

=cut

use POSIX qw(ceil floor);

if ( $Frm->uhdr( "ISHYBRID" ) ) {
   my $group = get_prim_arg( $_PRIM_ARGS_, "GROUP", 0 );
   my $min_skewness = get_prim_arg( $_PRIM_ARGS_, "SKEWNESS", 1.0 );

# Override order if we've been given a recipe parameter.
   $min_skewness = ( defined( $Frm->uhdr( "RECPAR_BASELINE_SKEWNESS" ) ) ?
                     $Frm->uhdr( "RECPAR_BASELINE_SKEWNESS" )            :
                     $min_skewness );

# Write a heading to structure the commentary.
   orac_say "\n\nCorrect baseline in lineforest";
   my $underline = "-" x 38;
   orac_say "$underline\n";

# Select the files to process.
   my @objs;
   if ( $group == 0 ) {
      push @objs, $Frm;
   } elsif ( $group == 1 ) {
      push @objs, $Grp;
   } elsif ( $group == 2 ) {
      @objs = $Grp->members;
   }

   my $ORAC_STATUS;
   foreach my $Obj ( @objs ) {
      my ( $in, $out ) = $Obj->inout( "_bldc" );

# First decide if this step is necessary.  If there are many spectral
# emission lines the skewness will be strongly positive.
      $Mon{'kappa_mon'}->obeyw( "stats", "ndf=$in" );
      ( $ORAC_STATUS, my $skewness ) = $Mon{'kappa_mon'}->get( "stats", "skewness" );
      ( $ORAC_STATUS, my $mean ) = $Mon{'kappa_mon'}->get( "stats", "mean" );
      if ( $skewness > $min_skewness ) {

# FINDCLUMPS can give off-centre centroids weighted by the outliers we
# want to exclude and the width is enlarged by outliers.  So just use the
# histogram peak.  Smooth to define the peak better.  One could do
# Gaussian fits to derive the sigma or combine the central few to derive
# a more-precise peak.  For the moment this seems adequate.
         my $dc_offset;
         {
            my $Frm = new $Frm;
            $Frm->file( $in );
            _FIND_HISTOGRAM_PEAK_ EXTREME=1 SMOOTH=1 METHOD=Gauss FINE_RESOLUTION=1
            if ( defined $_FIND_HISTOGRAM_PEAK_{PEAK} ) {
               $dc_offset = $_FIND_HISTOGRAM_PEAK_{PEAK};
            } else {
               $dc_offset = $mean;
            }
         }

# Apply the DC offset.
         my $params = "in=$in out=$out scalar=$dc_offset";
         $Mon{'kappa_mon'}->obeyw( "csub", "$params" );

         orac_print "$in to $out:\n";
         $dc_offset =  sprintf( "%.3f", $dc_offset );
         orac_print " Removed DC offset of $dc_offset.\n";

         $Obj->file( $out );
      }
   }

# Tidy-up output.
   orac_print "\n";
}
