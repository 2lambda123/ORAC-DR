# _APERTURE_PHOTOMETRY_
#
# Perform aperture photomtry on a standard star.
#
# TASK: PHOTOM - AUTOPHOTOM
#
# This should only be performed on OBJECT frames.

print colored ("PRIMITIVE: APERTURE_PHOTOMETRY\n",'magenta');

$file = ($_APERTURE_PHOTOMETRY_{FILE} || ${main::File});

if ($Hdr{OBSTYPE} =~ /OBJECT/) {

# Convert the aperture correction  to magnitudes to the nearest millimagnitude.
# Need to pass the correction between scripts.
   $Mon{"kappa_mon"}->obeyw("calc","exp='0.001*NINT(1000*(-2.5*LOG10($correction)))'");
   ($cormag, $status ) = $Mon{"kappa_mon"}->get("calc:result");
   $cormag =~ s/'//g;			# '

# Obtain the filter from the FITS headers.
   $filter = $Hdr{FILTER};

# Obtain the mean extinction coefficient.
   SWITCH: {
      if ($filter =~ "J") { $extinction = 0.102; last SWITCH; }
      if ($filter =~ "H") { $extinction = 0.059; last SWITCH; }
      if ($filter =~ "K") { $extinction = 0.088; last SWITCH; }
      $extinction = 0.0;
   }

# Obtain the airmass from the FITS headers.  Find the approximate mean  airmass
# from the start and end values.  This should be adequate unless it is a long
# integration with the source crossing the meridian.
   $amstart = $Hdr{AMSTART};
   $amend = $Hdr{AMEND};
   $airmass = 0.5 * ($amstart + $amend);
   $extcor = $airmass * $extinction;

# The automatic photometry task needs a text file to control the
# type and location of the photometry, and the size and shape of the
# aperture.  In this example case these are fixed, but we could use
# parameters for these in a hierarchy of scripts.   We have a circular
# aperture obtaining the sky from an annulus 1.3 to twice the diameter
# of the main aperture.
   open ( PHOTOM, ">photom$$.dat" );
   print PHOTOM "#ANN 1 $inner $outer\n";
   print PHOTOM "1 @centre 0.0 0.0 0.0 0.0 OK $rapture 0.0 0.0 annulus circle\n";
   close ( PHOTOM );

# Assign the other parameters.
   $psfname = ($_APERTURE_PHOTOMETRY_{PSF} || "psf$$");

# Specify the user parameters.
   $skyest = ($_ESTIMATE_PSF_{SKY_EST} || "3");
   $zp = ($_ESTIMATE_PSF_{ZP} || "23.0");
   $user = "skyest=$skyest skymag=$zp";

# Specify the other parameters for AUTOPHOTOM.
   $header = "in=$file infile=photom$$.dat outfile=photom$$.res";
   $hidden = "nocentro padu=1 biasle=0 photon=1 positive sature=12000 nousemask";

# Perform the photometry, however, for this case compute a centroid
# about which to integrate.
   $Mon{"photom_mon"}->obeyw("autophotom","$header $user $hidden");
#   print "Command was: autophotom $header $user $hidden\n";

# Extract and present the results.  The magnitude and error are the
# fourth and fifth fields in the output file.  The sky estimate is the
# sixth.
#    $res = `awk '{split(\$0,a," "); for(i=4; i<=6; i++) print a[i]}' photom$$.res`;
    open (PHOTOM, "photom$$.res");
    @results = map { (split)[3..5] } <PHOTOM>;
    close (PHOTOM);
    print  "\n";
    print  "Frame:                  $file\n";
    print  "Filter:                 $filter\n";
    print  "Magnitude:              $results[0] +/- $results[1]\n";
    print  "Airmass correction:     $extcor\n";
    print  "Sky:                    $results[2]\n";
    print  "Aperture diameter:      $aperture pixels\n";
    print  "Aperture ratio:         $aperture_factor FWHM ($fwhm pixels)\n";
    print  "Annulus inner scale:    $inner\n";
    print  "Annulus outer scale:    $outer\n";
    print  "Photometric correction: ${correction}; $cormag mag.\n";
    print  "\n";
};
