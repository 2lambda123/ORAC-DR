=head1 Name

_MOSAIC_CUBES_

=head1 Description

Mosaic all sky subtracted datacubes in the current group together. If
there are offsets from one object frame to another (ie a jitter
pattern) then the origins of the datacubes should have been set to
reflect this (_SET_OFFSET_). Images are then extracted from the
datacube.

This gets very slow as more pairs are added (all pairs are mosaiced
after each complete pair. Do not use this for observations where there 
are no offsets - it is much faster to just coadd the 2d spectra then form
a datacube.

The output file is a group with suffix _mos.

=head1 Author

Stephen Todd <spt@roe.ac.uk>

=cut

# The group file name - we use the ->raw one here, as subsequent steps
# (eg extraction) will update the ->file and we want none of that here
my $groupfile = $Grp->raw . "_mos";

# Get the filename for the sky subtracted pair (ignore $out)
my ($in, $out) = $Frm->inout("_junk");
my $obsnum = $Frm->number;

# If it doesn't exist, create the group file
if (!(-e ($groupfile . ".sdf"))) {
   # Create the group file by copying the sky subtracted pair into it
   orac_print "Creating group $groupfile with $in\n";
   $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "in=$in out=$groupfile title=$groupfile");
 
   open (my $LIST, ">mosaic.dat") || die "Unable to open mosaic.dat\n.";
   print $LIST "$in\n";
   close $LIST;

} else {
    # The group file does exist. Coadd the current pair into it
    
    open (my $LIST, ">>mosaic.dat") || die "Unable to open mosaic.dat\n.";
    print $LIST "$in\n";
    close $LIST;

    # Use a tmp file to do the addition
    my $tmpfile=new ORAC::TempFile;
    my $tmp = $tmpfile->file;

   # Need to know how many pairs are in the group
    my $nobs=scalar(@{ scalar($Grp->coadds) } );

    my $param = "in=^mosaic.dat out=tmp method=mean  ";

    $Mon{'ccdpack_reg'}->obeyw("makemos", $param); 

    $Mon{'ndfpack_mon'}->obeyw("ndfcopy", "tmp $groupfile"); 
}


# Update the group object
#$Grp->coaddspush($obsnum);
$Grp->file($groupfile);

orac_print "Coadded into group file $groupfile\n";

orac_print "\n";

_EXTRACT_IMAGES_

