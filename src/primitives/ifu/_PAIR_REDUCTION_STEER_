=head1 Name

PAIR_REDUCTION_STEER

Control reduction of sky-object pairs

=head1 Description

This is a steering primitive. It does not generate any output frames,
but sets user defined headers in the current frame to control
subsequent reduction.

=head1 Headers

=over 4

=item PAIR_COMPLETE

This header is set to 1 if the current group contains an even number
of frames or 0 otherwise.

=item QUAD_COMPLETE

This header is set to 1 if the current frame is the 4th, 8th, etc.,
observation in the group, and 0 otherwise.

=item ON_SOURCE

This header is set to 1 if the observation type is OBJECT and the
telescope offsets are less than the amount given in the SKY_OFFSET
argument, otherwise 0.

=item SKY_SUBTRACTION_RESULT

This header defaults to 0. It is set when sky subtraction is done.

=back

=head1 ARGUMENTS

=over 4

=item SKY_OFFSET = INTEGER (Given)

If a frame has an absolute telescope offset greater than the number
of arcseconds given by this argument, it will be classified as a 
sky frame. [30]

=back

=head1 Notes

It is recommended that the observation type is set to OBJECT/SKY as
appropriate. Sometimes this is inconvenient (when setting a complex 
jitter pattern for use with MAP_EXTENDED_SOURCE the offset iterator in
ORAC-OT may be useful), so any positions with total telescope offset 
larger than the value given by the SKY_OFFSET argument are assumed to
be a sky position. 

=head1 Authors

Stephen Todd <spt@roe.ac.uk>
Brad Cavanagh <b.cavanagh@jach.hawaii.edu>

=cut


# Obtain the minimum offset for sky frames.
my $min_offset = ( $_PAIR_REDUCTION_STEER_{SKY_OFFSET} || 30.0 );

# Retrieve the number of frames currently in the group.  This assumes
# no batch mode.
my $num = $Grp->num();

# Set the PAIR_COMPLETE steering header.
if ( ($num+1) % 2 == 1 ) {
   $Frm->uhdr( "PAIR_COMPLETE", 0 );
   orac_print "Steerage: This observation is the start of a pair.\n";
} else {
   $Frm->uhdr( "PAIR_COMPLETE", 1 );
   orac_print "Steerage: This observation completes a pair.\n";
}

# Set the QUAD_COMPLETE steering header.
if ( ($num + 1) % 4 == 0 ) {
  $Frm->uhdr( "QUAD_COMPLETE", 1 );
  orac_print "Steerage: This observation completes a quad.\n";
} else {
  $Frm->uhdr( "QUAD_COMPLETE", 0 );
}

my $raoff = $Frm->uhdr("ORAC_RA_TELESCOPE_OFFSET");
my $decoff= $Frm->uhdr("ORAC_DEC_TELESCOPE_OFFSET");

my $offset = sqrt($raoff**2 + $decoff**2);
my $print_offset = sprintf("%.2f", $offset);

if ($Frm->uhdr("ORAC_OBSERVATION_TYPE") eq "OBJECT" and ($offset < $min_offset)) {
	$Frm->uhdr( "ON_SOURCE", 1 );
	orac_print "Steerage: Observation has an offset of $print_offset arcseconds -- on source\n";
} else {
	$Frm->uhdr( "ON_SOURCE", 0 );
	orac_print("Steerage: Observation has an offset of $print_offset arcseconds - on sky\n");
}

# Set the SKY_SUBTRACTION_RESULT to a default of 0.
$Frm->uhdr( "SKY_SUBTRACTION_RESULT", 0 );

$Frm->uhdr( "SCRUNCH_RESULT", 0 );

$Frm->uhdr( "FORM_DATACUBE_RESULT", 0 );

$Frm->uhdr( "DIVIDE_BY_STANDARD_RESULT", 0 );