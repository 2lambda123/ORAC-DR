# _MAKE_MOSAIC_
#
# Forms a flat-field. 
#
# TASK: KAPPA - TRANJOIN; CCDPACK - TRANLIST, MAKEMOS
#
# This should only be performed on OBJECT frames.
if (${main::Hdr}{OBSTYPE} =~ /OBJECT/) {

# Can generate a mosaic when there are at least three
# object frames.
   if ($#objects + 1 > 2 ) {

# User-accessible mapping and parameters
      $user = "";

# Form a list of input file names for CCDPACK tasks.
      $isuffix = ($_MAKE_MOSAIC_{SUFFIX_IN} || "_fl");
	@objflats = @objects;
	grep($_.=$isuffix,@objflats);
	$objlist = join(",",@objflats);

# Specify the other parameters for the TRANJOIN stage.
      $hidden = "in2=${main::In}/ircam3_rotate2eq.transform dest=first"; 

# Join the rotation transformation to each of the CCDPACK extensions.
# The rotation transformation follows the shift-of-origin and is stored
# in the '_fl' frame.  Unfortunately, CCDEDIT doesn't support joining
# transformations, and KAPPA/TRANJOIN does operate on lists of files.
# Write the input file names to the text files.
      foreach $flatted (@objflats) {
         $header = "in1=${flatted}.more.ccdpack.transform";
         ${main::Mon}{"kappa_mon"}->obeyw("tranjoin","$header $user $hidden accept");
         print "Command was: tranjoin $header $user $hidden accept\n";
      }

      print "Orac says: rotation transformation joined\n";

# Assign other parameters.
      $isuffix = ($_MAKE_MOSAIC_{SUFFIX_IN} || "_fl");
      $osuffix = ($_MAKE_MOSAIC_{SUFFIX_OUT} || "mos");
      $header = "in='$objlist' out='*|$isuffix|_trn|'";
      $hidden = "shape=specify lbound=[1,1] ubound=[256,256]";

# Shift and resample the flat-field object frames.  Automatically
# determines the bounds.  It takes the origin from the first object
# frame.
      ${main::Mon}{"ccdpack_reg"}->obeyw("tranndf","$header $user $hidden");
      print "Command was: tranndf $header $user $hidden\n";

      print "Orac says: frames $objlist resampled\n";
      ${main::Mon}{"ccdpack_reg"}->control('par_reset');

# Create a list of resampled frames.
      @objtrn = @objflats;
      grep ( s/$isuffix/_trn/, @objtrn );
      $trnlist = join(",",@objtrn);

# Assign other parameters.  The scale might become a user parameter.
      $header = "in='$trnlist' out='$root$osuffix'";
      $hidden = "zero scale";

# Make the mosaic correcting for differences in both scale and offset.
      print "Command is: makemos $header $user $hidden\n";
      ${main::Mon}{"ccdpack_reg"}->obeyw("makemos","$header $user $hidden");

# Create a list of resampled filenames.
#      @objtrn = grep ( s/_trn/_trn.sdf/, @objtrn );
#      unlink @objtrn;

      print "Orac says: mosaic $root$osuffix formed\n";

   };
};
