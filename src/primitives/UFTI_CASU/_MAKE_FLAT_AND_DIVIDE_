    # Are we allowed to continue?

    my $cancombine = $Frm->uhdr("JITTER_COMPLETE");
    my $masking = $_MAKE_FLAT_AND_DIVIDE_{MASK};
    my $divide = $_MAKE_FLAT_AND_DIVIDE_{DIVIDE};

    # Right we're allowed to continue.  Start by getting a subgroup with
    # the correct cycle number.  This is because a group may contain several
    # cycles.

    if ($cancombine) {
        my $current_cycle = $Frm->uhdr("CYCLE_NUMBER");
        my $subgrp = $Grp->subgrp(CYCLE_NUMBER=>$current_cycle);
        my $ref_run = $Frm->uhdr("ORAC_OBSERVATION_NUMBER");
        foreach my $fr ($subgrp->allmembers) {
            if ($fr->uhdr("REF_RUNNO")) {
                $ref_run = $fr->uhdr("ORAC_OBSERVATION_NUMBER");
                last;
            }
        }
        my $fitsextn = ($Frm->parsefname)[2];
        my $flatfile = sprintf("flat_%d%s",$ref_run,$fitsextn);
        unlink $flatfile if (-e $flatfile);

        # Mask out objects first and do a first pass FLAT

        if ($masking) {
            use File::Copy;
            foreach my $fr ($subgrp->allmembers) {
                {
                    my $Frm = $fr;
                    _MAKE_OBJECT_MASK_ PNOP=15 THRESH=-1.0 GRID=64
                }
            }
            {
                my $Grp = $subgrp;
                _MAKE_A_FLAT_ FLATFILE=$flatfile MASK=1 REM0=1
            }
            foreach my $fr ($subgrp->allmembers) {
                my $tmpnam = "tmp_" . $fr->file;
                copy($fr->file,$tmpnam);
                my $Frm = $fr->new($tmpnam);
                _STAGE1_ FLATCOR=1 LINCOR=0 DARKCOR=0 RESETCOR=0
                _MAKE_OBJECT_MASK_ PNOP=15 THRESH=-1.0 GRID=64
                $fr->uhdr("OPM",$Frm->uhdr("OPM"));
                $fr->update_header("CIR_OPM",TSTRING,$fr->uhdr("OPM"),
                    "Object mask");
                unlink $tmpnam;
            }
            unlink $flatfile;
            {
                my $Grp = $subgrp;
                _MAKE_A_FLAT_ FLATFILE=$flatfile MASK=1 REM0=0
            }
        } else {
            _MAKE_A_FLAT_ FLATFILE=$flatfile MASK=0 REM0=0
        }

        # Display the flat field frame

        my $flatfrm = $Frm->new($flatfile);
        {
            my $Frm = $flatfrm;
            _DISPLAY_IMAGE_
        }

        # Now make the confidence map...

        my $cpmfile = sprintf("cpm_%d%s",$ref_run,$fitsextn);
        unlink $cpmfile if (-e $cpmfile);
        {
            my $Frm = $flatfrm;
            _MAKE_CONFIDENCE_MAP_ OUT=$cpmfile THRESH=5.0 NITER=2 WINDOW=1
        }

        # Replace any zeros in the flat frame

        {
            my $Frm = $flatfrm;
            _ZERO_REPLACE_
        }
      
        # Now for each of the frames in the subgroup, divide by the 
        # associated flat field.

        foreach my $frm ($subgrp->allmembers) {
            my $Frm = $frm;
            if ($divide) {
                _STAGE1_ FLATCOR=1 LINCOR=0 DARKCOR=0 RESETCOR=0
            }
            _CPM_HEDIT_
        }
    }
