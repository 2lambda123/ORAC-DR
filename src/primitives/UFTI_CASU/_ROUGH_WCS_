    # Use some intrinsic trig functions

    use Math::Trig;

    # Define basic rough WCS info for UFTI

    my %wcsbase = ('crpix1'    => 573,
                   'crpix2'    => 460,
                   'ncd1_1'    => -1,
                   'ncd1_2'    => 0,
 		   'ncd2_1'    => 0,
   		   'ncd2_2'    => 1,
		   'scale'     => 0.09085,
		   'extra_rot' => -0.6);
    my $projp3 = 0.33333;
    my @crpixoff = (320.0,196.0);
    my @wcskeys = ("CRVAL1","CRVAL2","CRPIX1","CRPIX2","CD1_1","CD2_1",
                   "CD2_1","CD2_2","CTYPE1","CTYPE2","CUNIT1","CUNIT2");

    # Read a few parameters...

    my $override = $_ROUGH_WCS_{OVERRIDE};
    my $zpn = $_ROUGH_WCS_{ZPN};

    # Check whether we even want to be here...

    my $wcspass = (defined $Frm->hdr("WCSPASS") ? $Frm->hdr("WCSPASS") : -1);
    if ($override || $wcspass < 0) {

	# Set up some useful values

	my ($crpix1,$crpix2,$scale,$aap,$bbp,$ddp,$eep,$extra_rot);
	my $x1 = $Frm->uhdr("ORAC_X_LOWER_BOUND");
	my $x2 = $Frm->uhdr("ORAC_X_UPPER_BOUND");
	my $y1 = $Frm->uhdr("ORAC_Y_LOWER_BOUND");
	my $y2 = $Frm->uhdr("ORAC_Y_UPPER_BOUND");
	if ($x1 == 1 && $x2 == 1024 && $y1 == 1 && $y2 == 1024) {
	    $crpix1 = $wcsbase{'crpix1'};
	    $crpix2 = $wcsbase{'crpix2'};
	} else {
	    $crpix1 = $wcsbase{'crpix1'} - $crpixoff[0];
	    $crpix2 = $wcsbase{'crpix2'} - $crpixoff[1];
	}
	$scale = $wcsbase{'scale'}/3600.0;
	$aap = $scale*$wcsbase{'ncd1_1'};
	$bbp = $scale*$wcsbase{'ncd1_2'};
	$ddp = $scale*$wcsbase{'ncd2_1'};
	$eep = $scale*$wcsbase{'ncd2_2'};
	$extra_rot = deg2rad($wcsbase{'extra_rot'});
	my $ca = cos($extra_rot);
	my $sa = sin($extra_rot);
	my $cd1_1 = $aap*$ca + $bbp*$sa;
	my $cd1_2 = -$aap*$sa + $bbp*$ca;
	my $cd2_1 = $ddp*$ca + $eep*$sa;
	my $cd2_2 = -$ddp*$sa + $eep*$ca;

        # Get RA and Dec from header and see if we need to precess it...
        # Add on the telescope offsets if the data were taken after 20030121.

	my $ra = 15.0*$Frm->uhdr("ORAC_RA_BASE");
	my $dec = $Frm->uhdr("ORAC_DEC_BASE");
        if ($Frm->hdr("DATE-OBS") gt "2003-01-21T00:00:00Z") {
            $ra += $Frm->uhdr("ORAC_RA_TELESCOPE_OFFSET")/3600.0;
            $dec += $Frm->uhdr("ORAC_DEC_TELESCOPE_OFFSET")/3600.0;
        }
	my $equinox = $Frm->uhdr("ORAC_EQUINOX");
        _PRECESS_TO_2000_ RA=$ra DEC=$dec EQUINOX=$equinox
        $ra = $_PRECESS_TO_2000_{RA};
        $dec = $_PRECESS_TO_2000_{DEC};
        $equinox = $_PRECESS_TO_2000_{EQUINOX};

        # Get rid of extraneous extra WCS stuff from header.  This is because
        # in UFTI data, the is quite often two copies of the WCS keywords...

        my $status = 0;
        my $fptr = Astro::FITS::CFITSIO::open_file($Frm->file,READWRITE,
            $status);
        foreach my $key (@wcskeys) {
            $status = 0;
            while ($status == 0) {
                $fptr->delete_key($key,$status);
            }
        }
        $fptr->close_file($status);

	# Now update the header...

        my ($retval,$errmsg);
	if ($zpn) {
 	    $retval = cir_update_hdr($Frm->file,"CTYPE1","STRING","RA---ZPN",undef,$errmsg);
	    $retval = cir_update_hdr($Frm->file,"CTYPE2","STRING","DEC--ZPN",undef,$errmsg);
	} else {
 	    $retval = cir_update_hdr($Frm->file,"CTYPE1","STRING","RA---TAN",undef,$errmsg);
	    $retval = cir_update_hdr($Frm->file,"CTYPE2","STRING","DEC--TAN",undef,$errmsg);
        }
	$retval = cir_update_hdr($Frm->file,"CRVAL1","FLOAT",$ra,undef,$errmsg);
	$retval = cir_update_hdr($Frm->file,"CRVAL2","FLOAT",$dec,undef,$errmsg);
	$retval = cir_update_hdr($Frm->file,"CRPIX1","FLOAT",$crpix1,undef,$errmsg);
	$retval = cir_update_hdr($Frm->file,"CRPIX2","FLOAT",$crpix2,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"CD1_1","FLOAT",$cd1_1,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"CD2_1","FLOAT",$cd2_1,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"CD1_2","FLOAT",$cd1_2,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"CD2_2","FLOAT",$cd2_2,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"PROJP1","FLOAT",1.0,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"PROJP3","FLOAT",$projp3,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"PV2_0","FLOAT",0.0,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"PV2_1","FLOAT",1.0,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"PV2_2","FLOAT",0.0,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"PV2_3","FLOAT",$projp3,undef,$errmsg);
        $retval = cir_update_hdr($Frm->file,"WCSPASS","INT",0,"Pass level of WCS",$errmsg);
    }
