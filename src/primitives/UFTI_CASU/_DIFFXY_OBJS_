    # Loop for all of the files in the group.  Get the table name
    
    my $nfile = 0;
    my $template;
    my $dstat = 0;
    foreach my $frm ($Grp->allmembers) {
        $nfile++;
        my $tabname = $frm->uhdr("OBJTAB");

        # Read the relevant columns from the object table into a text file

        my ($retval,$errmsg);
        my $tmpfile = ORAC::TempFile->new(0);
        unlink $tmpfile->file;
        $retval = cir_tabledump($tabname,$tmpfile->file,
            ["X_coordinate","Y_coordinate","Total_flux","Ellipticity"],4,
            $errmsg); 
        if ($retval != CIR_OK) {
            orac_err("CIR_DUMPTABLE: Failed in _DIFFXY_OBJS_\n$errmsg\n");
            $dstat = 1;
            $tmpfile->DESTROY;
            last;
        }

        # Now read the temporary file and update the xy coordinates with
        # the WCS offsets.  Write a new temporary file

        my $fh = $tmpfile->handle;
        open $fh,$tmpfile->file;
        my $tmpfile2 = ORAC::TempFile->new;
        my $fh2 = $tmpfile2->handle;
        my ($xval,$yval,$tval,$elval);
        while (<$fh>) {
            ($xval,$yval,$tval,$elval) = split /\s+/;
            $xval += $frm->uhdr("XOFF_WCS");
            $yval += $frm->uhdr("YOFF_WCS");
            print $fh2 "$xval $yval $tval\n";
        }
        $fh->close;
        $tmpfile->DESTROY;
        $fh2->close;

        # If this is the first file in the list, then make it the template

        if ($nfile == 1) {
            $template = $tmpfile2;
            $frm->uhdr("XOFF_OBJS",0.0);
            $frm->uhdr("YOFF_OBJS",0.0);
            next;
        }

        # Find the dimensions of the data area of the file...

        my ($nx,$ny);
        $nx = $frm->hdr("NAXIS1");
        $ny = $frm->hdr("NAXIS2");

        # Ok, now match 'em up

        my $srad = 10.0;
        my ($xoffset,$yoffset,$nmatch);
        $retval = cir_matchxy($tmpfile2->file,$template->file,$srad,$nx,$ny,
            $xoffset,$yoffset,$nmatch,$errmsg);
        $tmpfile2->DESTROY;
        if ($retval != CIR_OK || $nmatch == 0) {
            orac_err("CIR_MATCHXY: Failed in _DIFFXY_OBJS_\n$errmsg\n");
            $dstat = 1;
            $template->DESTROY;
            last;
        }
        $frm->uhdr("XOFF_OBJS",$xoffset+$frm->uhdr("XOFF_WCS"));
        $frm->uhdr("YOFF_OBJS",$yoffset+$frm->uhdr("YOFF_WCS"));
    }
    $template->DESTROY;
    $Frm->uhdr("DSTAT",$dstat);

=head1 NAME

_DIFFXY_OBJS_ -- Refine offset positions between frames

=head1 DESCRIPTION

This primitive cycles through all the images in a group.  The offset position
of each frame from the first in the group is calculated by looking at the
positions of detected objects in a catalogue.  

=head1 ARGUMENTS

=over 4

=item DSTAT = int (Returned)

A flag that indicates something went wrong and as such the offsets generated
here should be ignored.

=back

=head1 NOTES

=over 4

=item *

The offsets using the WCS are used as a starting point and should be stored 
in the uhdr components XOFF_WCS, YOFF_WCS. Thus these values must be set 
before calling this primitive. 

=item *

The catalogue name is sought from the uhdr component OBJTAB. 

=item *

The offsets generated are stored in the uhdr components XOFF_OBJ, YOFF_OBJ.

=back

=head1 AUTHORS

JRL: Jim Lewis (CASU, IoA)

=head1 COPYRIGHT

Copyright (C) 2003-2006 Cambridge Astronomy Survey Unit. 
All Rights Reserved

=cut
