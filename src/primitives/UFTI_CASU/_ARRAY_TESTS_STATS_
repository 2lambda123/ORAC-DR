    # Check to see that you have all of the files you need.

    if (($Grp->num + 1) % 4 == 0) {

        # Need this here

        use File::Copy;

        # If so, then get the exposure time and the gain...

        my $exptime = $Frm->uhdr("ORAC_EXPOSURE_TIME");
        my $gain = $Frm->uhdr("ORAC_GAIN");

        # Get the files from the group...

        my @allf = $Grp->membernames;

        # Ignore the first frame.  Subtract the second two from each other.

        my $tmpfil = "array" . time();
        copy($allf[1],$tmpfil);
        my ($retval,$errmsg);
        $errmsg = "";
        $retval = cir_imsubt($tmpfil,$allf[2],$errmsg);
        if ($retval != CIR_OK) {
            orac_err("CIR_IMSUBT: Failed in _ARRAY_TESTS_STATS_\n$errmsg\n");
            last; # this should get us out of this primitive...
        }

        # Do stats on difference frame. Then delete it.

        my $meanval;
        $retval = cir_imstat($tmpfil,"",1,$meanval,$errmsg);
        if ($retval != CIR_OK) {
            orac_err("CIR_IMSTAT: Failed in _ARRAY_TESTS_STATS_\n$errmsg\n");
            last; # this should get us out of this primitive...
        }

        # Get the values...

        my $tmpfrm = $Frm->new($tmpfil);
        my $variance = $tmpfrm->hdr("CIR_BVAR");
        my $readnoise = $gain*sqrt(0.5*$variance);
        unlink $tmpfil;

        # Now do stats on the fourth frame to get mean dark noise

        $retval = cir_imstat($allf[3],"",1,$meanval,$errmsg);
        if ($retval != CIR_OK) {
            orac_err("CIR_IMSTAT: Failed in _ARRAY_TESTS_STATS_\n$errmsg\n");
            last; # this should get us out of this primitive...
        }
        $meanval *= $gain/$exptime;

        # Print up a few lines in lieu of proper logging

        my $line = sprintf("Array tests give: Readnoise = %g e-, Dark = %g e-/sec\n",$readnoise,$meanval);
        orac_print($line);
        my %hash = (%{$Frm->hdr},READNOISE=>$readnoise);
        $Cal->readnoiseindex->add($Frm->file,\%hash);
    }

