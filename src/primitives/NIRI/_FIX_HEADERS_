
orac_print "Fixing internal headers\n";
$Frm->uhdr("ORAC_X_LOWER_BOUND", 1);
$Frm->uhdr("ORAC_Y_LOWER_BOUND", 1);
$Frm->uhdr("ORAC_X_UPPER_BOUND", 1024);
$Frm->uhdr("ORAC_Y_UPPER_BOUND", 1024);

$Frm->uhdr("ORAC_SPEED_GAIN", "NA");


# Sort out the filter and whether we're im or spec
my $filter = "";
my $filter1 = $Frm->hdr("FILTER1");
my $filter2 = $Frm->hdr("FILTER2");
my $filter3 = $Frm->hdr("FILTER3");

if ($filter1 =~ "open") {
   $filter = $filter2;
}

if ($filter2 =~ "open") {
   $filter = $filter1;
}

if (($filter1 =~ "blank") || ($filter2 =~ "blank") || ($filter3 =~ "blank")) {
   $filter = "blank";
} 

$Frm->uhdr("ORAC_FILTER", $filter);

$Frm->uhdr("ORAC_OBSERVATION_MODE", "imaging");

#if ($filter3 =~ "pupil") {
#   $Frm->uhdr("ORAC_OBSERVATION_MODE", "imaging");
#}

# A guess for now
#if ($filter3 =~ "grism") {
#   $Frm->uhdr("ORAC_OBSERVATION_MODE", "spectrsocopy");
#}


# Sort out the UT
my $utstring = $Frm->hdr("UT");
my $utdec = hmstodec($utstring);
$Frm->uhdr("ORAC_UTSTART", $utdec);

my $type = $Frm->uhdr("ORAC_OBSERVATION_TYPE");
if ($type eq "SCI") {
   $type = "OBJECT";
   $Frm->uhdr("ORAC_OBSERVATION_TYPE", $type);
}

my $a = $Frm->hdr("CD1_1");
my $b = $Frm->hdr("CD2_2");

my $rads = atan2($a,$b);

my $degs = rad2deg($rads);

$Frm->uhdr("ORAC_ROTATION", $degs);

my $tdec = $Frm->hdr("DEC");
my $fdec = $Frm->hdr("CRVAL2");
my $decoff = $tdec - $fdec;
$decoff *= 3600.0;
$Frm->uhdr("ORAC_DEC_TELESCOPE_OFFSET", $decoff);

my $tra = $Frm->hdr("RA");
my $fra = $Frm->hdr("CRVAL1");
my $raoff = $tra - $fra;
$raoff *= 3600.0;
$raoff /= cosdeg($tdec);
$Frm->uhdr("ORAC_RA_TELESCOPE_OFFSET", $raoff);


