# _APERTURE_CORRECTION_    -*- perl -*-
#
# Determine the aperture photometric correction.
#
# TASK: KAPPA - STATS, CALC, APERADD
#
# Imports from:
#    _ESTIMATE_PSF_: FWHM, PSFNAME

# Exports:
#    RAPTURE, CORRECTION, APERTURE, APERTURE_FACTOR
#

# Determine whether it is time to do aperture photometry.
# We have to specify this since we have to decide whether we
# are using $Frm or $Grp and in general this routine is run
# on reduced images.
    my $do_aphot = $Frm->hdr( "DO_APHOT" );
    if ( $do_aphot ) {

# This should only be performed on OBJECT frames.
       if ( $Grp->hdr( "OBSTYPE" ) eq "OBJECT" ) {

# Find integrated flux of psf
# ===========================

# Obtain the FWHM of the point-spread function.
          my $fwhm = $_ESTIMATE_PSF_{FWHM};

# Set user-accessible mapping and parameters.
          my $user = "";
          my $psfname = ($_APERTURE_CORRECTION_{PSF} || "psf$$");

# Sum the flux within the fitted-psf image.  This should be only a
# slight underestimate of the asymptotic flux.
          $Mon{"kappa_mon"}->obeyw("stats","$psfname accept ");
          ( my $ORAC_STATUS, my $fullpsf ) = $Mon{"kappa_mon"}->get("stats","total");

# Obtain the plate scale and FWHM in pixels.
          my $pixelscale = $Grp->hdr( "CDELT1" );

# Set the minimum size to be a generous 7 arcseconds for the moment scaled
# to FWHM units.
          my $minpixap = 7.0 / $pixelscale / $fwhm;

# Constrain supplied apertures.  On UKIRT under its normal excellent seeing
# has a sharp peak (low FWHM) but extended halo.
          my $aperture_factor = ($_APERTURE_CORRECTION_{APERTURE} || "4.5");
          $aperture_factor = min(50.0, max($aperture_factor, $minpixap));
          $_APERTURE_CORRECTION_{APERTURE_FACTOR} = $aperture_factor;

# In order to keep the aperture correction small (like under 1 percent),
# choose an aperture many times the FWHM of the psf.
          ( $ORAC_STATUS, $fwhm ) = $Mon{"kappa_mon"}->get("psf","fwhm");

# Compute the aperture in terms of pixels.  Export this and the
# corresponding radius.
          my $aperture = $fwhm * $aperture_factor;
          $_APERTURE_CORRECTION_{APERTURE} = $aperture;
          $_APERTURE_CORRECTION_{RAPTURE} = $aperture * 0.5;

# Assign the other parameters.  Get the PSF name from the _ESTIMATE_PSF_
# primitive, or override from the command line.
          my $psfname = ($_APERTURE_CORRECTION_{PSF} || $_ESTIMATE_PSF_{PSFNAME} || "junk");

# Integrate flux within aperture used
# ===================================

# Specify the other parameters for the CENTROID stage.
          my $header = "inpic=$psfname";
          my $hidden = "diam=$aperture";

# Integrate the psf flux within the aperture about the image centre
# (that's where PSF puts it).  Reset to get a new image centre.
          $Mon{"kappa_mon"}->obeyw("aperadd","$header $user $hidden reset accept ");

# Extract the flux from within the aperture.
          ( $ORAC_STATUS, my $partpsf ) = $Mon{"kappa_mon"}->get("aperadd","total");

# Store the correction factor
          $_APERTURE_CORRECTION_{CORRECTION} = $fullpsf / $partpsf;

# Report the processing status.
          orac_print "Orac says: Aperture correction: ".$_APERTURE_CORRECTION_{CORRECTION} . "\n\n";
       }
    }
