# _GENERATE_OFFSETS_QUADRANT_JITTER_TELE_       -*- perl -*-
#
# Find the telescope offsets between the frames of a Quadrant Jitter. 
#
# Selection
# =========

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Test whether or not it is time to make a mosaic.
       my $makemos = $Frm->hdr( "MAKE_MOSAIC" );
       if ( $makemos ) {

# Obtain the cycle number from the header.
          my $cycleno = $Frm->hdr( "CYCLE_NUMBER" );

# Select those members in the current cycle.
          my $cycleGrp = $Grp->subgrp( CYCLE_NUMBER => $cycleno );

# Make a local $Grp containing just the current cycle.
          {
             my $Grp = $cycleGrp;

# Form a list of input file names for CCDPACK tasks.
             my @objects = $Grp->membernames;

# Convert list to comma-separated list.
             my $objlist = join( ",", @objects );

# Create text file to hold the list of input files, one per line.  This
# is needed because expanded lists of files may make the command line too
# long for the ADAM message system.
             unlink( "objlist.inlist$$" );
             open( INLIST, ">objlist.inlist$$" );
             print INLIST join( "\n", @objects ), "\n";
             close( INLIST );

# Use telescope offsets from the headers.
             _TELE_OFFSETS_

# Register
# ========

# Specify the other parameters for the REGISTER stage.
             my $header = "inlist='^objlist.inlist$$'";
             my $hidden = "fittype=1"; 

# Register the frames using a shift of origin.  Create the CCDPACK
# TRANSFORM extensions.
             $Mon{"ccdpack_reg"}->obeyw("register","$header $hidden accept");
             unlink( "objlist.inlist$$" );

# Report processing status.
             orac_print "Orac says: frames $objlist registered\n";
          }
       }
    }
