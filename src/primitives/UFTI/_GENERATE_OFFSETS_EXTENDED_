# _GENERATE_OFFSETS_EXTENDED_       -*- perl -*-
#
# Function:
#    Find the offsets between the frames in an EXTENDED_nxm recipe.
#
# Primitives Called:
#    _GENERATE_OFFSETS_
#
# Arguments:
#    COMPLETE = REAL (Given)
#       Completeness of matched features for registration between two
#       frames to be accepted.  It must be in the range 0.2 to 1.0. [0.5]
#    MINPIX = INTEGER (Given)
#       Minimum number of contiguous pixels above the PERCENTILE level
#       to be considered a registration feature.  It must be at least 6.
#       [12]
#    PERCENTILE = REAL (Given)
#       Percentile threshold for locating objects to register frames. 
#       It must be in the range 75 to 99.9. [96]

# Selection
# =========

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY") {

# Determine whether it is time to make a mosaic.
       my $makemosaic = $Frm->hdr( "MAKE_MOSAIC" );
       my $grandmosaic = $Frm->hdr( "MAKE_GRAND_MOSAIC" );
       if ( $makemosaic || $grandmosaic ) {

# Determine whether the full mosaic is required, otherwise make the
# mosaic for the current row.
          my $tarGrp;
          if ( $grandmosaic ) {

# Form a subgroup comprising all the target frames.
             $tarGrp = $Grp->subgrp( TARGET_OR_SKY => "target" );

          } else {

# Obtain the current row number.
             my $ext_row = $Frm->hdr( "EXTENDED_ROW" );

# Form a subgroup comprising all the target frames in the current row.
             $tarGrp = $Grp->subgrp( TARGET_OR_SKY => "target",
                                     EXTENDED_ROW => $ext_row );
          }


# Make a local $Grp containing just the target frames within the current
# row.
          {
             my $Grp = $tarGrp;

# Generate the offsets
# ====================

# Obtain the parameters for the detection.
             my $percentile = ( $_GENERATE_OFFSETS_EXTENDED_{PERCENTILE} || 96 );
             my $minpix = ( $_GENERATE_OFFSETS_EXTENDED_{MINPIX} || 12 );
             my $complete = ( $_GENERATE_OFFSETS_EXTENDED_{COMPLETE} || 0.5 );

# Call the generic primitive which does most of the work.
             _GENERATE_OFFSETS_ PERCENTILE=$percentile MINPIX=$minpix COMPLETE=$complete CENTRAL_SOURCE=FALSE

# End of scope of local $Grp aka $tarGrp.
          }
       }
    }
