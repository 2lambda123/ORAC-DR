#+
# Name:
#    _TELE_OFFSETS_
#
# Purpose:
#    Finds telescope offsets for the frames in the current group.
#
# Language:
#    Perl5
#
# Description:
#    This primitive finds the jitter offsets for the members of the
#    current group of frames.  It uses the telescope offsets in
#    frame headers.  The offsets and the registration method are
#    reported.
#
#    The resultant offsets are written to the corresponding
#    CCDPACK/FINDOFF ".off" offset file for each frame.  Each
#    offset file is recorded in its corresponding frame as if the
#    registration were found automatically.
#
#    Offsets may also be adjusted for a moving target.
#
# Arguments:
#    ANGLE = REAL (Given)
#       Rotation angle of the Declination axis with respect to the
#       frame's y axis measured counter clockwise.
#    MOVING_TARGET = LOGICAL (Given)
#       If true (1), the source is a moving target and frames are to
#       register the moving target not the fixed stars.  [0]
#
# Notes:
#    -  This primitive is suitable for both UFTI and IRCAM.
#    Instrument-specific headers are obtained where appropriate.
#    -  Processing only occurs for object and sky frames.
#    -  Header CROTA2---the angle of the chip's y axis with respect
#    to North (positive is anti-clockwise)---is used to convert sky
#    co-ordinate displacements into pixels using a simple rotation
#    matrix.  If this header is absent, no rotation is assumed.   
#    This formulation is satisfactory for the UKIRT's instrument scales
#    and sizes, and its declination range.  A more-sophisticated
#    transformation would be needed near the poles or for wide fields.
#
# Tasks:
#    CCDPACK: CCDEDIT.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Selection
# =========

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Arguments
# =========

# Is there a moving target?
       my $moving_target = $_TELE_OFFSETS_{MOVING_TARGET};
       $moving_target = defined( $moving_target ) ? $moving_target : 0;

# Obtain the rotation angle in degrees.
       my $defrot = $Frm->hdr( "CROTA2" );
       $defrot = defined( $defrot ) ? $defrot : 0.0;
       my $rotangle = ( $_TELE_OFFSETS_{ANGLE} || $defrot );

# Preliminaries
# =============

# Obtain a list of the filenames of the group members.
       my @frames = $Grp->membernames;
       my $objlist = join( ",", @frames );

# Create text file to hold the list of input files, one per line.  This
# is needed because expanded lists of files may make the command line too
# long for the ADAM message system.
       unlink( "faolist.inlist$$" );
       open( INLIST, ">faolist.inlist$$" );
       print INLIST join( "\n", @frames ), "\n";
       close( INLIST );

# Create a file for storing the filenames of the offset files.
       my $offlist = "ssoff.lis$$";
       unlink( "$offlist" );
       open ( OFFLIST, "> $offlist" );

# Find telescope offsets for each group member.
# =============================================

# Loop through all the frames.
       foreach my $Frame ( $Grp->members ) {
          my $ndf = $Frame->file;

# Find the Cartesian offsets in pixels.
          _GET_CARTESIAN_TELESCOPE_OFFSETS_
          my $xoffset = $_GET_CARTESIAN_TELESCOPE_OFFSETS_{XOFF};
          my $yoffset = $_GET_CARTESIAN_TELESCOPE_OFFSETS_{YOFF};

# Specify the offsets to be used.
          orac_print "Orac says: using telescope offsets ($xoffset,$yoffset) for frame $ndf\n";

# Create an offset file as used by CCDPACK's REGISTER task.  Store the
# the frame name and offsets within the file.
          my $off_file = $ndf . ".off";
          unlink ( "$off_file" );
          open ( OFFSET, "> $off_file" );
          print OFFSET "1  $xoffset  $yoffset\n";
          close ( OFFSET );

# Record the name offset file in GRP indirection file for use by CCDEDIT.
          print OFFLIST "$off_file\n";
       }
       close ( OFFLIST );

# Moving target
# =============
       if ( $moving_target ) {
          _ADJUST_OFFSETS_TO_MOVING_TARGET_
       }

# Record the offset files within their associated frames.
# =======================================================

# Specify parameters for editing CCDPACK headers.
       my $header = "in='^faolist.inlist$$' inlist=\'^$offlist\'";
       my $hidden = "mode=alist"; 

# Associate the position-list files with the current object frames.
       $Mon{"ccdpack_reg"}->obeyw("ccdedit","$header $hidden");
       unlink( "faolist.inlist$$", $offlist );
    }

# Podule
# ======

=head1 NAME

_TELE_OFFSETS_ -- Finds approximate pixel offsets for the frames in the current group.

=head1 DESCRIPTION

This primitive finds the jitter offsets for the members of the
current group of frames.  It uses the telescope offsets in
frame headers.  The offsets and the registration method are
reported.

The resultant offsets are written to the corresponding
CCDPACK/FINDOFF ".off" offset file for each frame.  Each
offset file is recorded in its corresponding frame as if the
registration were found automatically.

Offsets may also be adjusted for a moving target.

=head1 ARGUMENTS

=over 4

=item ANGLE = REAL (Given)

Rotation angle of the Declination axis with respect to the
frame's y axis measured counter clockwise.

=item MOVING_TARGET = LOGICAL (Given)

If true (1), the source is a moving target and frames are to
register the moving target not the fixed stars.  [0]

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for both UFTI and IRCAM.
Instrument-specific headers are obtained where appropriate.

=item *

Processing only occurs for object and sky frames.

=item *

Header CROTA2---the angle of the chip's y axis with respect
to North (positive is anti-clockwise)---is used to convert sky
co-ordinate displacements into pixels using a simple rotation
matrix.  If this header is absent, no rotation is assumed.   
This formulation is satisfactory for the UKIRT's instrument scales
and sizes, and its declination range.  A more-sophisticated
transformation would be needed near the poles or for wide fields.

=back

=head1 TASKS

CCDPACK: CCDEDIT.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
