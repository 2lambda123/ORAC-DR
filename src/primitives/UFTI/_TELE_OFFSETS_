# _TELE_OFFSETS_       -*- perl -*-
#
#  Finds the telescope offsets from the headers and creates
#  offset files for registration.

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Obtain the rotation angle in degrees.
       my $rotangle = ( $_TELE_OFFSETS_{ANGLE} || 0.65 );

# Define some useful variables to apply the rotation matrix.
       my $pi = atan2( 1, 1 ) * 4;
       my $dtor = $pi / 180.0;
       my $cosrot = cos( $rotangle * $dtor );
       my $sinrot = sin( $rotangle * $dtor );

# Obtain a list of the filenames of the group members.
       my @frames = $Grp->membernames;
       my $objlist = join( ",", @frames );

# Create text file to hold the list of input files, one per line.  This
# is needed because expanded lists of files may make the command line too
# long for the ADAM message system.
       unlink( "faolist.inlist$$" );
       open( INLIST, ">faolist.inlist$$" );
       print INLIST join( "\n", @frames ), "\n";
       close( INLIST );

# Create a file for storing the filenames of the offset files.
       my $offlist = "ssoff.lis$$";
       unlink( "$offlist" );
       open ( OFFLIST, "> $offlist" );

# Loop through all the frames.
       foreach my $frame ( $Grp->members ) {
          my $ndf = $frame->file;

# Obtain the plate scale.  Hardwire for the moment as the headers are
# known to be wrong.
          my $xpixelscale = 0.09075;
          my $ypixelscale = 0.09075;
#          $pixelscale =  $frame->hdr( "PIXELSIZ" );

# Obtain the telescope offsets.
          my $xoff = $frame->hdr( "TRAOFF" );
          my $yoff = $frame->hdr( "TDECOFF" );
          my $offtype = "telescope";

# Convert to pixel offsets of the object in the Cartesian sense.
          my $xoffset = $xoff / $xpixelscale;
          my $yoffset = -1.0 * $yoff / $ypixelscale;

# Apply the rotation matrix.
          $xoffset = $xoffset * $cosrot - $yoffset * $sinrot;
          $yoffset = $xoffset * $sinrot + $yoffset * $cosrot;

# Specify the offsets to be used.
          orac_print "Orac says: using $offtype offsets ($xoffset,$yoffset) for frame $ndf\n";

# Create an offset file as used by CCDPACK's REGISTER task.  Store the
# the frame name and offsets within the file.
          my $off_file = $ndf . ".off";
          unlink ( "$off_file" );
          open ( OFFSET, "> $off_file" );
          print OFFSET "1  $xoffset  $yoffset\n";
          close ( OFFSET );

# Record the name offset file in GRP indirection file for use by CCDEDIT.
          print OFFLIST "$off_file\n";
       }
       close ( OFFLIST );

# Specify parameters for editing CCDPACK headers.
       my $header = "in='^faolist.inlist$$' inlist=\'^$offlist\'";
       my $hidden = "mode=alist"; 

# Associate the position-list files with the current object frames.
       $Mon{"ccdpack_reg"}->obeyw("ccdedit","$header $hidden");
       unlink( "faolist.inlist$$" );
    }
