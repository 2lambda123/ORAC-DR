#+
# Name:
#    _DIFFERENCE_PAIR_
#
# Purpose:
#    Subtracts pairs of frames.
#
# Language:
#    Perl5
#
# Description:
#    This primitive subtracts pairs of consecutive frames in a group.
#    The sense of the subtraction is defined by the steering header
#    PAIR_ORDER.  When PAIR_ORDER is true, the current frame is
#    subtracted from the previous frame, and vice versa.  In both cases,
#    the frame being subtracted from is designated the primary frame. 
#
#    The resultant difference frame becomes part of a group $diffGrp.
#    $diffGrp is created if it does not exist, and a reference to this
#    new group is recorded in the internal group header DIFFERENCE_GROUP.
#    Access to this group for further invocations is via DIFFERENCE_GROUP.
#
#    The primitive then evaluates displacements in equatorial
#    co-ordinates between the two frames and reports them; it records
#    the displacements in the difference frame as XOFFSET_DIFFERENCE and
#    YOFFSET_DIFFERENCE headers.  The difference frame inherits the
#    headers of the primary frame.
#
# Notes:
#    -  This primitive is suitable for both UFTI and IRCAM.
#    Instrument-specific headers are obtained where appropriate.
#    -  Processing only occurs for object and sky frames when
#    the steering header DIFFERENCE_PAIR is true.
#    -  The difference image can be displayed.
#    -  The offsets in each differenced-pair frame are the average
#    of the two frames, i.e. symmetric jittering is assumed.
#    -  The start airmass is propagated from the first frame and the
#    end airmass from the second frame.
#    -  The primary frame title is propagated to the differenced frame.
#
# Output Data:
#    -  Differenced pairs inheriting the primary frame's name but with
#    the _dp suffix.
#    -  Group of differenced frames via the DIFFERENCE_GROUP internal
#    group header.
#
# Tasks:
#    KAPPA: FITSMOD, MATHS, SUB.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Is it time to difference a pair?
       my $take_difference = $Frm->hdr( "DIFFERENCE_PAIR" );

       if ( $take_difference ) {

# Subtract within the pair.
# =========================

# Generate the input and output filenames.  The output file has the same
# name as the input except the suffix is changed to indicate that it is
# differenced pair.
          ( my $in, my $out ) = $Frm->inout( "_dp" );

# Obtain the previous file from the main group.
          my $previousFrm = $Grp->frame( $Grp->num - 1 );
          my $previous = $previousFrm->file;

# Obtain the sense of the subtractions from the steering header.  Note
# we can't use SUB in both cases because we need to propagate the
# headers from the $in NDF, but the primary NDF in SUB is that specified
# by parameter IN1.
          my $header;
          if ( $Frm->hdr( "PAIR_ORDER" ) ) {
             $header = "ib=$previous ia=$in out=$out title=! exp='ib-ia'";
             $Mon{"kappa_mon"}->obeyw( "maths", "$header" );
          } else {

# Difference the two frames.
             $header = "in2=$previous in1=$in out=$out title=!";
             $Mon{"kappa_mon"}->obeyw( "sub", "$header" );
          }

# Report the processing status.
          orac_print "Orac says: $in subtracted from $previous to make $out: " .
                     "Pair differenced\n";

# Access or create the group of differenced frames.
# =================================================

# Does the Group of difference frames exist?  If not create it and
# inherit the group file name ftom the main group.
          my $diffGrp = $Grp->uhdr( "DIFFERENCE_GROUP" );
          if ( ! defined( $diffGrp ) ) {
             $diffGrp = $Grp->new;
             $diffGrp->file( $Grp->file );

#  Store the pointer to the group in the main Group user header.
             $Grp->uhdr( "DIFFERENCE_GROUP", $diffGrp );
          }

# Evaluate the offsets between the frames.
# ========================================

# Obtain the instrument name, and hence the header keywords for the
# telescope offsets.  
          my ( $instrument, $raname, $decname, $xoff, $yoff );
          if ( $instrument =~ /^UFTI/ ) {
             $raname = "TRAOFF";
             $decname = "TDECOFF";
          } else {
             $raname = "RAOFF";
             $decname = "DECOFF";
          }

# Since the frames are combined, we find the average of their offsets.
          $xoff = 0.5 * ( $previousFrm->hdr( $raname ) +
                          $Frm->hdr( $raname ) );
          $yoff = 0.5 * ( $previousFrm->hdr( $decname ) +
                          $Frm->hdr( $decname ) );

# Revise the offsets stored in the FITS extension in the output (differenced
# pair) image.  Leave the position and comment unchanged.
          $header = "ndf=$out keyword=$raname edit=update value=$xoff position=!";
          $Mon{"ndfpack_mon"}->obeyw( "fitsmod", "$header comment=\\\$C" );
          $header = "ndf=$out keyword=$decname edit=update value=$yoff position=!";
          $Mon{"ndfpack_mon"}->obeyw( "fitsmod", "$header comment=\\\$C" );

# Propagate the start airmass from the earlier of the two frames.  The end
# airmass comes from the second observation.
          my $amstart = $previousFrm->hdr( "AMSTART" );
          $header = "ndf=$out keyword=AMSTART edit=update value=$amstart position=!";
          $Mon{"ndfpack_mon"}->obeyw( "fitsmod", "$header comment=\\\$C" );

# Report the processing status.
          orac_print "Orac says: $in subtracted from $previous to make $out: " .
                     "Pair differenced\n";

# Evaluate the displacements between the positive and negative images.
# ====================================================================

# Derive the displacement between previous and current frames.  Here we
# assume symmetry about the centre, so that the pair of images can be located
# quickly, and hence measured.
          my ( $xdisp, $ydisp );
          $xdisp = $previousFrm->hdr( $raname ) - $Frm->hdr( $raname );
          $ydisp = $previousFrm->hdr( $decname ) - $Frm->hdr( $decname );

# Change the sign for the reverse order.
          if ( ! $Frm->hdr( "PAIR_ORDER" ) ) {
             $xdisp = -$xdisp;
             $ydisp = -$ydisp;
          }

# Report the offsets.
          orac_print "The offsets between the positive and negative images is ($xdisp,$ydisp).\n";

# Store the differenced frame in the group.
# =========================================

# Create a new frame to store the differenced pair image.
          my $tempFrm = $Frm->new( $out );

# Need to propagate the raw frame as ORAC-DR pattern matches for files
# ending in a number to set the $Frm->number, which is needed for the
# template method.
          $tempFrm->raw( $Frm->raw );

# Transfer the headers to the differenced frame, being sure to transfer
# from the primary frame.
          if ( $Frm->hdr( "PAIR_ORDER" ) ) {
             %{$tempFrm->hdr} = ( %{$previousFrm->hdr} );
             %{$tempFrm->uhdr} = ( %{$previousFrm->uhdr} );
          } else {

# The primary frame is the current one, so transfer its headers to
# the differenced frame.
             %{$tempFrm->hdr} = ( %{$Frm->hdr} );
             %{$tempFrm->uhdr} = ( %{$Frm->uhdr} );
          }

# Revise the offsets stored in the hdr.
          $tempFrm->hdr( $raname, $xoff );
          $tempFrm->hdr( $decname, $yoff );

# Store the displacements in the differenced frame.
          $tempFrm->hdr( "XOFFSET_DIFFERENCE", $xdisp );
          $tempFrm->hdr( "YOFFSET_DIFFERENCE", $ydisp );

# Store the differenced frame in the difference group.
          $diffGrp->push( $tempFrm );

# Display the image using the temporary frame.
          $Display->display_data( $tempFrm ) if (defined $Display);

       }
    }

# Podule
# ======

=head1 NAME

DIFFERENCE_PAIR -- Subtracts pairs of frames.

=head1 DESCRIPTION

This primitive subtracts pairs of consecutive frames in a group.
The sense of the subtraction is defined by the steering header
PAIR_ORDER.  When PAIR_ORDER is true, the current frame is
subtracted from the previous frame, and vice versa.  In both cases,
the frame being subtracted from is designated the primary frame. 

The resultant difference frame becomes part of a group $diffGrp.
$diffGrp is created if it does not exist, and a reference to this
new group is recorded in the internal group header DIFFERENCE_GROUP.
Access to this group for further invocations is via DIFFERENCE_GROUP.

The primitive then evaluates displacements in equatorial
co-ordinates between the two frames and reports them; it records
the displacements in the difference frame as XOFFSET_DIFFERENCE and
YOFFSET_DIFFERENCE headers.  The difference frame inherits
the headers of the primary frame.

=head1 NOTES

=over 4

=item *

This primitive is suitable for both UFTI and IRCAM.
Instrument-specific headers are obtained where appropriate.

=item *

The difference image can be displayed.

=item *

Processing only occurs for object and sky frames when
the steering header DIFFERENCE_PAIR is true.

=item *

The offsets in each differenced-pair frame are the average
of the two frames, i.e. symmetric jittering is assumed.

=item *

The start airmass is propagated from the first frame and the
end airmass from the second frame.

=item *

The primary frame title is propagated to the differenced frame.

=back

=head1 OUTPUT DATA

=over 4

=item *

Differenced pairs inheriting the primary frame's name but with
the _dp suffix.

=item *

Group of differenced frames via the DIFFERENCE_GROUP internal group
header.

=back

=head1 TASKS

KAPPA: FITSMOD, MATHS, SUB.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
