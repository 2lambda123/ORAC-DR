# _MAKE_FLAT_FROM_GROUP_    -*- perl -*-
#
# Forms a flat-field from a group of object frames.  It uses a clipped
# median to combine normalised frames pixel by pixel.
#
# TASKS: CCDPACK - MAKEFLAT
#
# This should only be performed on OBJECT frames.
    if ($Frm->hdr(OBSTYPE) =~ /OBJECT/ || $Frm->hdr(OBSTYPE) =~ /SKY/) {

# Test whether or not it is time to make a flat.
       $makeflat = $Frm->hdr( "MAKE_FLAT" );
       if ( $makeflat =~ /TRUE/ ) {

# Form a list of input file names for MAKEFLAT from the other members
# of the group.  This is not as obvious as it sounds since we are
# trying to do this by looking at the current file values for each
# Frame object in the loop.  First time around everything is fine.
# Second time around we realise that the previous frames now have the
# wrong names since they have been flat-fielded etc.  We now have to
# construct the input names from the template.  The template is the
# current frame name.
          $Grp->template($Frm->file);

# Form a list of input file names for CCDPACK tasks.  Inquire the number
# of files to be processed.  Set up the object list assuming that
# everything in the Group members list contains the file pointer to
# pre-flatfielded data.
          @objects = $Grp->membernames;
          $numfiles = $Grp->num + 1;
          $objlist = join(",", @objects);

# Create text file to hold the list of input files, one per line.  This
# is needed because expanded lists of files may make the command line too
# long for the ADAM message system.
          unlink ("objlist.inlist");
          open (INLIST, ">objlist.inlist");
          for ( $i = 0; $i < $numfiles; $i++ ) {
             print INLIST @objects[$i],"\n";
          }
          close (INLIST);

# Assign the other parameters.  Note that output flat is hardwired for the
# moment.
          $out = $Grp->name.'_flat';
          $hidden = "method=median sigmas=2.0 reset accept"; 
          $header = "in='^objlist.inlist' out=$out title=\'Flat field\'";

# Median filter of the debiassed and dark-corrected object frames to
# produce the flatfield.
          $Mon{"ccdpack_red"}->obeyw("makeflat","$header $hidden");
          unlink ("objlist.inlist");

# Set the current flat in the calibration object.
          _FILE_FLAT_ NAME=$out

# Report the status of the processing.
          orac_print "Orac says: frames $objlist used for flat\n";

# Display the image.
          _DISPLAY_FLAT_IMAGE_

       };
    };
