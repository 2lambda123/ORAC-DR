#+
# Name:
#    DELETE_TEMP_GROUP_FILES
#
# Purpose:
#    Removes intermediate frames from a group.
#
# Language:
#    Perl5
#
# Description:
#    This is a generic primitive to handle end of recipe tidy up of
#    intermediate files stored with groups and can only be deleted when
#    the entire group has been used.
#
# Notes:
#    In some cases the GROUP primitives require certain intermediate
#    files to be available in order for the recipe to proceed (e.g.
#    recipes involving the re-calculation of flatfields will want to
#    retain the pre-flatfielded data on disk so that the flatfielded
#    images can be regenerated).  This script is intended to be used for
#    their removal.  This means that some care must be taken to remove
#    the files at the correct time.  The recommended approach is to use
#    steering information associated with a recipe in a <recipe>_TIDY
#    primitive.
#
# Arguments:
#    DELETE = CHARACTER (Read)
#       Comma-separated list of suffices for files that are to be deleted.
#       If DELETE is not supplied, no files are removed.
#
# Examples:
#    _DELETE_TEMP_GROUP_FILES_ KEEP=_trn,_flat
#        This would erase all files ending in _trn and _flat associated
#        with the current frame (group files do not count).
#
# Prior Requirements:
#     The primitive uses $Grp, the $Frm->inout and $Grp->template methods
#     to make a list of frames to delete.  Thus if the frames are only a
#     subset of $Grp at the time this primitive is called, make a local
#     $Grp which is the subgrp.
#
#       $mosgrp = $Grp->subgrp( CYCLE_NUMBER => $cycleno );
#       {
#          my $Grp = $mosgrp;
#          _DELETE_TEMP_GROUP_FILES_ DELETE=_qm,_dk,_om
#          undef $Grp;
#       }

# Authors:
#    MJC: Malcolm J. Currie (JAC)
#    TJ: Tim Jenness (JAC)
#
# Copyright:
#    Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Obtain the DELETE argument's value.
    my $remove = $_DELETE_TEMP_GROUP_FILES_{DELETE};

# Generate the array of extensions.
    my @extensions = split( /,/, $remove );

# If the extensions array contains something, proceed.
    if ( $#extensions > -1 ) {
       orac_print "Removing temporary group files with suffices $remove...\n";

# Loop through the extensions.
       foreach my $extension ( @extensions ) {

# Use the current frame to make a template name.
          (my $in, my $out) = $Frm->inout( $extension );

# Change the group members to match the template.
          $Grp->template( $out );

# Erase all the frames in the group. 
          foreach my $Frm ( $Grp->members ) {
            $Frm->erase;
          }
       }

    } else {
       orac_warn "Primitive _DELETE_TEMP_GROUP_FILES_ called without specifying any files to be deleted\nNot deleting any temporary files....\n";

    }

# Podule
# ======

=head1 NAME

_DELETE_TEMP_GROUP_FILES_ -- Removes intermediate frames from a group.

=head1 DESCRIPTION

This is a generic primitive to handle end of recipe tidy up of
intermediate files stored with groups and can only be deleted when the
entire group has been used.

=head1 NOTES

In some cases the GROUP primitives require certain intermediate files
to be available in order for the recipe to proceed (e.g. recipes
involving the re-calculation of flatfields will want to retain the
pre-flatfielded data on disk so that the flatfielded images can be
regenerated).  This script is intended to be used for their removal.
This means that some care must be taken to remove the files at the
correct time.  The recommended approach is to use steering information
associated with a recipe in a E<lt>recipeE<gt>_TIDY primitive.

=head1 ARGUMENTS

=over 4

=item DELETE = CHARACTER (Read)

Comma-separated list of suffices for files that are to be deleted.
If DELETE is not supplied, no files are removed.

=back

=head1 EXAMPLES

=over 4

=item _DELETE_TEMP_GROUP_FILES_ DELETE=_trn,_flat

This would erase all files ending in _trn and _flat associated with
the current frame (group files do not count).

=back

=head1 PRIOR REQUIREMENTS

The primitive uses $Grp, the $Frm-E<gt>inout and $Grp-E<gt>template methods to
make a list of frames to delete.  Thus if the frames are only a subset
of $Grp at the time this primitive is called, make a local $Grp which
is the subgrp.

C<
   $mosgrp = $Grp->subgrp( CYCLE_NUMBER => $cycleno );
   {
      my $Grp = $mosgrp;
      DELETE_TEMP_GROUP_FILES_ DELETE=_qm,_dk,_om
      undef $Grp;
   }
>

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

TJ: Tim Jenness (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
