#+
# Name:
#    _CLIPPED_MEAN_
#
# Purpose:
#    Finds the clipped mean of an object or sky frame.
#
# Language:
#    Perl5
#
# Description:
#    Use progressive sigma-clipping to find a representative mean of
#    an object frame.  The default clipping thresholds give a reasonable
#    approximation to the mode.
#
# Arguments:
#    CLIP = CHARACTER (Read)
#       The clipping limits as a comma-separated list. ["2,3,3"]
#    RESULT = REAL (Write)
#       The calculated clipped mean.
#
# Notes:
#    -  This primitive is suitable for both UFTI and IRCAM.
#    -  Only operates on OBJECT and SKY frames.
#
# Tasks:
#    KAPPA: STATS.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
#-

# Test whether or not this is an object frame.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Specify the parameters for the statistics task.
       my $clip = ( $_CLIPPED_MEAN_{CLIP} || "2,3,3" );
       my $header = "ndf=".$Frm->file;
       my $hidden = "clip=[" . $clip . "]";

# Calculate the clipped mean of the frame.
       $Mon{"kappa_mon"}->obeyw("stats","$header $hidden");

# Extract the clipped mean of the frame.
       ( my $ORAC_STATUS, my $clipmean ) = $Mon{"kappa_mon"}->get("stats","mean");

# Export the value.
       $_CLIPPED_MEAN_{RESULT} = $clipmean;
    }

# Podule
# ======

=head1 NAME

CLIPPED_MEAN -- Finds the clipped mean of an object or sky frame.

=head1 DESCRIPTION

Use progressive sigma-clipping to find a representative mean of
an object frame.  The default clipping thresholds give a reasonable
approximation to the mode.

=head1 ARGUMENTS

=over 4

=item CLIP = CHARACTER (Read)

The clipping limits as a comma-separated list. ["2,3,3"]

=item RESULT = REAL (Write)

The calculated clipped mean.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for both UFTI and IRCAM.

=item *

Only operates on OBJECT and SKY frames.

=back

=head1 TASKS

KAPPA: STATS.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=cut
