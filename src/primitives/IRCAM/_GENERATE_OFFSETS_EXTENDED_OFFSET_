# _GENERATE_OFFSETS_EXTENDED_OFFSET_       -*- perl -*-
#
# Find the offsets between the frames using the headers. 
#
# TASK: CCDPACK - FINDOBJ, FINDOFF, REGISTER
#

# Selection
# =========

# This should only be performed on OBJECT frames.
    if ($Frm->hdr(OBSTYPE) =~ /OBJECT/ || $Frm->hdr(OBSTYPE) =~ /SKY/) {

# Obtain the cycle frequency of skies.  A value of 2 means the object and
# sky frames alternate.
       $cycle = $Frm->hdr( "SKY_FREQ" );
       
# Test whether or not this is an object frame or a sky frame. 
       $class = $Frm->hdr( "TARGET_OR_SKY" );
       $count = $Grp->num + 1;
       
# Here we want to generate offsets for a new mosaic.  This occurs when
# when a new flat has been calculated, and provided that there are at least
# three blank-sky frames.
       if ( $class =~ /sky/ && ($Grp->num + 1) >= 3 * $cycle ) {

# Form a list of the target file names for CCDPACK tasks by using a subgroup.
          $targrp = $Grp->subgrp( TARGET_OR_SKY => "target" );
          $numfiles = $targrp->num + 1;
          @objects = $targrp->membernames;

# Form a comma-separated list of the target frames.
          $objlist = join(",", @objects);

# Create text file to hold the list of input files, one per line.  This
# is needed because expanded lists of files may make the command line too
# long for the ADAM message system.
          unlink ("objlist.inlist");
          open (INLIST, ">objlist.inlist");
          for ( my $i = 0; $i < $numfiles; $i++ ) {
             print INLIST @objects[$i],"\n";
          }
          close (INLIST);

# Derive offsets
# ==============

# Create a file for storing the filenames of the offset files.
          $offlist = "ssoff.lis";
          unlink ( "$offlist" );
          open ( OFFLIST, "> $offlist" );

# Loop through all the object frames.
          foreach $target ( $targrp->members ) {

# Use the offsets and pixelsize in the headers to find the offsets in pixels.
              $raoff = $target->hdr( "RAOFF" );
              $decoff = $target->hdr( "DECOFF" );
              $pixelscale = $target->hdr( "PIXELSIZ" );

              $xoff = $raoff / $pixelscale;
              $yoff = -1.0 * $decoff / $pixelscale;

# Create an offset file as used by CCDPACK's REGISTER task.  Store the
# the frame name and offsets within the file.
              $offfile = $target->file . ".off";
              unlink ( "$offfile" );
              open ( OFFSET, "> $offfile" );
              print OFFSET "1  $xoff  $yoff\n";
              close ( OFFSET );

# Record the name offset file in GRP indirection file for use by CCDEDIT.
              print OFFLIST "$offfile\n";
          }
          close ( OFFLIST );

# Specify parameters for editing CCDPACK headers.
          $header = "in='^objlist.inlist' inlist=\'^$offlist\'";
          $hidden = "mode=alist"; 

# Associate the position-list files with the current object frames.
          $ORAC_STATUS = $Mon{'ccdpack_reg'}->control('par_reset');
          $Mon{"ccdpack_reg"}->obeyw("ccdedit","$header $hidden");

# Register
# ========

# Specify the other parameters for the REGISTER stage.
          $header = "inlist='^objlist.inlist'";
          $hidden = "fittype=1"; 

# Register the frames using a shift of origin.  Create the CCDPACK
# TRANSFORM extensions.
          $ORAC_STATUS = $Mon{'ccdpack_reg'}->control('par_reset');
          $Mon{"ccdpack_reg"}->obeyw("register","$header $hidden accept");
          unlink ("objlist.inlist");

# Report processing status.
          orac_print "Orac says: frames $objlist registered\n";

       };
    };
