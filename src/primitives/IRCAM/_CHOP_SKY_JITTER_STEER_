#+
# Name:
#    _CHOP_SKY_JITTER_STEER_
#
# Purpose:
#    Steers processing for CHOP_SKY_JITTER recipes.
#
# Language:
#    Perl5
#
# Description: 
#    This primitive control processing for CHOP_SKY_JITTER recipes through
#    steering headers listed below.  It also reports whether each frame is
#    of the target or of some sky background.
#
# Steering Headers:
#    CYCLE_NUMBER = INTEGER
#       Number of the cycle, a cycle being a set of frames to complete a
#       pass through the recipe.  The first cycle is 0.
#    JITTER_NUMBER = INTEGER
#       The number of frames in the jitter.
#    MAKE_FLAT = LOGICAL
#       Whether or not to make the flat.  A flat is made once all the
#       frames and the bracketing sky are available.
#    MAKE_MOSAIC = LOGICAL
#       Whether or not register the frames and make the full mosaic.
#       The grand mosaic is made once all the frames in a cycle are
#       available.
#    REFERENCE_FRAME = LOGICAL
#       A true value specifies the reference sky frame to which all
#       subsequent skies are normalised.  It is true for the first frame
#       and false for all subsequent frames in the observation.
#    SUBTRACT_SKY = LOGICAL
#       Whether or not it is time to subtract the sky.  Sky subtraction
#       occurs once all the frames in a cycle are available.
#    TARGET_OR_SKY = CHARACTER
#       This is "target" for a target frame, and "sky" for a sky calibration
#       frame.  The target and sky alternate for these recipes.
#    TARGET_NUMBER = INTEGER
#       When TARGET_OR_SKY is "target", this counts the target frames,
#       starting from zero.  It is used for interpolation between sky
#       measurements.
#
# Arguments:
#    NUMBER = INTEGER (Given)
#       The number of target frames in the jitter.  It's the n in
#       CHOP_SKY_JITTERn.  If the argument is absent, a value is
#       derived from the number of offsets, as given by header
#       NOFFSETS.  The formula is NOFFSETS / 2 - 1.  An error results
#       should NOFFSETS be odd.  If neither is available, 9 is used.
#       An error state arises if the number of jittered frames is fewer
#       than 3.  The minimum is 3 because this number of blank skies
#       are needed to form a flat field.  []
#
# Notes:
#    -  This primitive is suitable for both UFTI and IRCAM.
#    -  Processing only occurs for object and sky frames.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Obtain the number of frames in the jitter pattern.
# ==================================================

# First see if a hardwired value has been supplied in the recipe.  This
# deals with old recipes with fixed numbers and cases where a frame or
# more is missing.
       my $number = $_CHOP_SKY_JITTER_STEER_{NUMBER};

# Otherwise use the NOFFSETS header.  In full ORAC, this stores the
# total number of offsets used, but ignores repeat iterators.  By
# convention there is always an offset to the origin at the end.
# There must be an even number of offsets (odd number of frames).
# Apart from avoiding the numerical problem of a non-integer number,
# the recipe demands number target frames, number + 1 skies.  With
# the return to the origin, that's an even number.
       if ( ! defined ( $number ) ) {
          $number = $Frm->hdr( "NOFFSETS" );
          if ( defined( $number ) ) {
             if ( $number % 2 == 0 ) {
                $number = $number / 2 - 1;
             } else {
                orac_err "The number of offsets ($number) is not even, " .
                         "suggesting a missing bracketing sky frame.\n";
             }

# Finally default to the original 9.
          } else {
             $number = 9;
          }
       }

# Report invalid number of frames.
       if ( $number < 3 ) {
          orac_err "The number of jittered frames ($number) is less " .
                   "than 3.\n";
       }

# Set steering headers.
# =====================

# Define handy variables: the frame number, the total number of
# frames in a cycle, and the frame number within the cycle.
       my $fn = $Grp->num;
       my $totframe = $number * 2 + 1;
       my $cycle_fn = $fn % $totframe;

# Specify the first frame as the frame whose mode will be the
# reference for the normalisation of the sky frames.
       if ( $fn % $totframe == 0 ) {
          $Frm->hdr( "REFERENCE_FRAME", 1 );
       } else {
          $Frm->hdr( "REFERENCE_FRAME", 0 );
       }

# Classify this frame as either a target or blank-sky object frame.
# Allow for multiple cycles.
       my $filename;
       if ( $cycle_fn % 2 == 0 ) {
          $Frm->hdr( "TARGET_OR_SKY", "sky" );
          $filename = $Frm->file;
          orac_print "Orac says: $filename is of blank sky.\n";

# Also include the frame number.
       } else {
          $Frm->hdr( "TARGET_OR_SKY", "target" );
          $Frm->hdr( "TARGET_NUMBER", int( $cycle_fn / 2 ) );
          $filename = $Frm->file;
          orac_print "Orac says: $filename is of the target.\n";
       }

# Specify during processing of which frames should the flat be created,
# sky-level subtracted, and a mosaic created.
       if ( $cycle_fn == ( $totframe - 1 ) ) {
          $Frm->hdr( "MAKE_FLAT", 1 );
          $Frm->hdr( "MAKE_MOSAIC", 1 );
          $Frm->hdr( "SUBTRACT_SKY", 1 );

       } else {
          $Frm->hdr( "MAKE_FLAT", 0 );
          $Frm->hdr( "MAKE_MOSAIC", 0 );
          $Frm->hdr( "SUBTRACT_SKY", 0 );
       }

# Insert the number of frames in the jitter.
       $Frm->hdr( "JITTER_NUMBER", $number );

# Insert the grandmosaic cycle number of the set of NUMBER frames.
       my $cycle_number =  max( 0, int( $fn / $totframe ) );
       $Frm->hdr( "CYCLE_NUMBER", $cycle_number );
    }

# Podule
# ======

=head1 NAME

_CHOP_SKY_JITTER_STEER_ -- Steers processing for CHOP_SKY_JITTER recipes.

=head1 DESCRIPTION

This primitive control processing for CHOP_SKY_JITTER recipes through
steering headers listed below.  It also reports whether each frame is
of the target or of some sky background.

=head1 STEERING HEADERS

=over 4

=item CYCLE_NUMBER = INTEGER

Number of the cycle, a cycle being a set of frames to complete a
pass through the recipe.  The first cycle is 0.

=item JITTER_NUMBER = INTEGER

The number of frames in the jitter.

=item MAKE_FLAT = LOGICAL

Whether or not to make the flat.  A flat is made once all the
frames and the bracketing sky are available.

=item MAKE_MOSAIC = LOGICAL

Whether or not register the frames and make the full mosaic.
The grand mosaic is made once all the frames in a cycle are
available.

=item REFERENCE_FRAME = LOGICAL

A true value specifies the reference sky frame to which all
subsequent skies are normalised.  It is true for the first frame
and false for all subsequent frames in the observation.

=item SUBTRACT_SKY = LOGICAL

Whether or not it is time to subtract the sky.  Sky subtraction
occurs once all the frames in a cycle are available.

=item TARGET_OR_SKY = CHARACTER

This is "target" for a target frame, and "sky" for a sky calibration
frame.  The target and sky alternate for these recipes.

=item TARGET_NUMBER = INTEGER

When TARGET_OR_SKY is "target", this counts the target frames,
starting from zero.  It is used for interpolation between sky
measurements.

=back

=head1 ARGUMENTS

=over 4

=item NUMBER = INTEGER (Given)

The number of target frames in the jitter.  It's the I<n> in
CHOP_SKY_JITTERI<n>.  If the argument is absent, a value is
derived from the number of offsets, as given by header
NOFFSETS.  The formula is NOFFSETS / 2 - 1.  An error results
should NOFFSETS be odd.  If neither is available, 9 is used.
An error state arises if the number of jittered frames is fewer
than 3.  The minimum is 3 because this number of blank skies
are needed to form a flat field.  []

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for both UFTI and IRCAM.

=item *

Processing only occurs for object and sky frames.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
