#+
# Name:
#    _SUBTRACT_SKY_EXTENDED_
#
# Purpose:
#    Subtracts a sky background for extended objects.
#
# Language:
#    Perl5
#
# Description:
#    This primitive subtracts a sky background from the target frames, 
#    in either the whole observation or in the current row.  Each sky
#    background is the interpolated between the levels of the bracketing
#    sky frames about each target frame.  It reports each successful sky
#    subtraction, the frames concerned, and the value of the background
#    subtracted.
#
# Notes:
#    -  This primitive is suitable for both UFTI and IRCAM.
#    -  Processing only occurs for object and sky frames, and when the
#    steering header SUBTRACT_SKY is true.
#    -  If steering header MAKE_GRAND_MOSAIC is true, all the target
#    frames within the current cycle, as given by steering header
#    CYCLE_NUMBER, are sky-subtracted.  Otherwise only the targets in
#    the current row are so calibrated.
#    -  The sky levels are stored by reference in the SKY_LEVELS header
#    of the reference frame.  The index of the first of the pair of
#    levels in SKY_LEVELS is the index of the frame given by steering
#    header TARGET_NUMBER.
#    -  The subtraction assumes the same exposure time for the sky and
#    object frame.
#    -  Each sky-subtracted image can be displayed.
#    -  The frames' titles are each propagated.
#
# Output Data:
#    -  Sky-subtracted target frames each inheriting its corresponding
#    input frame's name but with the _ss suffix.
#
# Tasks:
#    KAPPA: CSUB.
#
# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
#-

# This should only be performed on OBJECT frames.
    if ( $Frm->hdr( "OBSTYPE" ) eq "OBJECT" ||
         $Frm->hdr( "OBSTYPE" ) eq "SKY" ) {

# Test whether or not it is time to subtract sky values.  Note this should
# only be set in the steering file when creating a mosaic.
       my $skysub = $Frm->hdr( "SUBTRACT_SKY" );
       if ( $skysub ) {

# Obtain the cycle number.  Default to zero if undefined, so that recipes
# which do not support this feature will continue to work.
          my $cycleno = $Frm->hdr( "CYCLE_NUMBER" );
          $cycleno = defined( $cycleno ) ? $cycleno : 0;

# Determine whether it is time to make a grand mosaic.
          my $grandmosaic = $Frm->hdr( "MAKE_GRAND_MOSAIC" );

# Determine whether the full mosaic is required, otherwise make the
# mosaic for the current row.
          my $tarGrp;
          if ( $grandmosaic ) {

# Form a subgroup comprising all the target frames within the current
# cycle.
             $tarGrp = $Grp->subgrp( TARGET_OR_SKY => "target",
                                     CYCLE_NUMBER => $cycleno );

          } else {

# Obtain the current row number.
             my $ext_row = $Frm->hdr( "EXTENDED_ROW" );

# Form a subgroup comprising all the target frames in the current row.
             $tarGrp = $Grp->subgrp( TARGET_OR_SKY => "target",
                                     EXTENDED_ROW => $ext_row );
          }

# Form a list of the input and output target frames.
          ( my $inref, my $outref ) = $tarGrp->inout( "_ss" );

# Form the single-frame group which is the reference frame.
# This could probably be hardwired to the first frame.
          my $refGrp = $Grp->subgrp( REFERENCE_FRAME => 1 );
          my $refFrm = $refGrp->frame( 0 );
          my $skyref = $refFrm->hdr( "SKY_LEVELS" );

# Process each file in turn because there are no wildcarded file names
# in CSUB.
          foreach my $frame ( $tarGrp->members ) {

# Generate the input and output file names.
             ( my $in, my $out ) = $frame->inout( "_ss" );

# Obtain the target frame number.
             my $target_number = $frame->hdr( "TARGET_NUMBER" );

# Find the sky number corresponding to the object frame.
             my $skyindex =  $target_number + 1;

# Import the sky levels of the sky frames which just bracket the current
# observation.
             my $sky_before = $skyref->[$skyindex-1];
             my $sky_after = $skyref->[$skyindex];

# Derive the sky level for the current object frame by linear interpolation
# between the modal sky values of the pair which most closely bracket the
# object frame.  As the frequency of sky frames is fixed at two, i.e. alternting
# with sky, the interpolation assumes the object frame was taken exactly
# midway in time between its bracketing sky frames.
             my $sky_level = $sky_before - 0.5 * ( $sky_before - $sky_after );

# Specify the parameters.
             my $header = "in=$in scalar=$sky_level out=$out";

# Note all sky frames and data frames should have the same exposure time.
# In theory we could take care of by the Cal object and the headers.
             $Mon{"kappa_mon"}->obeyw("csub","$header");

# Report the processing status.
             orac_print "Orac says: $in to $out: Sky ($sky_level) subtracted\n";

# Display the image.
             _DISPLAY_FRAME_IMAGE_

          }

# Update the target group.
          $tarGrp->membernames( @$outref );

       }
    }

# Podule
# ======

=head1 NAME

SUBTRACT_SKY_EXTENDED -- Subtracts a sky background for extended objects.

=head1 DESCRIPTION

This primitive subtracts a sky background from the target frames, 
in either the whole observation or in the current row.  Each sky
background is the interpolated between the levels of the bracketing
sky frames about each target frame.  It reports each successful sky
subtraction, the frames concerned, and the value of the background
subtracted.

=head1 NOTES

=over 4

=item *

This primitive is suitable for both UFTI and IRCAM.

=item *

Processing only occurs for object and sky frames, and when the
steering header SUBTRACT_SKY is true.

=item *

If steering header MAKE_GRAND_MOSAIC is true, all the target
frames within the current cycle, as given by steering header
CYCLE_NUMBER, are sky-subtracted.  Otherwise only the targets in
the current row are so calibrated.

=item *

The sky levels are stored by reference in the SKY_LEVELS header
of the reference frame.  The index of the first of the pair of
levels in SKY_LEVELS is the index of the frame given by steering
header TARGET_NUMBER.

=item *

The subtraction assumes the same exposure time for the sky and
object frame.

=item *

Each sky-subtracted image can be displayed.

=item *

The frames' titles are each propagated.

=back

=head1 OUTPUT DATA

=over 4

=item *

Sky-subtracted target frames each inheriting its corresponding
input frame's name but with the _ss suffix.

=back

=head1 TASKS

KAPPA: CSUB.

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=cut
