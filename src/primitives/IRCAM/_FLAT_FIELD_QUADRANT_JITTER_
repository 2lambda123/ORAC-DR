# _FLAT_FIELD_QUADRANT_JITTER_      -*-perl-*-
#

# Determine whether or not to mask objects as well as quadrants.
# Determine whether or not to mask objects.
    if ( defined $_FLAT_FIELD_QUADRANT_JITTER_{MASK} ) {
       $mask_obj = $_FLAT_FIELD_QUADRANT_JITTER_{MASK};
    } else {
       $mask_obj = 1;
    }

# Create a group based upon the current frame name.
    $Grp->template( $Frm->file );

# Record the group identifier.
    $mainGrp = $Grp;

# Specify the cycle number.
    $cycleno = int( $Grp->num / 4 );

# Extract from the main group those frames belonging to this group.
    $cyclegrp = $Grp->subgrp( CYCLE_NUMBER => $cycleno );

# Make this the main group for the moment.
    $Grp = $cyclegrp;

# Record the group members at this point.
    @quad_names = $Grp->membernames;

# Make a first pass at a flat using the masked quadrant-jitter technique.
    _MAKE_FLAT_QUADRANT_JITTER_

# Reset the group names to be the ones to flat field.
    $Grp->membernames( @quad_names );

# Apply the flat field.
    _DIVIDE_BY_FLAT_FROM_GROUP_

# Test whether or not it is time to mask objects.  Use global
# argument first, then frame by frame.
    if ( $mask_obj ) {
       $maskobjects = $Frm->hdr( "MASK_OBJECTS" );
       if ( $maskobjects ) {

# Create an array to store the names of the mask files. 
          @maskfiles = ();

# Compute a mask of the objects for each member of the flat-field
# group, using a local $Frm.
          foreach $Frm ( $Grp->members ) {
             _MAKE_OBJECTS_MASK_ OCCULT=17

# Record the mask filename into an array.
             push( @maskfiles, $_MAKE_OBJECTS_MASK_{MASKFILE} );
          }

# Create an array to store the names of the masked datasets. 
          @masked_names = ();

# Mask the objects in each frame.  Make a copy of the @quad_names
# so we can shift its elements.  Again use a local $Frm.
          @local_quad_names = @quad_names;
          foreach $Frm ( $Grp->members ) {
             $file = shift( @local_quad_names );
             $maskfile = shift( @maskfiles );
             $Frm->file( $file );
             _MASK_OBJECTS_ MASKFILE=$maskfile

# Record the masked (or unmasked file if the masking has failed)
# filename into an array.
             push ( @masked_names, $Frm->file );
          }

# Set the group names to be the masked ones to form improved flat field.
          $Grp->membernames( @masked_names );

# Generate the new flat field using the jittered masked frames.
          _MAKE_FLAT_FROM_GROUP_ 

# Reset the group names to be the ones to flat field.
          $Grp->membernames( @quad_names );

# Apply the better flat field.
          _DIVIDE_BY_FLAT_FROM_GROUP_
       }
    }

# Restore the original group.
    $Grp = $mainGrp;
    $Grp->template( $Frm->file );
