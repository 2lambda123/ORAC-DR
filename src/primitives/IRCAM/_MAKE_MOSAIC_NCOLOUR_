#+
# Name:
#    _MAKE_MOSAIC_NCOLOUR_
#
# Purpose:
#    Forms a mosaic for a JITTER_SELF_FLAT_NCOLOUR recipe.
#
# Language:
#    Perl5
#
# Description:
#    This primitive makes an untrimmed mosaic from the object frames in
#    the sub-group matching the current frame's filter and cycle number.
#    It is part of a JITTER_SELF_FLAT_NCOLOUR recipe.
#
#    It merely calls the standard _MAKE_MOSAIC_ primitive using the
#    sub-group instead of the current $Grp.
#
# Arguments:
#    FILLBAD = LOGICAL (Given)
#       If true (1), replace the bad pixels in the current cycle's
#       mosaic with a smooth function derived from its neighbours. 
#       Otherwise, leave the bad pixels unaltered.  [1]
#    INT_METHOD = CHARACTER (Given)
#       The interpolation method.  This is either "linint" for bi-linear
#       interpolation, or "nearest" for nearest neighbour.  The latter
#       takes about half the time.  ["linint"]
#    RESAMPLE = LOGICAL (Given)
#       If true (1), resample the current cycle's frames to the same
#       Cartesian co-ordinate system using the method given by argument
#       INT_METHOD.  If false (0), use integer offsets and changes of
#       origin to register the frames.  The latter is many times
#       faster and is recommended for pipeline operation.
#
# Notes:
#    -  This primitive is suitable for both UFTI and IRCAM.
#    -  Processing only occurs when the steering header MAKE_MOSAIC is
#    true.
#    -  The group steering header <filter>_GROUP is used to access
#    the sub-group for the current frame's filter.
#    -  The steering header CYCLE_NUMBER specifies the cycle number.
#    -  The default value of the OPTOV argument of _MAKE_MOSAIC_ is used.

# Authors:
#    MJC: Malcolm J. Currie (JAC)
#
# Copyright:
#    Copyright (C) 1998-2000 Particle Physics and Astronomy Research
#    Council.  All Rights Reserved.
#
#-

# Arguments
# =========

# Obtain the value for the interpolation.
    my $intmethod = ( $_MAKE_MOSAIC_NCOLOUR_{INT_METHOD} || "linint" );

# Determine whether or not to fill bad pixels.
    my $fillbad = $_MAKE_MOSAIC_NCOLOUR_{FILLBAD};
    $fillbad = defined( $fillbad ) ? $fillbad : 1;

# Determine whether or not to resample.
    my $resample = $_MAKE_MOSAIC_NCOLOUR_{RESAMPLE};
    $resample = defined( $resample ) ? $resample : 1;

# Selection
# =========

# Test whether or not it is time to make a mosaic.
    my $makemos = $Frm->hdr( "MAKE_MOSAIC" );
    if ( $makemos ) {

# Obtain the filter.
       my $filter = $Frm->hdr( "FILTER" );

# Use the filter sub-group stored by reference in the internal group
# headers.  This sub-group essentially replaces $Grp in comparison with
# _GENERATE_OFFSETS_JITTER_.
       my $filterGrp = $Grp->uhdr( $filter . "_GROUP" );

# Obtain the cycle number from the header.
       my $cycleno = $Frm->hdr( "CYCLE_NUMBER" );
       $cycleno = defined( $cycleno ) ? $cycleno : 0;

# Select those members in the current cycle.
       my $cycleGrp = $filterGrp->subgrp( CYCLE_NUMBER => $cycleno );

# Need to propagate the filter sub-group file name to the cycle sub-group.
       $cycleGrp->file( $filterGrp->file );

# Make the mosaic.
# ================

# Make the group of frames of the appropriate filter in the current cycle
# the local version of $Grp within the context delimited by the braces.
# The mosaic name is the group name.  Define outside the context so that
# it persists when the Grp reverts to the filter sub-group.
       my $mosname;
       {
          my $Grp = $cycleGrp;

# Make an untrimmed mosaic using the supplied parameters.
          _MAKE_MOSAIC_ INT_METHOD=$intmethod FILLBAD=$fillbad RESAMPLE=$resample TRIM=0

# The group name is changed in _MAKE_MOSAIC_ to the mosaic name. 
# However, that's only for the cycle sub-group, not the filterGrp.  So 
# save the name outside this group context, and modify the file
# associated with filterGrp.
          $mosname = $Grp->file;
       }
       $filterGrp->file( $mosname );

    }

# Podule
# ======

=head1 NAME

_MAKE_MOSAIC_NCOLOUR_ -- Forms a mosaic for a JITTER_SELF_FLAT_NCOLOUR recipe.

=head1 DESCRIPTION

This primitive makes an untrimmed mosaic from the object frames in
the sub-group matching the current frame's filter and cycle number.
It is part of a JITTER_SELF_FLAT_NCOLOUR recipe.

It merely calls the standard _MAKE_MOSAIC_ primitive using the
sub-group instead of the current $Grp.

=head1 ARGUMENTS

=over 4

=item FILLBAD = LOGICAL (Given)

If true (1), replace the bad pixels in the current cycle's
mosaic with a smooth function derived from its neighbours. 
Otherwise, leave the bad pixels unaltered.  [1]

=item INT_METHOD = CHARACTER (Given)

The interpolation method.  This is either "linint" for bi-linear
interpolation, or "nearest" for nearest neighbour.  The latter
takes about half the time.  ["linint"]

=item RESAMPLE = LOGICAL (Given)

If true (1), resample the current cycle's frames to the same
Cartesian co-ordinate system using the method given by argument
INT_METHOD.  If false (0), use integer offsets and changes of
origin to register the frames.  The latter is many times
faster and is recommended for pipeline operation.

=back

=head1 NOTES

=over 4

=item *

This primitive is suitable for both UFTI and IRCAM.

=item *

Processing only occurs when the steering header MAKE_MOSAIC is
true.

=item *

The group steering header E<lt>filterE<gt>_GROUP is used to access
the sub-group for the current frame's filter.

=item *

The steering header CYCLE_NUMBER specifies the cycle number.

=item *

The default value of the OPTOV argument of _MAKE_MOSAIC_ is used.

=back

=head1 AUTHORS

MJC: Malcolm J. Currie (JAC)

=head1 COPYRIGHT

Copyright (C) 1998-2000 Particle Physics and Astronomy Research
Council.  All Rights Reserved.

=cut
