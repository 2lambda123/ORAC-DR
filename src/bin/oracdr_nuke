#!/usr/local/bin/perl

=head1 NAME

oracdr_nuke - kill all ORAC-DR related processes and shared memory

=head1 SYNOPSIS

  oracdr_nuke

=head1 DESCRIPTION

Attempt to kill all ORAC-DR related processes and shared memory that
can be found and that are associated with the current user.

=head1 NOTES

=over 4

=item *

All shared memory owned by the current user is removed even if
it is not directly associated with an ORAC-DR process.

=item * 

Will not attempt to remove shared memory owned by another user.

=item *

Will attempt to kill processes owned by other users even though
this will not succeed unless the user has special privilege.

=item *

Does not attempt to clear out ADAM_USER directories. This is not
normally a problem for ORAC-DR since each ORAC-DR process works
in a different ADAM_USER directory.

=item *

Takes an optional C<-nogaia> option. If this option is present on the
command line, then GAIA processes will not be killed.

=back

=head1 AUTHORS

Frossie Economou (frossie@jach.hawaii.edu),
Tim Jenness (t.jenness@jach.hawaii.edu),
Alasdair Allan (aa@astro.ex.ac.uk),
Brad Cavanagh (b.cavanagh@jach.hawaii.edu)

=head1 REVISION

$Id$

=head1 COPYRIGHT

Copyright (C) 1996-2006 Particle Physics and Astronomy Research Council.
All Rights Reserved.

=cut

use strict;

# ORAC modules
use lib $ENV{ORAC_PERL5LIB};
use ORAC::Nuke;

# General modules
use Sys::Hostname;

$| = 1;

# Check if we're nuking GAIA or not.
my $nogaia = 0;
if( @ARGV ) {
  my $arg = shift;
  if( $arg =~ /^-nogaia$/i ) {
    $nogaia = 1;
  }
}

# Get date and time
my $date = scalar(localtime);
my $host = hostname;

# Open log in $ORAC_DATA_OUT
if (exists $ENV{ORAC_DATA_OUT}) {

  open ( LOG, ">> $ENV{ORAC_DATA_OUT}/oracdr_nuke.log")
    || warn 'Could not open log file in ORAC_DATA_OUT';

  print LOG "$date by $ENV{'USER'} on $host (perl $]) OS $^O\n";

  close(LOG);
}

# Attempt to kill oracdr processes

print "Killing ORAC-DR processes...";
orac_proc_kill('oracdr|MessageRelay', 'oracdr_nuke');
print "Done\n";

# Starlink processes

print "Killing Starlink processes...";
my $exclude = "oracdr_nuke|start";
if( $nogaia ) {
  $exclude .= "|gaia";
}
orac_proc_kill('\/star', $exclude);
print "Done\n";

# Shared memory
print "Removing shared memory...";
orac_ipcs_kill();
print "Done\n";

#
print "\n\t\toracdr_nuke- Nuke complete for user $ENV{'USER'}.\n\n";

exit;
