Making a Starlink release
-------------------------

[NOTE that $ORAC_DIR is defined as $STARLINK_DIR/bin/oracdr/src/
for compatibility with earlier definitions. In this document
$ORAC_ROOT is the top level of the repository checkout tree]

[NOTE we do not delete the $ORAC_ROOT/.git tree since it is easy
to keep the tree in sync if it is a valid git repository. Use git:
url so that remote users can update from the branch]

The following steps are required to make a starlink release of ORAC-DR:

- Update  $ORAC_ROOT/oracdr.news file and commit it to the repository

- Create a branch named after the corresponding Starlink release

- Check out the branch in the $STARLINK_DIR/bin/oracdr install tree
  (or if a pre-existing checkout exists, switch to a new tracking branch)

- run src/version.sh and redirect to the root directory

    cd $ORAC_ROOT
    src/version.sh > oracdr.version

- Remove any instruments from src/recipes/, src/primitives/, and cal/ that are not
  ready for release

- Create documents:

  Set $ORAC_DIR and $ORAC_PERL5LIB as appropriate

  sun230: Set the ORAC_INSTRUMENT environment variable to
  UFTI2. Run the sun230.pl script, then 'star2html sun230.tex'.

  sun233: Run the mkinclude.csh script, then 'star2html sun233.tex'.

- Copy the .tex, .ps, and .eps files into $STARCONF_DEFAULT_PREFIX/docs. Copy
  the .htx directories into $STARCONF_DEFAULT_PREFIX/docs.

- Remove the $ORAC_DIR/docs, /t and /uml directories [OPTIONAL]

- Run the oracdr/admin/nongeneric_imaging.csh (remembering to set
  ORAC_DIR). Remove the 'admin' directory.

- If you have been using a staging direcotry copy everything into
  $STARCONF_DEFAULT_STARLINK/oracdr.
